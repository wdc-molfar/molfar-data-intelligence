(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0da58f"],{"6ae3":function(e,t,s){"use strict";s.r(t);var n=function(){var e=this,t=e._self._c;return t("pre",{},[e._v("\r\n"),e._l(e.messages,(function(s,n){return t("span",{key:n,class:s["class"]},[e._v(e._s(s.text)+"\r\n")])})),e._v("  \r\n")],2)},o=[],i=s("c555"),c=s("4e14"),l=function(){var e=this,t=e._self._c;return t("config-dialog",{attrs:{options:e.props,submit:e.submit}})},r=[],a=s("a410"),h={name:"EduEditorConfig",components:{"config-dialog":a["a"]},props:["options","submit"],computed:{props(){return{icon:this.options.config.icon,title:`edu-editor-widget: ${this.options.config.id} ${this.options.config.name}`,config:this.options.config,editorTree:this.editorTree}}},data(){return{editorTree:[{name:"Configuration",children:[{name:"Widget",editor:()=>s.e("chunk-2d226cca").then(s.bind(null,"e9cc"))},{name:"Style",editor:()=>s.e("chunk-55e9e634").then(s.bind(null,"c59e"))},{name:"Options",editor:()=>Promise.all([s.e("chunk-3d2e32d9"),s.e("chunk-0ad95c16")]).then(s.bind(null,"41f1"))}]}]}}},d=h,u=s("2877"),f=Object(u["a"])(d,l,r,!1,null,null,null),p=f.exports,g={name:"edu-console-widget",icon:"mdi-console-line",mixins:[i["a"],c["a"]],data:()=>({messages:[],listen:!1}),methods:{onUpdate({data:e}){e.active?this.addListeners():this.removeListeners()},push(e,t){let s={log:"secondary--text",clear:"secondary--text font-weight-light",warn:"warning--text",error:"error--text",info:"info--text",dir:"secondary--text",trace:"error--text",debug:"accent--text"};this.messages.push({class:s[e],text:t}),this.$nextTick(()=>{this.$el.scrollTop=this.$el.scrollHeight-this.$el.clientHeight})},addListeners(){this.listen||(this.on({event:"console.log",callback:e=>{this.push("log",e)}}),this.on({event:"console.warn",callback:e=>{this.push("warn",e)}}),this.on({event:"console.error",callback:e=>{this.push("error",e)}}),this.on({event:"console.debug",callback:e=>{this.push("debug",e)}}),this.on({event:"console.info",callback:e=>{this.push("info",e)}}),this.on({event:"console.dir",callback:e=>{this.push("dir",e)}}),this.on({event:"console.trace",callback:e=>{this.push("trace",e)}}),this.on({event:"console.clear",callback:e=>{this.messages=[],this.push("clear","--- Console was cleared ---")}}),this.listen=!0,this.push("clear","--- Console was started ---"))},removeListeners(){this.off("console.log"),this.off("console.debug"),this.off("console.dir"),this.off("console.info"),this.off("console.warn"),this.off("console.error"),this.off("console.trace"),this.off("console.clear"),this.listen=!1,this.push("clear","--- Console was stopped ---")},onReconfigure(e){return this.$dialogManager.showAndWait(p,{width:"90%"},{config:e})}},props:["config"],created(){},mounted(){this.$emit("init")}},m=g,b=Object(u["a"])(m,n,o,!1,null,null,null);t["default"]=b.exports}}]);
//# sourceMappingURL=chunk-2d0da58f.34d60295.js.map