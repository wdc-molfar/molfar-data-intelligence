{"version":3,"sources":["webpack:///./src/components/core/ext/screenshot.vue?a943","webpack:///src/components/core/ext/screenshot.vue","webpack:///./src/components/core/ext/screenshot.vue?0883","webpack:///./src/components/core/ext/screenshot.vue","webpack:///./node_modules/dom-to-image-improved/src/dom-to-image-improved.js"],"names":["render","_vm","this","_c","_self","attrs","imageRef","_e","staticRenderFns","name","props","node","data","watch","newContent","console","log","toPng","then","dataUrl","catch","error","n","cloneNode","document","body","appendChild","$nextTick","removeChild","$emit","component","global","util","newUtil","inliner","newInliner","fontFaces","newFontFaces","images","newImages","defaultOptions","imagePlaceholder","undefined","cacheBust","useCredentials","domtoimage","toSvg","toJpeg","toBlob","toPixelData","toCanvas","impl","options","copyOptions","Promise","resolve","filter","embedFonts","inlineImages","applyOptions","clone","makeSvgDataUri","width","height","bgcolor","style","backgroundColor","Object","keys","forEach","property","draw","canvas","getContext","getImageData","toDataURL","quality","canvasToBlob","domNode","makeImage","delay","image","scale","newCanvas","ctx","drawImage","sx","sy","sw","sh","dx","dy","dw","dh","createElement","fillStyle","fillRect","root","makeNodeCopy","cloneChildren","processClone","HTMLCanvasElement","original","children","tagName","copyShadowChild","childNodes","length","cloneChildrenInOrder","asArray","parent","done","child","childClone","getElementById","href","baseVal","replace","Element","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","copyStyle","source","target","copyProperties","setProperty","getPropertyValue","getPropertyPriority","cssText","font","window","getComputedStyle","isChrome","marker","clonePseudoElement","element","content","className","uid","currentClass","getAttribute","setAttribute","styleElement","formatPseudoElementStyle","selector","formatCssText","formatCssProperties","createTextNode","map","formatProperty","join","HTMLTextAreaElement","innerHTML","value","HTMLInputElement","SVGElement","SVGRectElement","attribute","resolveAll","styleNode","inlineAll","XMLSerializer","serializeToString","escapeXhtml","xhtml","foreignObject","svg","escape","parseExtension","mimeType","dataAsUrl","isDataUrl","resolveUrl","getAndEncode","mimes","WOFF","JPEG","url","match","exec","extension","toLowerCase","search","binaryString","atob","split","binaryArray","Uint8Array","i","charCodeAt","Blob","type","baseUrl","doc","implementation","createHTMLDocument","base","head","a","index","fourRandomChars","Math","random","pow","toString","slice","uri","reject","Image","crossOrigin","onload","onerror","src","TIMEOUT","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","ontimeout","timeout","responseType","withCredentials","open","send","readyState","status","encoder","FileReader","onloadend","result","readAsDataURL","response","fail","message","string","navigator","userAgent","ms","arg","setTimeout","arrayLike","array","push","leftBorder","px","rightBorder","scrollWidth","topBorder","bottomBorder","scrollHeight","styleProperty","parseFloat","URL_REGEX","shouldProcess","readUrls","inline","get","urlAsRegex","RegExp","nothingToInline","urls","readAll","webFonts","all","webFont","cssStrings","styleSheets","getCssRules","selectWebFontRules","rules","newWebFont","cssRules","rule","CSSRule","FONT_FACE_RULE","sheet","hasOwnProperty","bind","e","webFontRule","parentStyleSheet","newImage","inlineBackground","HTMLImageElement","background","inlined","module","exports"],"mappings":"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","file":"js/chunk-6fa875de.a6e833e5.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.imageRef)?_c('img',{attrs:{\"src\":_vm.imageRef}}):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <img v-if=\"imageRef\" :src=\"imageRef\"></img>\r\n</template>\r\n\r\n<script>\r\n\r\nimport domtoimage from 'dom-to-image-improved';\r\n\r\nexport default {\r\n\r\n  name: \"screenshot\",\r\n\r\n  // template: '<div></div>',\r\n\r\n  props: {\r\n    node:{}\r\n  },\r\n\r\n  data: () => {\r\n    return {\r\n      imageRef: null\r\n    };\r\n  },\r\n\r\n  \r\n  watch: {\r\n\r\n    node: function(newContent) {\r\n      console.log(newContent)\r\n      if(newContent){\r\n        domtoimage.toPng(newContent)\r\n          .then(dataUrl => {\r\n              this.imageRef = dataUrl\r\n          })\r\n          .catch(function (error) {\r\n              console.error('Rendering Error ', error);\r\n          });\r\n      }\r\n    }\r\n\r\n  },\r\n\r\n  mounted() {\r\n    if(this.node){\r\n      let n =this.node.cloneNode(true)\r\n      console.log(n)\r\n      document.body.appendChild(n)\r\n      this.$nextTick(() => {\r\n        domtoimage.toPng(n)\r\n          .then(dataUrl => {\r\n              this.imageRef = dataUrl\r\n              document.body.removeChild(n)\r\n          })\r\n          .catch(function (error) {\r\n              console.error('Rendering Error ', error);\r\n              document.body.removeChild(n)\r\n          });  \r\n      })\r\n      \r\n    }\r\n    \r\n    \r\n    this.$emit(\"mount\", this)\r\n  }\r\n\r\n\r\n}\r\n\r\n</script>\r\n","import mod from \"-!../../../../build/vuetify-loader/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../build/jace-loader/src/parser.js??ref--20-3!../../../../build/jace-loader/src/parser.js??ref--18-1!../../../../build/jace-loader/src/parser.js??ref--33-1!./screenshot.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../build/vuetify-loader/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../build/jace-loader/src/parser.js??ref--20-3!../../../../build/jace-loader/src/parser.js??ref--18-1!../../../../build/jace-loader/src/parser.js??ref--33-1!./screenshot.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./screenshot.vue?vue&type=template&id=27a0ffda&\"\nimport script from \"./screenshot.vue?vue&type=script&lang=js&\"\nexport * from \"./screenshot.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","(function(global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false,\n        // Use (existing) authentication credentials for external URIs (CORS requests)\n        useCredentials: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        toCanvas: toCanvas,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof exports === \"object\" && typeof module === \"object\")\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n     defaults to 1.0.\n     * @param {Number} options.scale - a Number multiplier to scale up the canvas before rendering to reduce fuzzy images, defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n        .then(function(node) {\n            return cloneNode(node, options.filter, true);\n        })\n        .then(embedFonts)\n        .then(inlineImages)\n        .then(applyOptions)\n        .then(function(clone) {\n            return makeSvgDataUri(clone,\n              options.width || util.width(node),\n              options.height || util.height(node)\n            );\n        });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function(property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n        .then(function(canvas) {\n            return canvas.getContext('2d').getImageData(\n              0,\n              0,\n              util.width(node),\n              util.height(node)\n            ).data;\n        });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n        .then(function(canvas) {\n            return canvas.toDataURL();\n        });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n        .then(function(canvas) {\n            return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n        });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n        .then(util.canvasToBlob);\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a canvas object\n     * */\n    function toCanvas(node, options) {\n        return draw(node, options || {});\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if (typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if (typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n\n        if(typeof(options.useCredentials) === 'undefined') {\n            domtoimage.impl.options.useCredentials = defaultOptions.useCredentials;\n        } else {\n            domtoimage.impl.options.useCredentials = options.useCredentials;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n        .then(util.makeImage)\n        .then(util.delay(100))\n        .then(function(image) {\n            var scale = typeof(options.scale) !== 'number' ? 1 : options.scale;\n            console.log('scale', scale);\n            var canvas = newCanvas(domNode, scale);\n            var ctx = canvas.getContext('2d');\n            if (image) {\n                //console.log('should be scaled', image);\n                ctx.scale(scale, scale);\n                //canvas.height = 620;\n                //ctx.drawImage(image, 150, 600, 1150, 700, 0, 0, 1150, 700);\n                // canvas.height = options.image.height + 50;\n                // //canvas.width = options.image.width - 135;// - options.image.offsetRight\n                // canvas.width = options.image.width - options.image.offsetRight - options.image.offsetLeft + 60;\n                // ctx.drawImage(image, options.image.offsetLeft, options.image.offsetTop - 50, options.image.width, options.image.height + 50, 0, 0, options.image.width, options.image.height);\n\n                if (options.canvas && options.canvas.width) {\n                    canvas.width = options.canvas.width;\n                }\n\n                if (options.canvas && options.canvas.height) {\n                    canvas.height = options.canvas.height;\n                }\n\n                if (options.canvas) {\n                    console.log('canv', options.canvas);\n                    ctx.drawImage(\n                      image,\n                      options.canvas.sx  || 0,\n                      options.canvas.sy || 0,\n                      options.canvas.sw || options.width,\n                      options.canvas.sh || options.height,\n                      options.canvas.dx || 0,\n                      options.canvas.dy || 0,\n                      options.canvas.dw || options.width,\n                      options.canvas.dh || options.height\n                    );\n                } else {\n                    ctx.drawImage(image, 0, 0);\n                }\n\n            }\n            return canvas;\n        });\n\n        function newCanvas(domNode, scale) {\n            var canvas = document.createElement('canvas');\n            canvas.width = (options.width || util.width(domNode)) * scale;\n            canvas.height = (options.height || util.height(domNode)) * scale;\n\n            console.log(canvas.width, canvas.height);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n        .then(makeNodeCopy)\n        .then(function(clone) {\n            return cloneChildren(node, clone, filter);\n        })\n        .then(function(clone) {\n            return processClone(node, clone);\n        });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.tagName === 'use' ? copyShadowChild(original) : original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n            .then(function() {\n                return clone;\n            });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function(child) {\n                    done = done\n                    .then(function() {\n                        return cloneNode(child, filter);\n                    })\n                    .then(function(childClone) {\n                        if (childClone) parent.appendChild(childClone);\n                    });\n                });\n                return done;\n            }\n        }\n\n        function copyShadowChild(original) {\n            var child = document.getElementById(original.href.baseVal.replace('#', ''));\n            return [child.cloneNode(true)];\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n            .then(cloneStyle)\n            .then(clonePseudoElements)\n            .then(copyUserInput)\n            .then(fixSvg)\n            .then(function() {\n                return clone;\n            });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                if (util.isChrome() && clone.style.marker && ( clone.tagName === 'line' || clone.tagName === 'path')) {\n                    clone.style.marker = '';\n                }\n\n                function copyStyle(source, target) {\n                    if (source.cssText) {\n                        target.cssText = source.cssText;\n                        target.font = source.font; // here, we re-assign the font prop.\n                    } else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function(name) {\n                            target.setProperty(\n                              name,\n                              source.getPropertyValue(name),\n                              source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function(element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    var currentClass = clone.getAttribute('class');\n                    if (currentClass) {\n                        clone.setAttribute('class', currentClass + ' ' + className);\n                    }\n\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                            .map(formatProperty)\n                            .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                  style.getPropertyValue(name) +\n                                  (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function(attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n        .then(function(cssText) {\n            var styleNode = document.createElement('style');\n            node.appendChild(styleNode);\n            styleNode.appendChild(document.createTextNode(cssText));\n            return node;\n        });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n        .then(function() {\n            return node;\n        });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n        .then(function(node) {\n            node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n            return new XMLSerializer().serializeToString(node);\n        })\n        .then(util.escapeXhtml)\n        .then(function(xhtml) {\n            return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n        })\n        .then(function(foreignObject) {\n            return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n              foreignObject + '</svg>';\n        })\n        .then(function(svg) {\n            return 'data:image/svg+xml;charset=utf-8,' + svg;\n        });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            isChrome: isChrome,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)(\\?|$)/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function(resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function(resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function() {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            if (uri === 'data:,') return Promise.resolve();\n            return new Promise(function(resolve, reject) {\n                var image = new Image();\n                if(domtoimage.impl.options.useCredentials) {\n                    image.crossOrigin = 'use-credentials';\n                }\n                image.onload = function() {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if (domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function(resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                if(domtoimage.impl.options.useCredentials) {\n                    request.withCredentials = true;\n                }\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if (domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if (split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if (placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function() {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if (placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function isChrome() {\n            return /chrome/i.test( navigator.userAgent );\n        }\n\n        function delay(ms) {\n            return function(arg) {\n                return new Promise(function(resolve) {\n                    setTimeout(function() {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function(url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n            .then(function(url) {\n                return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n            })\n            .then(get || util.getAndEncode)\n            .then(function(data) {\n                return util.dataAsUrl(data, util.mimeType(url));\n            })\n            .then(function(dataUrl) {\n                return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n            });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n            .then(readUrls)\n            .then(function(urls) {\n                var done = Promise.resolve(string);\n                urls.forEach(function(url) {\n                    done = done.then(function(string) {\n                        return inline(string, url, baseUrl, get);\n                    });\n                });\n                return done;\n            });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n            .then(function(webFonts) {\n                return Promise.all(\n                  webFonts.map(function(webFont) {\n                      return webFont.resolve();\n                  })\n                );\n            })\n            .then(function(cssStrings) {\n                return cssStrings.join('\\n');\n            });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n            .then(getCssRules)\n            .then(selectWebFontRules)\n            .then(function(rules) {\n                return rules.map(newWebFont);\n            });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                .filter(function(rule) {\n                    return rule.type === CSSRule.FONT_FACE_RULE;\n                })\n                .filter(function(rule) {\n                    return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function(sheet) {\n                    if (sheet.hasOwnProperty(\"cssRules\")) {\n                        try {\n                            util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                        } catch (e) {\n                            console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                        }\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function() {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                .then(get || util.getAndEncode)\n                .then(function(data) {\n                    return util.dataAsUrl(data, util.mimeType(element.src));\n                })\n                .then(function(dataUrl) {\n                    return new Promise(function(resolve, reject) {\n                        element.onload = resolve;\n                        // for any image with invalid src(such as <img src />), just ignore it\n                        element.onerror = resolve;\n                        element.src = dataUrl;\n                    });\n                });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n            .then(function() {\n                if (node instanceof HTMLImageElement)\n                    return newImage(node).inline();\n                else\n                    return Promise.all(\n                      util.asArray(node.childNodes).map(function(child) {\n                          return inlineAll(child);\n                      })\n                    );\n            });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                .then(function(inlined) {\n                    node.style.setProperty(\n                      'background',\n                      inlined,\n                      node.style.getPropertyPriority('background')\n                    );\n                })\n                .then(function() {\n                    return node;\n                });\n            }\n        }\n    }\n})(this);\n"],"sourceRoot":""}