{"version":3,"sources":["webpack:///./src/components/widgets/form/form.vue?7682","webpack:///./src/components/widgets/form/mixins/form-access.mixin.js","webpack:///./src/components/widgets/form/parts/index.js","webpack:///src/components/widgets/form/form.vue","webpack:///./src/components/widgets/form/form.vue?1aef","webpack:///./src/components/widgets/form/form.vue","webpack:///./node_modules/vuetify/lib/components/VGrid/VContainer.js","webpack:///./node_modules/vuetify/lib/components/VTabs/VTabItem.js","webpack:///./src/components/widgets/form/mixins/dps/answer-export.dps","webpack:///./src/components/widgets/form/mixins/dps/answer-get-all.dps","webpack:///./src/components/widgets/form/mixins/dps/answer-get.dps","webpack:///./src/components/widgets/form/mixins/dps/answer-load-stat.dps","webpack:///./src/components/widgets/form/mixins/dps/answer-update.dps","webpack:///./src/components/widgets/form/mixins/dps/form-create-or-replace.dps","webpack:///./src/components/widgets/form/mixins/dps/form-delete.dps","webpack:///./src/components/widgets/form/mixins/dps/form-export.dps","webpack:///./src/components/widgets/form/mixins/dps/form-extend.dps","webpack:///./src/components/widgets/form/mixins/dps/form-get.dps","webpack:///./src/components/widgets/form/mixins/dps/stat-get.dps","webpack:///./src/components/widgets/form/mixins/dps/user-find.dps","webpack:///./src/components/widgets/form/mixins/dps/dps-scripts.js","webpack:///./src/components/widgets/form/mixins/form-io.mixin.js"],"names":["render","_vm","this","_c","_self","isProductionMode","form","access","available","attrs","staticClass","_v","_s","title","note","type","on","$event","$djvue","login","_e","staticStyle","config","enabled","_g","app","user","photo","name","needUpdateAnswer","submitForm","model","value","callback","$$v","active","expression","key","updateFormLocale","updateFormAccess","timeAgo","lastNotificatedAt","onExportResponses","eChartOptions","staticRenderFns","methods","param","queryString","uri","JSON","parse","stringify","window","location","href","replace","RegExp","$0","$1","$2","$3","console","log","isAdmin","isOwner","isCollaborator","apikey","getQueryString","id","randomName","icon","email","invitedRespondent","users","u","mixins","components","computed","chartOptions","exportResponses","then","url","d","Date","fromNow","loadForm","initiateForm","catch","e","error","toString","loading","updateForm","needExtendForm","extendForm","updateAnswer","answer","setNeedSave","widgets","skin","holders","map","h","forEach","w","concat","currentPage","forms","filter","length","warning","text","deleteForm","newMetadata","metadata","locale","notificationTemplate","f","app_name","required","editable","app_title","app_url","app_icon","form_title","form_note","$i18n","notificationSubject","questions","createForm","getStat","res","events","total","stat","emit","getResponseDynamic","maxResponses","r","redraw","tooltip","position","formatter","x","data","y","toFixed","Math","round","top","textBaseline","textStyle","fontSize","fontWeight","color","$vuetify","theme","themes","light","primary","singleAxis","left","height","boundaryGap","item","axisLabel","interval","axisLine","show","lineStyle","width","axisTick","series","singleAxisIndex","coordinateSystem","symbolSize","dataItem","itemStyle","opacity","p","progress","maxStage","createFormRequest","set","options","question","setTimeout","cancel","startsWith","origin","pathname","confirm","resolveText","rejectText","cloneForm","updateFormMetadata","setLocale","accessIsAlowed","loadAnswer","loadStatistic","$nextTick","props","watch","redrawStat","event","exportForm","rule","$parent","index","q","push","questionId","splice","a","$emit","component","VAvatar","VBtn","VCard","VCardText","VContainer","VDivider","VFlex","VLayout","VSpacer","VTab","VTabItem","VTabs","extend","functional","String","tag","default","fluid","Boolean","children","classes","Object","keys","domProps","class","Array","genWindowItem","call","answerExport","answerGetAll","answerGet","answerLoadStat","answerUpdate","formCreateOrReplace","formDelete","formExport","formExtend","formGet","statGet","userFind","random","substring","updatedAt","createddAt","$dps","run","script","state","cloned","createdAt","_id","formId","selectWidgets","$root","widget","$refs","instance","document","createElement","setAttribute","encodeURIComponent","click","form_id","dpsURL","_template","interpolate","to","subject","html","context","Promise","resolve","reject","date","start","level","defFormat","lo","startOf","format","hi","add","isSameOrAfter","isSameOrBefore","dLo","diff","dHi","responses","timeline","RStat","sort","b","getPoints","stop","titleFormat","points","stats","t","isSame","sum","reduce","max"],"mappings":"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","file":"js/chunk-082ba605.cf4db05e.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.isProductionMode && _vm.form && _vm.access.available == false)?_c('v-container',[_c('v-layout',{attrs:{\"column\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('h3',{staticClass:\"headline warning--text font-weight-light\"},[_vm._v(_vm._s(_vm.access.title))]),_c('p',{staticClass:\"subheading warning--text font-weight-light\"},[_vm._v(_vm._s(_vm.access.note))])]),_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"justify-end\":\"\"}},[(_vm.access.type == 'users')?_c('v-btn',{attrs:{\"text\":\"\",\"color\":\"warning\"},on:{\"click\":function($event){return _vm.$djvue.login()}}},[_vm._v(\"Login with Google\")]):_vm._e()],1)],1)],1),_c('v-divider'),_c('v-layout',{attrs:{\"align-center\":\"\",\"justify-end\":\"\",\"row\":\"\"}},[_c('p',{staticClass:\"ma-0 secondary--text font-weight-light\",staticStyle:{\"font-size\":\"10px\"}},[_vm._v(\"JACE FORMS SERVICE 2018-2021\")])])],1):_vm._e(),(_vm.isProductionMode && _vm.form && _vm.access.available == true)?_c('v-container',[(!_vm.form.config.access.enabled)?_c('v-layout',{staticClass:\"mx-0 my-2\",attrs:{\"align-center\":\"\",\"justify-end\":\"\",\"row\":\"\"}},[_c('p',{staticClass:\"subheading warning--text\"},[_vm._v(\"FORM IS CLOSED\")])]):_vm._e(),(_vm.form.config.access.enabled)?_c('v-layout',{staticClass:\"mx-0 my-2\",attrs:{\"align-center\":\"\",\"justify-end\":\"\",\"row\":\"\"}},[_c('div',{staticClass:\"primary--text\"},[_vm._v(\"\\n          Respondent: \\n        \")]),_c('v-avatar',_vm._g({staticClass:\"ml-2\",staticStyle:{\"border\":\"1px solid rgba(255, 255, 255, 0.3)\"},attrs:{\"size\":\"32\"}},_vm.on),[_c('dj-img',{attrs:{\"src\":_vm.app.user.photo,\"icon\":\"mdi-account\"}})],1),_c('div',{staticClass:\"caption pl-2\"},[_vm._v(\"\\n          \"+_vm._s(_vm.app.user.name)+\"\\n        \")]),_c('v-spacer'),_c('v-btn',{attrs:{\"text\":\"\",\"outlined\":\"\",\"color\":\"primary\",\"disabled\":!_vm.needUpdateAnswer},on:{\"click\":function($event){return _vm.submitForm()}}},[_vm._v(\"Submit form\")])],1):_vm._e(),_c('v-divider'),_c('v-layout',{attrs:{\"align-center\":\"\",\"justify-end\":\"\",\"row\":\"\"}},[_c('p',{staticClass:\"ma-0 secondary--text font-weight-light\",staticStyle:{\"font-size\":\"10px\"}},[_vm._v(\"JACE FORMS SERVICE 2018-2021\")])])],1):_vm._e(),(!_vm.isProductionMode)?_c('div',[(_vm.loading)?_c('div',{staticClass:\"text-xs-center\"}):_c('v-tabs',{model:{value:(_vm.active),callback:function ($$v) {_vm.active=$$v},expression:\"active\"}},[_c('v-tab',{key:\"general\",attrs:{\"ripple\":\"\"}},[_vm._v(\"General\")]),_c('v-tab',{key:\"access\",attrs:{\"ripple\":\"\"}},[_vm._v(\"Access\")]),(_vm.form.config.access.type=='invited')?_c('v-tab',{key:\"respondents\",attrs:{\"ripple\":\"\"}},[_vm._v(\"Respondents\")]):_vm._e(),_c('v-tab',{key:\"statistic\",attrs:{\"ripple\":\"\"}},[_vm._v(\"Statistic\")]),_c('v-tab-item',{key:\"general\",attrs:{\"ripple\":\"\"}},[_c('general-tab',{attrs:{\"form\":_vm.form},on:{\"update\":_vm.updateFormLocale}})],1),_c('v-tab-item',{key:\"access\",attrs:{\"ripple\":\"\"}},[_c('v-card',{attrs:{\"flat\":\"\"}},[_c('v-card-text',[_c('access-tab',{attrs:{\"form\":_vm.form},on:{\"update\":_vm.updateFormAccess}})],1)],1)],1),(_vm.form.config.access.type=='invited')?_c('v-tab-item',{key:\"respondents\",attrs:{\"ripple\":\"\"}},[_c('v-card',{attrs:{\"flat\":\"\"}},[_c('v-card-text',[_c('respondents-tab',{attrs:{\"form\":_vm.form},on:{\"update\":_vm.updateFormAccess}})],1)],1)],1):_vm._e(),_c('v-tab-item',{key:\"statistic\",attrs:{\"ripple\":\"\"}},[_c('v-card',{attrs:{\"flat\":\"\"}},[_c('v-container',[_c('v-layout',[_c('p',{staticClass:\"subheading\"},[_vm._v(\"\\n                Form \"+_vm._s(`${(_vm.form.config.access.enabled)?'was opened':'was closed'} ${(_vm.form.config.access.lastNotificatedAt)?_vm.timeAgo(_vm.form.config.access.lastNotificatedAt):''}`)+\"\\n              \")])]),_c('v-layout',{attrs:{\"row\":\"\",\"justify-end\":\"\"}},[_c('v-btn',{attrs:{\"text\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.onExportResponses}},[_vm._v(\"Export Responses\")])],1),_c('v-divider'),_c('echart',{attrs:{\"options\":_vm.eChartOptions,\"height\":\"150\"}})],1)],1)],1)],1)],1):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { find } from \"lodash\"\r\n\r\n\r\nexport default {\r\n\r\n  methods: {\r\n\r\n    getQueryString(param) {\r\n\r\n      var queryString = {};\r\n\r\n      let uri = JSON.parse(JSON.stringify(window.location.href));\r\n\r\n      uri.replace(\r\n        new RegExp(\"([^?=&]+)(=([^&]*))?\", \"g\"),\r\n        function($0, $1, $2, $3) { queryString[$1] = $3; }\r\n      );\r\n\r\n      return (param) ? queryString[param] : queryString\r\n    },\r\n\r\n    accessForOwner() {\r\n      // eslint-disable-next-line\r\n      console.log(\"accessForOwner \", (this.app.user.isAdmin || this.app.user.isOwner || this.app.user.isCollaborator))\r\n      return (this.app.user.isAdmin || this.app.user.isOwner || this.app.user.isCollaborator)\r\n    },\r\n\r\n    accessIsAlowed() {\r\n\r\n      if (!this.form.config.access.enabled && !this.app.user.isAdmin && !this.app.user.isOwner && !this.app.user.isCollaborator) {\r\n        return {\r\n          available: false,\r\n          title: \"Access denied\",\r\n          note: `Form was closed ${(this.form.config.access.lastNotificatedAt) ? this.timeAgo(this.form.config.access.lastNotificatedAt) : ''}.`\r\n        }\r\n      }\r\n\r\n      this.app.user.apikey = this.getQueryString(\"apikey\");\r\n\r\n      if (this.form.config.access.type == \"any\") {\r\n        this.app.user.id = this.$djvue.randomName()\r\n        this.app.user.name = \"Ananimous\"\r\n        this.app.user.icon = \"mdi-account-circle-outline\"\r\n        this.app.user.photo = \".\"\r\n        return { available: true }\r\n      }\r\n\r\n      console.log(\"Access for user\", this.app.user.email)\r\n\r\n      if (this.form.config.access.type == \"users\") {\r\n        if (this.app.user.email) return { available: true };\r\n\r\n        return {\r\n          available: false,\r\n          title: \"Access denied\",\r\n          note: \"Access is alowed for registered respondents. Use your Google+ account for signin.\",\r\n          type: \"users\"\r\n        }\r\n      }\r\n\r\n      if (this.form.config.access.type == \"invited\") {\r\n        if (!this.app.user.id && !this.app.user.apikey) {\r\n          return {\r\n            available: false,\r\n            title: \"Access denied\",\r\n            note: \"Access is alowed for invited respondents only.\"\r\n          }\r\n        }\r\n\r\n        let invitedRespondent = find(this.form.config.access.users, u => {\r\n\r\n          if (u.id && this.app.user.id) return u.id == this.app.user.id;\r\n          if (u.apikey && this.app.user.apikey) return u.apikey == this.app.user.apikey;\r\n          return false\r\n\r\n        })\r\n\r\n        if (invitedRespondent) {\r\n          this.app.user = invitedRespondent\r\n          return { available: true }\r\n        }\r\n\r\n        return {\r\n          available: false,\r\n          title: \"Access denied\",\r\n          note: \"Access is alowed for invited respondents only.\"\r\n        }\r\n      }\r\n\r\n      return { available: false }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","\r\nexport default {\r\n\r\n\t\"general-tab\" : () => import(\"./general-tab.vue\"),\r\n\t\"metadata-tab\": () => import(\"./metadata-tab.vue\"),\r\n\t\"access-tab\": () => import(\"./access-tab.vue\"),\r\n\t\"respondents-tab\": () => import(\"./respondents-tab.vue\"),\r\n\t\"echart\": () => import(\"@/components/core/ext/echart.vue\")\r\n\t\r\n}","<template>\r\n  <div>\r\n    <v-container v-if=\"isProductionMode && form && access.available == false\">\r\n      <v-layout column>\r\n        <v-flex xs12>\r\n          <h3 class=\"headline warning--text font-weight-light\">{{access.title}}</h3>\r\n          <p class=\"subheading warning--text font-weight-light\">{{access.note}}</p>\r\n        </v-flex>\r\n        <v-flex xs12>\r\n          <v-layout row justify-end>\r\n            <v-btn text color=\"warning\" v-if=\"access.type == 'users'\" @click=\"$djvue.login()\">Login with Google</v-btn>\r\n          </v-layout>\r\n        </v-flex>\r\n      </v-layout>\r\n      <v-divider></v-divider>\r\n      <v-layout align-center justify-end row>\r\n        <p class=\"ma-0 secondary--text font-weight-light\" style=\"font-size:10px;\">JACE FORMS SERVICE 2018-2021</p>\r\n      </v-layout>\r\n    </v-container>\r\n    \r\n    <v-container v-if=\"isProductionMode && form && access.available == true\">\r\n      <v-layout v-if=\"!form.config.access.enabled\" align-center justify-end row class=\"mx-0 my-2\">\r\n        <p class=\"subheading warning--text\">FORM IS CLOSED</p>\r\n      </v-layout>\r\n      <!-- <v-layout v-else align-center justify-start row class=\"mx-0 my-2\">\r\n          <response v-if=\"needUpdateAnswer\" :form=\"form\" :answer=\"answer\"></response>\r\n      </v-layout> -->\r\n      <v-layout v-if=\"form.config.access.enabled\" align-center justify-end row class=\"mx-0 my-2\">\r\n          <div class=\"primary--text\">\r\n            Respondent: \r\n          </div>\r\n          <v-avatar size=\"32\" class=\"ml-2\" v-on=\"on\" style=\"border: 1px solid rgba(255, 255, 255, 0.3);\">\r\n            <dj-img :src=\"app.user.photo\" icon=\"mdi-account\"></dj-img>\r\n          </v-avatar>\r\n          <div class=\"caption pl-2\">\r\n            {{app.user.name}}\r\n          </div>\r\n          <v-spacer></v-spacer>\r\n          <v-btn text outlined color=\"primary\" @click=\"submitForm()\" :disabled=\"!needUpdateAnswer\">Submit form</v-btn>  \r\n      </v-layout>\r\n      <v-divider></v-divider>\r\n      <v-layout align-center justify-end row>\r\n        <p class=\"ma-0 secondary--text font-weight-light\" style=\"font-size:10px;\">JACE FORMS SERVICE 2018-2021</p>\r\n      </v-layout>\r\n    </v-container>\r\n    <div v-if=\"!isProductionMode\">\r\n      <div v-if=\"loading\" class=\"text-xs-center\">\r\n      </div>\r\n      <v-tabs v-else v-model=\"active\">\r\n        <v-tab key=\"general\" ripple>General</v-tab>\r\n        <!--  <v-tab key=\"metadata\" ripple>Metadata</v-tab> -->\r\n        <v-tab key=\"access\" ripple>Access</v-tab>\r\n        <v-tab key=\"respondents\" ripple v-if=\"form.config.access.type=='invited'\">Respondents</v-tab>\r\n        <v-tab key=\"statistic\" ripple>Statistic</v-tab>\r\n        <v-tab-item key=\"general\" ripple>\r\n          <general-tab :form=\"form\" @update=\"updateFormLocale\"></general-tab>\r\n          <!-- <pre>{{JSON.stringify(form,null,\"\\t\")}}</pre> -->\r\n        </v-tab-item>\r\n        <v-tab-item key=\"access\" ripple>\r\n          <v-card flat>\r\n            <v-card-text>\r\n              <access-tab :form=\"form\" @update=\"updateFormAccess\"></access-tab>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-tab-item>\r\n        <v-tab-item key=\"respondents\" ripple v-if=\"form.config.access.type=='invited'\">\r\n          <v-card flat>\r\n            <v-card-text>\r\n              <respondents-tab :form=\"form\" @update=\"updateFormAccess\"></respondents-tab>\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-tab-item>\r\n        <v-tab-item key=\"statistic\" ripple>\r\n          <v-card flat>\r\n            <v-container>\r\n              <v-layout>\r\n                <p class=\"subheading\">\r\n                  Form {{`${(form.config.access.enabled)?'was opened':'was closed'} ${(form.config.access.lastNotificatedAt)?timeAgo(form.config.access.lastNotificatedAt):''}`}}\r\n                </p>\r\n              </v-layout>\r\n              <v-layout row justify-end>\r\n                <v-btn text color=\"primary\" @click=\"onExportResponses\">Export Responses</v-btn>\r\n              </v-layout>\r\n              <v-divider></v-divider>\r\n              <echart :options=\"eChartOptions\" height=\"150\"></echart>\r\n            </v-container>\r\n          </v-card>\r\n        </v-tab-item>\r\n      </v-tabs>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport djvueMixin from \"@/mixins/core/djvue.mixin.js\";\r\nimport listenerMixin from \"@/mixins/core/listener.mixin.js\";\r\nimport formIoMixin from \"./mixins/form-io.mixin.js\"\r\nimport formAccessMixin from \"./mixins/form-access.mixin.js\"\r\nimport components from \"./parts/index.js\"\r\nimport moment from \"moment\"\r\nimport { findIndex, isNumber, isUndefined, toPairs, max, flattenDeep } from \"lodash\"\r\n\r\n\r\n\r\nexport default {\r\n\r\n  name: \"form-widget\",\r\n\r\n  icon: \"mdi-cards-variant\",\r\n\r\n  mixins: [djvueMixin, listenerMixin, formIoMixin, formAccessMixin],\r\n\r\n  components,\r\n\r\n  computed: {\r\n    eChartOptions: function() {\r\n      // console.log(\"REDRAW \",this.chartOptions)\r\n      return this.chartOptions || {}\r\n    }\r\n  },\r\n\r\n  methods: {\r\n\r\n    onExportResponses() {\r\n      this.exportResponses(this.form.id)\r\n        .then(url => {\r\n          window.location.href = url\r\n        })\r\n    },\r\n\r\n    timeAgo(d) {\r\n      return moment(new Date(d)).fromNow();\r\n    },\r\n\r\n    onPageStart() {\r\n\r\n      this.loadForm(this.config.form)\r\n        .then(this.initiateForm)\r\n        .catch( e => {\r\n          console.error(e.toString())\r\n        })\r\n    },\r\n\r\n    onLayoutStart(){\r\n      this.loadForm(this.config.form)\r\n        .then((form) => {\r\n          this.initiateForm(form)\r\n        })\r\n        .catch( e => {\r\n          console.error(e.toString())\r\n        })\r\n\r\n    },\r\n\r\n    onSaveAppConfig() {\r\n      this.loading = true\r\n      this.updateForm(this.form)\r\n        .then(() => {\r\n          this.loading = false\r\n        })\r\n        .catch( e => {\r\n          console.error(e.toString())\r\n        })\r\n    },\r\n\r\n    submitForm() {\r\n      if (this.needExtendForm) {\r\n        this.extendForm(this.form)\r\n          .then(() => {\r\n            this.updateAnswer(this.answer)\r\n              .then(() => {\r\n                this.needExtendForm = false;\r\n                this.needUpdateAnswer = false;\r\n                this.setNeedSave(false);\r\n              })\r\n          })\r\n          .catch( e => {\r\n            console.error(e.toString())\r\n          })\r\n      } else {\r\n        this.updateAnswer(this.answer)\r\n          .then(() => {\r\n            this.needExtendForm = false;\r\n            this.needUpdateAnswer = false;\r\n            this.setNeedSave(false);\r\n          })\r\n          .catch( e => {\r\n            console.error(e.toString())\r\n          })\r\n      }\r\n    },\r\n\r\n    isDeleteAvailable() {\r\n\r\n      let widgets = [];\r\n\r\n      toPairs(this.app.config.skin.holders)\r\n        .map(h => h[1].widgets)\r\n        .forEach(w => {\r\n          widgets = widgets.concat(w)\r\n        })\r\n\r\n      toPairs(this.app.currentPage.holders)\r\n        .map(h => h[1].widgets)\r\n        .forEach(w => {\r\n          widgets = widgets.concat(w)\r\n        })\r\n\r\n      let forms = widgets.filter(w => w.type == \"question-widget\" || w.type == \"form-response-widget\")\r\n\r\n      if (forms.length > 0) {\r\n        this.$djvue.warning({\r\n          type: \"error\",\r\n          title: \"Cannot delete form\",\r\n          text: \"One or many questions or response reports detected on page. Delete all questions and reports before.\"\r\n        })\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    onDelete() {\r\n      this.deleteForm(this.form.id)\r\n    },\r\n\r\n    updateFormMetadata(newMetadata) {\r\n      this.form.metadata = newMetadata\r\n      this.setNeedSave(true)\r\n    },\r\n\r\n    updateFormLocale(locale) {\r\n      this.form.config.locale = locale\r\n      this.setNeedSave(true)\r\n    },\r\n\r\n    updateFormAccess(access) {\r\n\r\n      this.loading = true\r\n\r\n      if (access.enabled != this.config.enabled) {\r\n        this.form.config.access.lastNotificatedAt = new Date();\r\n      }\r\n\r\n      this.form.config.access = access;\r\n\r\n      this.updateForm(this.form).then(() => {\r\n        this.loading = false\r\n        this.setNeedSave(true)\r\n      })\r\n    },\r\n\r\n\r\n\r\n    createFormRequest() {\r\n\r\n      let notificationTemplate =\r\n        `\r\n<p>\r\n  Dear {{respondent.name || 'Respondent'}}!\r\n</p> \r\n<p>\r\n  We invite you to take part in the survey \r\n  <a href=\"{{metadata.app_url.value}}\">\r\n    {{metadata.app_title.value}}\r\n  </a>\r\n</p>\r\n\r\n`\r\n\r\n      let f = {\r\n        metadata: {\r\n          app_name: { value: this.app.config.name, required: true, editable: false },\r\n          app_title: { value: this.app.config.title, required: true, editable: false },\r\n          app_url: { value: window.location.href, required: true, editable: false },\r\n          app_icon: { value: this.app.config.icon, required: true, editable: false },\r\n          form_title: { value: \"Form title...\", required: true, editable: true },\r\n          form_note: { value: \"Form note...\", required: true, editable: true }\r\n        },\r\n        config: {\r\n          locale: this.$i18n.locale,\r\n          access: {\r\n            type: \"any\", // [\"any\",\"users\", \"invited\"]\r\n            enabled: false,\r\n            users: [],\r\n            notificationTemplate: notificationTemplate,\r\n            notificationSubject: \"DJVUE-FORMS\"\r\n          },\r\n          questions: []\r\n        }\r\n      }\r\n\r\n      return this.createForm(f)\r\n    },\r\n\r\n    loadStatistic() {\r\n\r\n      this.getStat(this.form.id)\r\n        .then(res => {\r\n          console.log(\"**************\", res)\r\n          \r\n          if(res.events.total == 0) return true\r\n\r\n          this.stat = res\r\n          this.emit(\"question-set-stat\", this.stat)\r\n\r\n\r\n          let d = this.getResponseDynamic(this.stat)\r\n\r\n          let maxResponses = max(d.map(r => r.value))\r\n          this.chartOptions = {\r\n            redraw: false,\r\n\r\n            tooltip: {\r\n              position: 'top',\r\n              formatter: d => {\r\n                let x = d.data[0];\r\n                let y = d.data[1];\r\n\r\n                x = (isNumber(x)) ? x.toFixed(2) : x;\r\n                // y = (_.isNumber(y)) ? y.toFixed(2) : y;\r\n                y = Math.round(y * maxResponses) + \" resp.\"\r\n                return x + \", \" + y\r\n              }\r\n            },\r\n\r\n            title: [{\r\n              top: 5,\r\n              textBaseline: 'middle',\r\n              text: \"respondent pulse\",\r\n              textStyle: {\r\n                fontSize: 12,\r\n                fontWeight: \"normal\"\r\n              }\r\n            }],\r\n\r\n            color: [this.$vuetify.theme.themes.light.primary],\r\n\r\n            singleAxis: [{\r\n              left: 150,\r\n              top: '5%',\r\n              height: '80%',\r\n              type: 'category',\r\n              boundaryGap: false,\r\n              data: d.map(item => item.title),\r\n              axisLabel: {\r\n                interval: 2\r\n              },\r\n              axisLine: {\r\n                show: true,\r\n                lineStyle: {\r\n                  width: 0.5\r\n                }\r\n              },\r\n              axisTick: {\r\n                show: false\r\n              }\r\n            }],\r\n            series: [{\r\n              singleAxisIndex: 0,\r\n              coordinateSystem: 'singleAxis',\r\n              type: 'scatter',\r\n              data: d.map(item => [item.title, item.height]),\r\n              symbolSize: function(dataItem) {\r\n                return dataItem[1] * 80 + 3;\r\n              },\r\n              itemStyle: {\r\n                opacity: 0.5\r\n              }\r\n            }]\r\n          }\r\n          return true\r\n          \r\n        })\r\n        .catch((e) => {\r\n          this.chartOptions = {}\r\n          console.error(\"Cannot load statistic \", e)\r\n        })\r\n\r\n    },\r\n\r\n    initiateForm(form) {\r\n\r\n      if(!form) {\r\n        if (!this.isProductionMode) {\r\n          this.$djvue.warning({\r\n            type: \"warning\",\r\n            title: \"Form is imported from another JACE service\",\r\n            text: `The form for this application will be created`\r\n          })\r\n          .then( () => {\r\n            \r\n            this.p = this.progress({\r\n                text:\"\", \r\n                maxStage:5, \r\n                title:\"Recreate Form\"\r\n            })\r\n\r\n            this.createFormRequest()\r\n              .then(res => {\r\n                console.log(res)\r\n                this.p.set({text:\"Scan widgets in current page\"})\r\n                this.config.form = res.id\r\n                res.config.questions = flattenDeep(toPairs(this.app.currentPage.holders).map( d => d[1].widgets))\r\n                    .filter( d => d.type == \"question-widget\")\r\n                    .map( d => ({\r\n                      id:d.id,\r\n                      options: d.question.options\r\n                    }))\r\n                \r\n                console.log(\"Updated form\", res)    \r\n\r\n                this.p.set({text:\"Syncronize Form with JACE service\"})\r\n                this.updateForm(res).then(() => {\r\n                  this.p.set({text:\"Initiate Form on current page\"})\r\n                  this.initiateForm(res)\r\n                  this.p.set({text:\"Form ready for use\"})\r\n                  setTimeout(() => {\r\n                    this.p.cancel()\r\n                    this.setNeedSave(true)\r\n                  }, 800)\r\n                })   \r\n              })\r\n            return\r\n          })\r\n        } else {\r\n          this.$djvue.warning({\r\n            type: \"error\",\r\n            title: \"Application is corrupted\"\r\n          })\r\n        }\r\n        return          \r\n      }\r\n\r\n      if (!form.metadata.app_url.value.startsWith(window.location.origin + window.location.pathname)) {\r\n\r\n        if (!this.isProductionMode) {\r\n          this.$djvue.warning({\r\n              type: \"warning\",\r\n              title: \"Form is imported from another application\",\r\n              text: `The form for this application will be cloned`\r\n            })\r\n            .then(() => {\r\n              this.cloneForm(form)\r\n                .then(res => {\r\n                  this.config.form = res.id\r\n                  this.initiateForm(res)\r\n                  this.setNeedSave(true)\r\n                })\r\n            })\r\n        } else {\r\n          this.$djvue.warning({\r\n            type: \"error\",\r\n            title: \"Application is corrupted\",\r\n          })\r\n          if (form.config.access.enabled) {\r\n            form.config.access.enabled = false;\r\n            this.updateFormAccess(form.access)\r\n          }\r\n\r\n        }\r\n\r\n      } else {\r\n        if (window.location.href != form.metadata.app_url.value) {\r\n          if (!this.isProductionMode) {\r\n            this.$djvue.confirm({\r\n                type: \"warning\",\r\n                title: \"Form and page mismath\",\r\n                text: `Current url ${window.location.href} but form ${form.id} links to ${form.metadata.app_url.value}`,\r\n                resolveText: \"Clone form\",\r\n                rejectText: \"Fix app link\"\r\n              })\r\n              .then(() => {\r\n                this.cloneForm(form)\r\n                  .then(res => {\r\n                    this.config.form = res.id\r\n                    this.initiateForm(res)\r\n                    this.emit(\"question-set-disable\", false)\r\n                    this.setNeedSave(true)\r\n                  })\r\n              })\r\n              .catch(() => {\r\n                form.metadata.app_url.value = window.location.href;\r\n                this.updateFormMetadata(form.metadata)\r\n                this.loading = true\r\n                this.updateForm(this.form).then(() => {\r\n                  this.loading = false\r\n                  this.emit(\"question-set-disable\", false)\r\n                })\r\n              })\r\n          } else {\r\n            this.$djvue.warning({\r\n              type: \"error\",\r\n              title: \"Application is corrupted\",\r\n            })\r\n            this.emit(\"question-set-disable\", true)\r\n            // if(form.config.access.enabled){\r\n            //   form.config.access.enabled = false;\r\n            //   this.updateFormAccess(form.access)\r\n            // }\r\n          }\r\n        } else {\r\n          this.emit(\"question-set-disable\", false)\r\n        }\r\n      }\r\n\r\n\r\n      this.form = form\r\n\r\n      this.emit(\"form-update\", form )\r\n\r\n      // if(form.config.access.enabled){\r\n      //   form.config.access.enabled = false;\r\n      //   this.updateFormAccess(form.config.access)\r\n      // }\r\n\r\n      let locale = form.config.locale || \"en\";\r\n      this.setLocale(locale);\r\n\r\n      form.config.access.users = form.config.access.users || []\r\n      form.config.questions = form.config.questions || []\r\n\r\n      // this.form = form\r\n      this.loading = false\r\n      this.access = this.accessIsAlowed()\r\n\r\n\r\n      if (!this.access.available && this.isProductionMode) {\r\n        this.emit(\"question-access\", false)\r\n        return\r\n      }\r\n\r\n      this.emit(\"question-access\", true)\r\n\r\n      if (this.access.available || !this.isProductionMode) {\r\n        this.emit(\"question-set-options\", this.form.config.questions)\r\n        // if(this.isProductionMode){\r\n        this.loadAnswer(this.app.user, this.form.id)\r\n          .then(res => {\r\n\r\n            this.answer = res;\r\n            this.emit(\"question-set-answers\", this.answer.data)\r\n            this.emit(\"answer-update\", this.answer.data)\r\n          })\r\n        if (!this.isProductionMode) {\r\n          this.loadStatistic()\r\n        } else {\r\n          this.chartOptions = {}\r\n        }\r\n        // }  \r\n      }\r\n    },\r\n\r\n    redrawStat() {\r\n      // let stats = JSON.parse(JSON.stringify(this.chartOptions))\r\n      // this.chartOptions = {};\r\n      this.$nextTick(() => {\r\n        if (this.chartOptions) this.chartOptions.redraw = !this.chartOptions.redraw\r\n      })\r\n    }\r\n\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n  props: [\"config\"],\r\n\r\n  watch: {\r\n    active() {\r\n      this.redrawStat()\r\n    },\r\n\r\n    isProductionMode(value) {\r\n      if (!isUndefined(value) && value != null)\r\n        this.initiateForm(this.form)\r\n      // if( value == false){\r\n      //   if(!this.chartOptions) {\r\n      //     console.log(\"MODE DESIGN RELOAD STAT\", this.chartOptions)\r\n      //     this.loadStatistic()\r\n      //   }  \r\n      // }\r\n    }\r\n\r\n  },\r\n\r\n\r\n  created() {\r\n\r\n    if (!this.config.form) {\r\n      this.createFormRequest()\r\n        .then(res => {\r\n          this.config.form = res.id\r\n          this.initiateForm(res)\r\n          this.setNeedSave(true)\r\n        })\r\n    }\r\n\r\n    this.on({\r\n      event: \"form-export\",\r\n      callback: () => {\r\n        this.exportForm()\r\n      },\r\n      rule: () => true\r\n    })\r\n\r\n    this.on({\r\n      event: \"form-import\",\r\n      callback: (questions) => {\r\n        this.emit(\"holder-import-widgets\", this.$parent.$parent, questions)\r\n      },\r\n      rule: () => true\r\n    })\r\n\r\n\r\n    this.on({\r\n      event: \"form-response\",\r\n      callback: () => {\r\n        if(!this.answer) return\r\n        this.emit(\"form-update\", this.form)\r\n        this.emit(\"answer-update\", this.answer)\r\n      },\r\n      rule: () => true\r\n    })\r\n\r\n\r\n    this.on({\r\n      event: \"form-insert-question\",\r\n      callback: (question) => {\r\n        // console.log(\"INSERT\",question)\r\n        if (!this.form) return\r\n        this.form.config.questions = this.form.config.questions || []\r\n        let index = findIndex(this.form.config.questions, q => q.id == question.id)\r\n        // console.log(index)\r\n        if( index < 0 ){\r\n          this.form.config.questions.push(question)\r\n          this.loading = true\r\n          this.updateForm(this.form).then(() => {\r\n            this.loading = false\r\n            this.emit(\"question-set-options\", this.form.config.questions)\r\n            this.emit(\"form-update\", this.form)\r\n          })\r\n        } else {\r\n          this.loading = false\r\n          this.$nextTick(() => {\r\n            this.emit(\"question-set-options\", this.form.config.questions)\r\n            this.emit(\"form-update\", this.form)\r\n          })\r\n        }\r\n      },\r\n      rule: () => true\r\n    })\r\n\r\n    this.on({\r\n      event: \"form-delete-question\",\r\n      callback: (questionId) => {\r\n        // console.log(\"DELETE\",questionId)\r\n        \r\n        let index = findIndex(this.form.config.questions, q => q.id == questionId)\r\n        if (index >= 0) {\r\n          this.form.config.questions.splice(index, 1)\r\n        }\r\n        this.loading = true\r\n        this.updateForm(this.form).then(() => {\r\n          this.emit(\"form-update\", this.form)\r\n          this.loading = false\r\n        })\r\n      },\r\n      rule: () => true\r\n    })\r\n\r\n    this.on({\r\n      event: \"form-update-answer\",\r\n      callback: (answer) => {\r\n        // console.log(\"UPDATE\",this._uid, this.answer, answer)\r\n        if(!this.answer) return\r\n        let index = findIndex(this.answer.data, a => a.id == answer.id)\r\n        if (index >= 0) {\r\n          this.answer.data.splice(index, 1, answer)\r\n        } else {\r\n          this.answer.data.push(answer)\r\n        }\r\n        this.needUpdateAnswer = true;\r\n        this.emit(\"answer-update\", this.answer)\r\n        this.setNeedSave(true)\r\n\r\n      },\r\n      rule: () => true\r\n    })\r\n\r\n    this.on({\r\n      event: \"form-extend\",\r\n      callback: () => {\r\n        if(!this.answer) return\r\n        this.needExtendForm = true;\r\n        this.needUpdateAnswer = true;\r\n        this.setNeedSave(true)\r\n      },\r\n      rule: () => true\r\n    })\r\n\r\n    this.on({\r\n      event: \"form-get-stat\",\r\n      callback: () => {\r\n        // console.log(\"getStatEvent\")\r\n        if(!this.answer) return\r\n        if (!this.stat) {\r\n          this.loadStatistic()\r\n        } else {\r\n          this.emit(\"question-set-stat\", this.stat)\r\n        }\r\n      },\r\n      rule: () => true\r\n    })\r\n\r\n\r\n  },\r\n\r\n  mounted() { this.$emit(\"init\") },\r\n\r\n  data: () => ({\r\n    active: null,\r\n    form: null,\r\n    loading: true,\r\n    access: null,\r\n    answer: null,\r\n    needExtendForm: false,\r\n    needUpdateAnswer: false,\r\n    stat: null,\r\n    chartOptions: null,\r\n    p: null\r\n  })\r\n\r\n}\r\n\r\n</script>\r\n","import mod from \"-!../../../../build/vuetify-loader/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../build/jace-loader/src/parser.js??ref--20-3!../../../../build/jace-loader/src/parser.js??ref--18-1!../../../../build/jace-loader/src/parser.js??ref--33-1!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../build/vuetify-loader/lib/loader.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../build/jace-loader/src/parser.js??ref--20-3!../../../../build/jace-loader/src/parser.js??ref--18-1!../../../../build/jace-loader/src/parser.js??ref--33-1!./form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=634b5e0c&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../build/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAvatar } from 'vuetify/lib/components/VAvatar';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTab } from 'vuetify/lib/components/VTabs';\nimport { VTabItem } from 'vuetify/lib/components/VTabs';\nimport { VTabs } from 'vuetify/lib/components/VTabs';\ninstallComponents(component, {VAvatar,VBtn,VCard,VCardText,VContainer,VDivider,VFlex,VLayout,VSpacer,VTab,VTabItem,VTabs})\n","import \"../../../src/components/VGrid/_grid.sass\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Grid from './grid';\nimport mergeData from '../../util/mergeData';\n/* @vue/component */\n\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children\n  }) {\n    let classes;\n    const {\n      attrs\n    } = data;\n\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {};\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false;\n        const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n\n        if (key.startsWith('data-')) {\n          data.attrs[key] = value;\n          return false;\n        }\n\n        return value || typeof value === 'string';\n      });\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {};\n      data.domProps.id = props.id;\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'container',\n      class: Array({\n        'container--fluid': props.fluid\n      }).concat(classes || [])\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VContainer.js.map","// Extensions\nimport VWindowItem from '../VWindow/VWindowItem';\n/* @vue/component */\n\nexport default VWindowItem.extend({\n  name: 'v-tab-item',\n  props: {\n    id: String\n  },\n  methods: {\n    genWindowItem() {\n      const item = VWindowItem.options.methods.genWindowItem.call(this);\n      item.data.domProps = item.data.domProps || {};\n      item.data.domProps.id = this.id || this.value;\n      return item;\n    }\n\n  }\n});\n//# sourceMappingURL=VTabItem.js.map","export default \"// answer-export.dps\\r\\n// export responses by form id \\r\\n// $scope.form is param of script (  form id )\\r\\n// returns url for responses downloading\\r\\n\\r\\n \\r\\nservice.mongodb.aggregate(\\r\\n    from:\\\"dj-storage.answer\\\",\\r\\n    query: <? [\\r\\n          {\\r\\n            '$match': {\\r\\n              'form': $scope.form\\r\\n            }\\r\\n          }, {\\r\\n            '$sort': {\\r\\n              'updatedAt': -1\\r\\n            }\\r\\n          }\\r\\n        ]\\r\\n    ?>\\r\\n)\\r\\n\\r\\nset(\\\"responses\\\")\\r\\n\\r\\n\\r\\nservice.mongodb.aggregate(\\r\\n    from:\\\"dj-storage.form\\\",\\r\\n    query: <? [\\r\\n          {\\r\\n            '$match': {\\r\\n              'id': $scope.form\\r\\n            }\\r\\n          }\\r\\n        ]\\r\\n    ?>\\r\\n)\\r\\n\\r\\nset(\\\"form\\\")\\r\\n\\r\\n\\r\\n<?javascript\\r\\n    $scope.form = $scope.form[0]\\r\\n    \\r\\n    \\r\\n    $scope.responses = $scope.responses.map( (r, index) => ({\\r\\n        response_id: r.id\\r\\n        ,form: r.form\\r\\n        ,access: r.updatedAt\\r\\n        ,respondent_id: (r.user.id) ? r.user.id : null\\r\\n        ,respondent_apikey: (r.user.apikey) ? r.user.apikey : null\\r\\n        ,respondent_index: (!r.user.id && !r.user.apikey) ? index : null\\r\\n        ,data: r.data\\r\\n    }));\\r\\n    \\r\\n    \\r\\n    \\r\\n    let rawData = []\\r\\n    $scope.responses.forEach( r => {\\r\\n        if(r.data)\\r\\n            r.data.forEach( q => {\\r\\n                let q_desc = _.find($scope.form.config.questions, qd => qd.id == q.id)\\r\\n                rawData.push({\\r\\n                     response_id: r.response_id\\r\\n                    ,response_valid: r.response_valid\\r\\n                    ,form: r.form\\r\\n                    ,access: r.access\\r\\n                    ,respondent_id: r.respondent_id\\r\\n                    ,respondent_apikey: r.respondent_apikey\\r\\n                    ,respondent_index: r.respondent_index\\r\\n                    ,question_id: q.id\\r\\n                    ,question_type: q.type\\r\\n                    ,question_required: (q_desc) ? q_desc.options.required : null\\r\\n                    ,response_valid: q.valid\\r\\n                    ,question_title: (q_desc) ? q_desc.options.title : null\\r\\n                    ,question_note: (q_desc) ? q_desc.options.note : null\\r\\n                    ,data: q.data\\r\\n                })          \\r\\n            })\\r\\n    })\\r\\n    \\r\\n    rawData = rawData.filter( \\r\\n        r => _.find($scope.form.config.questions, qd => r.question_id == qd.id)\\r\\n    );\\r\\n    \\r\\n    let rawData1 = []\\r\\n    \\r\\n    rawData.forEach( r => {\\r\\n        r.data.forEach( d => {\\r\\n            \\r\\n            let conf = _.find($scope.form.config.questions, q => q.id == r.question_id)\\r\\n            \\r\\n            let nominal = null;\\r\\n            let entity_1 = null;\\r\\n            let entity_2 = null;\\r\\n            let factor = null;\\r\\n            let effect = null;\\r\\n            let value = null;\\r\\n            let min = null;\\r\\n            let max = null;\\r\\n            let nominal_title = null;\\r\\n            let entity_1_title = null;\\r\\n            let entity_2_title = null;\\r\\n            let factor_title = null;\\r\\n            let effect_title = null;\\r\\n            let value_title = null;\\r\\n            let v;\\r\\n            \\r\\n            switch (r.question_type) {\\r\\n              \\r\\n                case 'One of many selection' : \\r\\n                case 'Many of many selection' : \\r\\n                    let n = _.find(conf.options.nominals, n => n.id == d)\\r\\n                \\r\\n                    nominal = d;\\r\\n                    nominal_title = n.title\\r\\n                    value = true;\\r\\n                    break\\r\\n              \\r\\n                case 'Association' : \\r\\n                    let e1 = _.find(conf.options.entities, n => n.id == d.e1)\\r\\n                    let e2 = _.find(conf.options.entities, n => n.id == d.e2)\\r\\n                    v = conf.options.scale[d.value-1]\\r\\n                    entity_1 = d.e1;\\r\\n                    entity_1_title = e1.title\\r\\n                    entity_2 = d.e2;\\r\\n                    entity_2_title = e2.title\\r\\n                    value = d.value;\\r\\n                    value_title = (v) ? (v.title) ? v.title : null : null\\r\\n                    break\\r\\n                    \\r\\n                case 'Influence' : \\r\\n                    let f = _.find(conf.options.factors, n => n.id == d.e1)\\r\\n                    let e = _.find(conf.options.effects, n => n.id == d.e2)\\r\\n                    v = conf.options.scale[d.value-1]\\r\\n                    \\r\\n                    factor = d.e1;\\r\\n                    factor_title = f.title\\r\\n                    effect = d.e2;\\r\\n                    effect_title = e.title\\r\\n                    value = d.value;\\r\\n                    value_title = (v) ? (v.title) ? v.title : null : null\\r\\n                    break\\r\\n                    \\r\\n                case 'Range':\\r\\n                    min = d[0];\\r\\n                    max = d[1];\\r\\n                    value = true;\\r\\n                    break\\r\\n                    \\r\\n                case 'Date':\\r\\n                    value = d\\r\\n                    break    \\r\\n                \\r\\n                case 'Rate':\\r\\n                    v = conf.options.scale[d-1]\\r\\n                    value = d\\r\\n                    value_title = v.title\\r\\n                    break\\r\\n            }\\r\\n            \\r\\n            \\r\\n            rawData1.push({\\r\\n                 response_id: r.response_id\\r\\n                ,response_valid: r.response_valid\\r\\n                ,form: r.form\\r\\n                ,access: r.access\\r\\n                ,respondent_id: r.respondent_id\\r\\n                ,respondent_apikey: r.respondent_apikey\\r\\n                ,respondent_index: r.respondent_index\\r\\n                ,question_id: r.question_id\\r\\n                ,question_type: r.question_type\\r\\n                ,question_required: r.question_required\\r\\n                ,question_valid: r.question_valid\\r\\n                ,question_title: r.question_title\\r\\n                ,question_note: r.question_note\\r\\n                ,nominal \\r\\n                ,nominal_title\\r\\n                ,entity_1\\r\\n                ,entity_1_title\\r\\n                ,entity_2\\r\\n                ,entity_2_title\\r\\n                ,factor\\r\\n                ,factor_title\\r\\n                ,effect\\r\\n                ,effect_title\\r\\n                ,min\\r\\n                ,max\\r\\n                ,value\\r\\n                ,value_title\\r\\n                \\r\\n            })\\r\\n        })\\r\\n    })\\r\\n    \\r\\n    $scope.rawData = rawData1.filter(r => r.value != null)\\r\\n    $scope.filename = $scope.form.id + \\\"_\\\" + _util.format.date(new Date(),\\\"YYYY_MM_DD_HH_mm\\\") + \\\"_responses.xlsx\\\";\\r\\n    \\r\\n?>\\r\\nget(\\\"rawData\\\")\\r\\nexport({{filename}})\";","export default \"// get  all answers by form id\\r\\n// $scope.form_id is param of script (  form id )\\r\\n\\r\\n// returns answers\\r\\n\\r\\n \\r\\nservice.mongodb.aggregate(\\r\\n    from:\\\"dj-storage.answer\\\",\\r\\n    query: <? [\\r\\n          {\\r\\n            '$match': {\\r\\n              'form': $scope.form\\r\\n            }\\r\\n          }, {\\r\\n            '$sort': {\\r\\n              'updatedAt': -1\\r\\n            }\\r\\n          }\\r\\n        ]\\r\\n    ?>\\r\\n)\\r\\n\\r\\nset(\\\"answers\\\")\\r\\n\\r\\n\\r\\nservice.mongodb.aggregate(\\r\\n    from:\\\"dj-storage.form\\\",\\r\\n    query: <? [\\r\\n          {\\r\\n            '$match': {\\r\\n              'id': $scope.form\\r\\n            }\\r\\n          }\\r\\n        ]\\r\\n    ?>\\r\\n)\\r\\n\\r\\nset(\\\"form\\\")\\r\\n\\r\\n<?javascript\\r\\n\\r\\nlet questions = $scope.form[0].config.questions;\\r\\n\\r\\nlet answers = $scope.answers.map ((a) => {\\r\\n  a.data = _.pairs(a.data).map(d => {\\r\\n    d[1].title = questions[d[0]].options.title;\\r\\n    \\r\\n    d[1].id = d[0];\\r\\n    \\r\\n    if (!d[1].value) {\\r\\n      return d[1]\\r\\n    }\\r\\n    \\r\\n    if( [\\\"influences\\\"].indexOf(d[1].type) >=0 ){\\r\\n      d[1].value = d[1].value.map(v => {\\r\\n        return {\\r\\n          entity_id: v.entity,\\r\\n          entity_title: questions[d[0]].options.entities[v.entity].title,\\r\\n          property_id: v.property,\\r\\n          property_title: questions[d[0]].options.properties[v.property].title,\\r\\n          value:v.value\\r\\n        }\\r\\n      }) \\r\\n    }\\r\\n\\r\\n    if( [\\\"pairs\\\",\\\"radiopairs\\\"].indexOf(d[1].type) >=0 ){\\r\\n      d[1].value = d[1].value.map(v => {\\r\\n        return {\\r\\n          entity_id: v.entity,\\r\\n          entity_title: questions[d[0]].options.entities[v.entity].title,\\r\\n          property_id: v.property,\\r\\n          property_title: questions[d[0]].options.properties[v.property].title,\\r\\n          value:1\\r\\n        }\\r\\n      }) \\r\\n    }\\r\\n\\r\\n    if( [\\\"radio\\\",\\\"check\\\",\\\"dropdown\\\"].indexOf(d[1].type) >= 0 ){\\r\\n      d[1].value = d[1].value.map(v => {\\r\\n        return {\\r\\n          entity_id: v,\\r\\n          entity_title: questions[d[0]].options.nominals[v].title,\\r\\n          property_id: \\\"\\\",\\r\\n          property_title:\\\"\\\",\\r\\n          value:1\\r\\n        }\\r\\n      }) \\r\\n    }\\r\\n    \\r\\n    if( [\\\"scales\\\"].indexOf(d[1].type) >= 0 ){\\r\\n      d[1].value = d[1].value.map(v => {\\r\\n        return {\\r\\n          entity_id: v.entity,\\r\\n          entity_title: questions[d[0]].options.entities[v.entity].title,\\r\\n          property_id: \\\"\\\",\\r\\n          property_title:\\\"\\\",\\r\\n          value:v.value\\r\\n        }\\r\\n      }) \\r\\n    }\\r\\n    \\r\\n    \\r\\n    if( [\\\"text\\\",\\\"rate\\\",\\\"range\\\",\\\"datetime\\\",\\\"scale\\\"].indexOf(d[1].type) >= 0 ){\\r\\n      d[1].value = d[1].value.map(v => {\\r\\n        return {\\r\\n          entity_id: \\\"\\\",\\r\\n          entity_title: \\\"\\\",\\r\\n          property_id: \\\"\\\",\\r\\n          property_title:\\\"\\\",\\r\\n          value:(d[1].type==\\\"datetime\\\")? _util.format.date(new Date(v), \\\"DD/MM/YY HH:mm\\\") : v\\r\\n        }\\r\\n      }) \\r\\n    }\\r\\n    \\r\\n    return d[1];\\r\\n  })\\r\\n  return a;\\r\\n});\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nlet responses = [];\\r\\n\\r\\nanswers = answers.forEach( a => {\\r\\n    a.data.forEach( d => {\\r\\n      if(d.value){\\r\\n        d.value.forEach( v => {\\r\\n            responses.push({\\r\\n              response_id:a.id,\\r\\n              updatedAt: _util.format.date(a.updatedAt, \\\"DD/MM/YY HH:mm\\\"),\\r\\n              form:a.form,\\r\\n              respondent:(a.user.email)? a.user.email : \\\"\\\",\\r\\n              question_id: d.id,\\r\\n              question_title: d.title,\\r\\n              question_type: d.type,\\r\\n              valid:(d.valid)? 1 : 0,\\r\\n              entity_id: v.entity_id,\\r\\n              entity_title:v.entity_title,\\r\\n              property_id:v.property_id,\\r\\n              property_title:v.property_title,\\r\\n              value:v.value     \\r\\n            })\\r\\n          })    \\r\\n      } \\r\\n    })\\r\\n});\\r\\n\\r\\n$scope.responses = responses;\\r\\n\\r\\n?>\\r\\n\\r\\nget(\\\"responses\\\")\";","export default \"// get answers by form id and user info\\r\\n// $scope.form is param of script (  form id )\\r\\n// $scope.user is param of script (  user profile )\\r\\n// returns selected answers\\r\\n\\r\\nservice.mongodb.aggregate(\\r\\n    from:<? \\\"dj-storage.answer\\\" ?>,\\r\\n    query: <? [\\r\\n            {\\r\\n                '$match': {\\r\\n                    'form': $scope.form, \\r\\n                    'user.email': $scope.user.email\\r\\n                }\\r\\n            }, {\\r\\n                '$sort': {\\r\\n                    'updatedAt': -1\\r\\n                }\\r\\n            }\\r\\n        ]\\r\\n    ?>    \\r\\n)\\r\\nset(\\\"response\\\")\\r\\nreturn(\\\"response[0]\\\")\\r\\n\";","export default \"// answer-load-stat.dps\\r\\n// get statistics by form id \\r\\n// $scope.form is param of script (  form id )\\r\\n// returns selected statistics\\r\\n\\r\\n service.mongodb.aggregate(\\r\\n    from:\\\"dj-storage.answer\\\",\\r\\n    query: <? [\\r\\n          {\\r\\n            '$match': {\\r\\n              'form': $scope.form\\r\\n            }\\r\\n          }, {\\r\\n            '$sort': {\\r\\n              'updatedAt': 1\\r\\n            }\\r\\n          }\\r\\n        ]\\r\\n    ?>\\r\\n)\\r\\n\\r\\nset(\\\"answers\\\")\\r\\n\\r\\n<?javascript\\r\\n    $scope.answers = $scope.answers.map( item => ({\\r\\n        date:item.updatedAt,\\r\\n        v:1\\r\\n    }))\\r\\n?>\\r\\n\\r\\nreturn(\\\"answers\\\")\";","export default \"// update answers \\r\\n// $scope.answer is param of script (  full answers specification )\\r\\n\\r\\nservice.mongodb.replace(\\r\\n    in: <? \\\"dj-storage.answer\\\" ?>,\\r\\n    where : <? {id: $scope.answer.id}?>,\\r\\n    doc: <? $scope.answer ?>\\r\\n)\";","export default \"// create or replace form\\r\\n// $scope.form is param of script ( full form specification )\\r\\n// returns created form\\r\\n\\r\\nclient();\\r\\nset(\\\"owner\\\")\\r\\n\\r\\n<?javascript\\r\\n    $scope.form = {\\r\\n        id: $scope.form.id,\\r\\n        metadata: $scope.form.metadata,\\r\\n        config: $scope.form.config,\\r\\n        owner: $scope.owner.client.user,\\r\\n        history: [\\r\\n            {\\r\\n                state:\\\"created\\\",\\r\\n                message:\\\"Create form via \\\"+$scope.owner.client.app,\\r\\n                user: $scope.owner.client.user,\\r\\n                date: new Date()\\r\\n            }\\r\\n        ]\\r\\n    }\\r\\n?>\\r\\n\\r\\nservice.mongodb.replace (\\r\\n    in: <? \\\"dj-storage.form\\\" ?>,\\r\\n    where : <? {id: $scope.form.id}?>,\\r\\n    doc: <? $scope.form ?>\\r\\n)\\r\\n\\r\\nservice.mongodb.aggregate (\\r\\n    from:<? \\\"dj-storage.form\\\" ?>,\\r\\n    query: <? [{$match:{id: $scope.form.id}}] ?>,\\r\\n)\";","export default \"// delete form by id\\r\\n// $scope.form is param of script (  form id )\\r\\n// returns deleted form\\r\\n\\r\\nservice.mongodb.aggregate(\\r\\n    from:<? \\\"dj-storage.form\\\" ?>,\\r\\n    query: <? [{$match:{id: $scope.form}}] ?>\\r\\n)\\r\\n\\r\\nset(\\\"res\\\")\\r\\n\\r\\nservice.mongodb.remove(\\r\\n    from: <? \\\"dj-storage.form\\\" ?>,\\r\\n    where: <? {id: $scope.form} ?>\\r\\n)\\r\\n\\r\\nreturn(\\\"res\\\")\";","export default \"// export form as json\\r\\n// $scope.form is param of script (  full form specification )\\r\\n// returns url for json downloading\\r\\n\\r\\nget(\\\"form\\\")\\r\\nexport(\\\"formExport.json\\\")\";","export default \"// extends existed form \\r\\n// $scope.form is param of script (  full form specification )\\r\\n// returns extended form\\r\\n\\r\\nservice.mongodb.find(\\r\\n    from:<? \\\"dj-storage.form\\\" ?>,\\r\\n    query: <? [{$match:{id: $scope.form.id}}] ?>\\r\\n)\\r\\n\\r\\nset(\\\"baseForm\\\")\\r\\n\\r\\n\\r\\n<?javascript\\r\\n    $scope.baseForm = $scope.baseForm[0] \\r\\n    if($scope.form.config.questions && $scope.baseForm.config.questions){\\r\\n        $scope.form.config.questions.forEach( q => {\\r\\n            baseQ = _.find($scope.baseForm.config.questions, bq => bq.id == q.id)\\r\\n            if( baseQ && baseQ.options.nominals){\\r\\n                q.options.nominals = (q.options.nominals || []).concat(baseQ.options.nominals)\\r\\n                q.options.nominals = _.unique(q.options.nominals,'id') \\r\\n            }\\r\\n        })    \\r\\n    }\\r\\n    \\r\\n?>\\r\\n\\r\\nservice.mongodb.replace(\\r\\n    in: <? \\\"dj-storage.form\\\" ?>,\\r\\n    where : <? {id: $scope.form.id}?>,\\r\\n    doc: <? $scope.form ?>\\r\\n)\\r\\n\\r\\nservice.mongodb.find(\\r\\n    from:<? \\\"dj-storage.form\\\" ?>,\\r\\n    query: <? [{$match:{id: $scope.form.id}}] ?>\\r\\n)\\r\\n\";","export default \"// get form by id\\r\\n// $scope.form is param of script (  form id )\\r\\n// returns form\\r\\n\\r\\nservice.mongodb.aggregate(\\r\\n    from:<? \\\"dj-storage.form\\\" ?>,\\r\\n    query: <? [{$match:{id: $scope.form}}] ?>\\r\\n)\";","export default \"// get statistics by form id \\r\\n// $scope.form is param of script (  form id )\\r\\n// returns selected statistics\\r\\n\\r\\nservice.mongodb.aggregate(\\r\\n    from:\\\"dj-storage.answer\\\",\\r\\n    query: <? [\\r\\n          {\\r\\n            '$match': {\\r\\n              'form': $scope.form\\r\\n            }\\r\\n          }, {\\r\\n            '$sort': {\\r\\n              'updatedAt': -1\\r\\n            }\\r\\n          }\\r\\n        ]\\r\\n    ?>\\r\\n)\\r\\n\\r\\nset(\\\"responses\\\")\\r\\n\\r\\n\\r\\nservice.mongodb.aggregate(\\r\\n    from:\\\"dj-storage.form\\\",\\r\\n    query: <? [\\r\\n          {\\r\\n            '$match': {\\r\\n              'id': $scope.form\\r\\n            }\\r\\n          }\\r\\n        ]\\r\\n    ?>\\r\\n)\\r\\n\\r\\nset(\\\"form\\\")\\r\\n\\r\\n\\r\\n<?javascript\\r\\n    $scope.form = $scope.form[0]\\r\\n    \\r\\n    $scope.stat = { events: {\\r\\n        total: $scope.responses.length,\\r\\n        range: {\\r\\n          min: (_.first($scope.responses)) ? _.first($scope.responses).updatedAt : new Date(),\\r\\n          max: (_.last($scope.responses)) ? _.last($scope.responses).updatedAt : new Date()\\r\\n        },\\r\\n        timeline: $scope.responses.map( r => ({\\r\\n                        user: r.user,\\r\\n                        date: r.updatedAt\\r\\n                    }))\\r\\n    }};\\r\\n    \\r\\n    let questions = $scope.form.config.questions;\\r\\n\\r\\n    $scope.stat.questions = questions.map( q => ({\\r\\n        id: q.id,\\r\\n        responses: $scope.responses.map( r => {\\r\\n            let f = _.find(r.data, a => a.id == q.id) \\r\\n            return (f) ? (f.data) ? f.data : null : null\\r\\n        })\\r\\n    }))\\r\\n\\r\\n?>\\r\\n\\r\\nreturn(\\\"stat\\\")\\r\\n\";","export default \"// find user by email \\r\\n// $scope.email is param of script \\r\\n\\r\\nprofile.find(<? $scope.email ?>)\";","import answerExport from \"./answer-export.dps\" \r\nimport answerGetAll from \"./answer-get-all.dps\" \r\nimport answerGet from \"./answer-get.dps\" \r\nimport answerLoadStat from \"./answer-load-stat.dps\" \r\nimport answerUpdate from \"./answer-update.dps\" \r\nimport formCreateOrReplace from \"./form-create-or-replace.dps\" \r\nimport formDelete from \"./form-delete.dps\" \r\nimport formExport from \"./form-export.dps\" \r\nimport formExtend from \"./form-extend.dps\" \r\nimport formGet from \"./form-get.dps\" \r\nimport statGet from \"./stat-get.dps\" \r\nimport userFind from \"./user-find.dps\" \r\n\r\nexport default {\r\n    answerExport,\r\n    answerGetAll,\r\n    answerGet,\r\n    answerLoadStat,\r\n    answerUpdate,\r\n    formCreateOrReplace,\r\n    formDelete,\r\n    formExport,\r\n    formExtend,\r\n    formGet,\r\n    statGet,\r\n    userFind\r\n}","import moment from \"moment\"\r\nimport { template, templateSettings } from \"lodash\"\r\nimport script from \"./dps/dps-scripts\" \r\n\r\n\r\n\r\nexport default {\r\n\r\n    methods: {\r\n\r\n        randomName: () => Math.random().toString(36).substring(2),\r\n\r\n        createForm(form) {\r\n            form.id = this.randomName()\r\n            form.updatedAt = new Date()\r\n            form.createddAt = new Date()\r\n\r\n            return this.$dps.run({\r\n                script: script[\"formCreateOrReplace\"], //_dps.createForm,\r\n                state: { form: form }\r\n            }).then(res => res.data[0])\r\n\r\n        },\r\n\r\n        cloneForm(form) {\r\n            let f = JSON.parse(JSON.stringify(form))\r\n            f.config.cloned = form.id;\r\n            f.metadata.app_url.value = location.href;\r\n            f.id = this.randomName()\r\n            f.updatedAt = new Date()\r\n            f.createdAt = new Date()\r\n            delete f._id;\r\n            // delete f.updatedAt;\r\n            // delete f.createdAt;\r\n\r\n            return this.$dps.run({\r\n                script: script[\"formCreateOrReplace\"], //_dps.createForm,\r\n                state: { form: f }\r\n            }).then(res => res.data[0])\r\n\r\n        },\r\n\r\n        loadForm(formId) {\r\n\r\n            return this.$dps.run({\r\n                script: script[\"formGet\"], //_dps.getForm,\r\n                state: { form: formId }\r\n            }).then(res => res.data[0])\r\n\r\n        },\r\n\r\n        updateForm(form) {\r\n            \r\n            form.updatedAt = new Date()\r\n            delete form._id\r\n\r\n            return this.$dps.run({\r\n                script: script[\"formCreateOrReplace\"], //_dps.updateForm,\r\n                state: { form: form }\r\n            }).then(res => res.data[0])\r\n\r\n        },\r\n\r\n        extendForm(form) {\r\n            \r\n            form.updatedAt = new Date()\r\n            delete form._id\r\n            \r\n            return this.$dps.run({\r\n                script: script[\"formExtend\"], //_dps.extendForm,\r\n                state: { form: form }\r\n            })\r\n        },\r\n\r\n        deleteForm(formId) {\r\n\r\n            return this.$dps.run({\r\n                script: script[\"formDelete\"], //_dps.deleteForm,\r\n                state: { form: formId }\r\n            })\r\n\r\n        },\r\n\r\n        exportForm() {\r\n\r\n            let questions = this.$djvue\r\n                .selectWidgets(this.$root, widget => (widget.config) && widget.config.type == \"question-widget\")\r\n                .map(q => {\r\n                    let res = JSON.parse(JSON.stringify(q.config))\r\n                    res.question.options = JSON.parse(JSON.stringify(q.$refs.instance.options))\r\n                    return res\r\n                })\r\n\r\n            let a = document.createElement('a');\r\n            a.setAttribute('href', 'data:text/plain;charset=utf-u,' + encodeURIComponent(JSON.stringify(questions, null, '\\t')));\r\n            a.setAttribute('download', 'form_config.json');\r\n            a.click()\r\n\r\n            // this.$dps.run({\r\n            //   script: _dps.exportForm,\r\n            //   state: { form: questions }\r\n            // }).then( res => {\r\n            //   window.location.href = this.app.config.dpsURL+res.data.url\r\n            // })      \r\n\r\n\r\n        },\r\n\r\n        findUserProfile(email) {\r\n\r\n            return this.$dps.run({\r\n                script: script[\"userFind\"], //_dps.findUserProfile,\r\n                state: { email: email }\r\n            }).then(res => res.data)\r\n\r\n        },\r\n\r\n        loadAnswer(user, formId) {\r\n            return this.$dps.run({\r\n                script: script[\"answerGet\"], //_dps.getAnswer,\r\n                state: {\r\n                    user: user,\r\n                    form: formId\r\n                }\r\n            }).then(res => {\r\n                if (res.data) return res.data\r\n                return {\r\n                    form: formId,\r\n                    user: user,\r\n                    data: []\r\n                }\r\n            })\r\n        },\r\n\r\n        updateAnswer(answer) {\r\n\r\n            answer.id = this.randomName()\r\n            answer.updatedAt = new Date()\r\n            delete answer._id\r\n\r\n            return this.$dps.run({\r\n                script: script[\"answerUpdate\"], //_dps.updateAnswer,\r\n                state: { answer: answer }\r\n            })\r\n\r\n        },\r\n\r\n        exportResponses(form_id) {\r\n            return this.$dps.run({\r\n                script: script[\"answerExport\"], //_dps.exportResponses,\r\n                state: { form: form_id }\r\n            }).then(res => this.app.config.dpsURL + res.data.url)\r\n        },\r\n\r\n        sendMails(users, _template) {\r\n            let state = {}\r\n            let script = \"\";\r\n\r\n            // users\r\n            //   .forEach((u, index) => {\r\n            //     script += `sendmail({{o${index}}});\r\n            //     `\r\n            //   })\r\n\r\n            // set {{}} template delimiters \r\n            templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\r\n\r\n            users\r\n                .forEach((u, index) => {\r\n\r\n                    script += `sendmail({{o${index}}});\r\n            `\r\n                    state[(\"o\" + index)] = {\r\n                        to: u.email,\r\n                        subject: \"DJVUE Forms Service notiification\",\r\n                        html: template(_template)(u.context)\r\n                    }\r\n                })\r\n\r\n            // back to default template delimiters\r\n            templateSettings.interpolate = /<%=([\\s\\S]+?)%>/g;\r\n\r\n\r\n            // TODO Comments 3 lines below for production mode\r\n            // return new Promise((resolve) => {\r\n            //  resolve({script:script, state:state})\r\n            // }) \r\n\r\n\r\n\r\n\r\n            return this.$dps.run({\r\n                script: script,\r\n                state: state\r\n            })\r\n\r\n        },\r\n\r\n        getStat(formId) {\r\n\r\n            return new Promise((resolve, reject) => {\r\n                this.$dps.run({\r\n                    script: script[\"statGet\"], //_dps.getStat,\r\n                    state: {\r\n                        form: formId\r\n                    }\r\n                }).then(res => {\r\n                    if (res.type == \"error\") {\r\n                        reject(res.data)\r\n                    } else {\r\n                        resolve(res.data)\r\n                    }\r\n                })\r\n            })\r\n\r\n        },\r\n\r\n        round(date, start, level, value) {\r\n            let defFormat = \"YYYY-MM-DD HH:mm\";\r\n\r\n            let lo = moment(start).startOf(level).format(defFormat)\r\n            let hi = moment(lo).add(value, level).format(defFormat)\r\n            while (!(moment(date).isSameOrAfter(lo) && moment(date).isSameOrBefore(hi))) {\r\n                lo = hi;\r\n                hi = moment(lo).add(value, level).format(defFormat);\r\n            }\r\n\r\n            let dLo = moment(date).diff(lo)\r\n            let dHi = -moment(date).diff(hi)\r\n            return (dLo < dHi) ? lo : hi\r\n        },\r\n\r\n        getResponseDynamic(r) {\r\n            let responses = r.events.timeline;\r\n            //responses.push({date: new Date()})\r\n\r\n            let defFormat = \"YYYY-MM-DD HH:mm\";\r\n            // let inputFormat = \"DD/MM/YY HH:mm\";\r\n\r\n\r\n            let RStat = responses\r\n                .map(item => moment(new Date(item.date)))\r\n                .sort((a, b) => a.diff(b))\r\n                .map(item => item.format(defFormat))\r\n\r\n            RStat.push(moment(new Date()).format(defFormat))\r\n\r\n            let p = [\r\n                ['m', 1],\r\n                ['m', 5],\r\n                ['m', 10],\r\n                ['m', 15],\r\n                ['m', 20],\r\n                ['m', 30],\r\n                ['h', 1],\r\n                ['h', 2],\r\n                ['h', 4],\r\n                ['h', 12],\r\n                ['d', 1],\r\n                ['d', 3],\r\n                ['d', 7],\r\n                ['M', 1],\r\n                ['M', 3],\r\n                ['M', 6],\r\n                ['y', 1],\r\n                ['y', 2],\r\n                ['y', 5],\r\n                ['y', 10]\r\n            ]\r\n\r\n\r\n            let getPoints = (start, stop, level, value) => {\r\n                let res = [];\r\n                start = moment(start).add(-value, level).format(defFormat);\r\n                stop = moment(new Date()).format(defFormat);\r\n\r\n                let lo = moment(start).startOf(level).format(defFormat)\r\n                let hi = moment(lo).add(value, level).format(defFormat)\r\n                res.push(lo)\r\n                while (!(moment(stop).isSameOrAfter(lo) && moment(stop).isSameOrBefore(hi))) {\r\n                    lo = hi;\r\n                    hi = moment(lo).add(value, level).format(defFormat);\r\n                    res.push(lo)\r\n                }\r\n                res.push(hi)\r\n                return res;\r\n            }\r\n\r\n\r\n\r\n            let titleFormat = {\r\n                'm': ['HH:mm', ''],\r\n                'h': ['DD.MM HH:', '00'],\r\n                'd': ['DD.MM', ''],\r\n                'M': ['MM.YY', ''],\r\n                'y': ['YYYY', '']\r\n            }\r\n\r\n            let u;\r\n\r\n            for (u of p) {\r\n                if ((moment(RStat[RStat.length - 1]).diff(RStat[0], u[0]) / u[1]) <= 24) break;\r\n            }\r\n\r\n            this.u = u;\r\n\r\n            if (moment(RStat[RStat.length - 1]).diff(RStat[0], u[0]) < 1) return;\r\n\r\n            RStat.splice(RStat.length - 1, 1)\r\n\r\n            RStat = RStat.map(\r\n                item => this.round(item, RStat[0], u[0], u[1])\r\n            );\r\n\r\n            let points = getPoints(RStat[0], RStat[RStat.length - 1], u[0], u[1]);\r\n\r\n            let stats = points.map(item => RStat.filter(t => moment(t).isSame(item, u[0])).length)\r\n            let sum = stats.reduce((item, sum) => { return sum + item })\r\n\r\n\r\n            if (sum == 0) {\r\n                stats = stats.map(() => 0)\r\n            } else {\r\n                stats = stats.map(item => item) //sum )\r\n            }\r\n\r\n            let max = stats.reduce((item, max) => { return (max > item) ? max : item })\r\n\r\n            RStat = points.map((item, index) => {\r\n                return {\r\n                    title: moment(item).format(titleFormat[u[0]][0]) + titleFormat[u[0]][1],\r\n                    value: stats[index],\r\n                    height: (max > 0) ? stats[index] / max : 0\r\n                }\r\n            })\r\n\r\n            this.points = points;\r\n            // console.log(RStat)\r\n            return RStat;\r\n        }\r\n\r\n    }\r\n}"],"sourceRoot":""}