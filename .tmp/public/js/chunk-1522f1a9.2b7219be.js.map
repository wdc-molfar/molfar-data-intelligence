{"version":3,"sources":["webpack:///./src/components/core/ext/inputs/text-annotator.vue?f9b1","webpack:///src/components/core/ext/inputs/text-annotator.vue","webpack:///./src/components/core/ext/inputs/text-annotator.vue?6078","webpack:///./src/components/core/ext/inputs/text-annotator.vue","webpack:///./node_modules/uuid/dist/esm-browser/rng.js","webpack:///./node_modules/uuid/dist/esm-browser/regex.js","webpack:///./node_modules/uuid/dist/esm-browser/validate.js","webpack:///./node_modules/uuid/dist/esm-browser/stringify.js","webpack:///./node_modules/uuid/dist/esm-browser/v4.js"],"names":["render","_vm","this","_c","_self","options","getPropertyValue","staticClass","class","decoration","style","on","onMouseUp","_l","item","index","type","key","isTextIndent","staticStyle","attrs","start","_v","_s","content","_e","border","cursor","$event","setFocus","id","startEdit","scopedSlots","_u","fn","_g","_b","backgroundColor","tagBackground","color","padding","tagName","highlightClass","markBackground","tag","author","photo","name","updatedAt","comment","edited","readonly","position","x","y","changeMenuModel","model","value","callback","$$v","menu","expression","role","entities","map","d","changeTag","textChanges","changeText","changeComment","removeMark","cancelMark","updateMark","staticRenderFns","window","moment","genId","v4","split","props","mixins","data","focused","originalText","computed","tooltip","show","text","replace","editable","highlight","chunks","methods","forEach","e","$chunks","generateChunks","snippets","s","push","length","c","trim","currentPos","enabledEntities","filter","disabled","part","substring","concat","generateTextChunks","end","chunk","Date","format","newItem","entity","tagname","entityId","_class","needEdit","$nextTick","JSON","parse","stringify","join","getTextFromTags","$date","splice","$emit","event","target","classList","startsWith","rects","getClientRects","Infinity","rect","Math","min","left","max","bottom","f","user","mark","sourceCollection","reverseString","str","reverse","startOffset","indexOf","endOffset","wordRegex","test","node","Number","parseInt","getAttribute","offset","searchString","innerHTML","symbol","innerText","contains","selection","getSelection","toString","focusNode","anchorNode","range","getRangeAt","nodeContainer","commonAncestorContainer","nodes","childNodes","parentNode","Array","from","children","n","i","startContainer","j","endContainer","slice","entityRanges","getOffset","getNodeStart","insertedEntities","r","wordRange","selectWords","default","newEntity","removeAllRanges","setTimeout","$forceUpdate","component","VAutocomplete","VAvatar","VBtn","VMenu","VSpacer","VTextarea","VTooltip","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","byteToHex","substr","arr","arguments","undefined","toLowerCase","TypeError","buf","rnds","random"],"mappings":"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","file":"js/chunk-1522f1a9.2b7219be.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.options && _vm.getPropertyValue)?_c('div',{staticClass:\"text-annotation-container\",class:(_vm.options.decoration && _vm.options.decoration.class) ? _vm.getPropertyValue(_vm.options.decoration.class) || '' : '',style:((_vm.options.decoration && _vm.options.decoration.style) ? _vm.getPropertyValue(_vm.options.decoration.style) || '' : ''),on:{\"mouseup\":_vm.onMouseUp}},[_vm._l((_vm.$chunks),function(item,index){return [(item && item.type === 'text')?_c('span',{key:index,staticClass:\"text-for-annotation\",class:{ 'text-indent': _vm.isTextIndent(index)},staticStyle:{\"padding\":\"0px\"},attrs:{\"start\":item.start}},[_vm._v(\"\\n            \"+_vm._s(item.content)+\"\\n        \")]):_vm._e(),(item && item.type === 'whitespaces')?_c('span',[_vm._v(\" \"+_vm._s(item.content)+\" \")]):_vm._e(),(item && item.type === 'wrap')?_c('br',{attrs:{\"start\":item.start}}):_vm._e(),(item && item.type === 'wrap')?_c('br',{attrs:{\"start\":item.start}}):_vm._e(),(item && item.type === 'annotation')?_c('span',{staticClass:\"text-annotation mr-1\",style:({ border: _vm.border(item), cursor: 'default'}),attrs:{\"start\":item.start},on:{\"mouseover\":function($event){return _vm.setFocus(item.id, true)},\"mouseleave\":function($event){return _vm.setFocus(item.id, true)},\"click\":_vm.startEdit}},[(_vm.showTooltip)?_c('v-tooltip',{attrs:{\"bottom\":\"\",\"color\":\"#00000000\",\"open-delay\":\"500\"},scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [(item)?_c('span',_vm._g(_vm._b({class:'entity-'+item.id,staticStyle:{\"cursor\":\"pointer\"}},'span',attrs,false),on),[(_vm.showTag)?_c('span',{staticClass:\"text-annotation__annotation font-weight-light px-2\",class:'entity-'+item.id,style:({ backgroundColor: _vm.tagBackground(item), color: 'white', padding: '0.05em 0' })},[_vm._v(\"\\n                            \"+_vm._s(_vm.tagName(item))+\"\\n                        \")]):_vm._e(),_c('span',{staticClass:\"text-annotation__word\"},[_c('span',{staticClass:\"px-2\",class:'entity-' + item.id + ' ' + _vm.highlightClass(item),style:({backgroundColor: _vm.markBackground(item), padding: '0.05em 0'})},[_vm._v(\"\\n                                \"+_vm._s(item.content)+\"\\n                            \")])])]):_vm._e()]}}],null,true)},[_c('div',{staticClass:\"secondary--text pa-2 ma-1\",staticStyle:{\"background\":\"#ffffff\",\"border\":\"1px solid #bbbbbb\"}},[(_vm.showTooltipTag)?_c('div',{staticClass:\"title\",style:({color: _vm.tagBackground(item)})},[_vm._v(\"\\n                        \"+_vm._s(item.tag)+\"\\n                    \")]):_vm._e(),(_vm.showAuthor)?_c('div',{staticClass:\"d-flex align-center\"},[_c('v-avatar',{attrs:{\"size\":\"36\"}},[_c('img',{attrs:{\"src\":item.author.photo}})]),_c('div',{staticClass:\"px-3\",staticStyle:{\"line-height\":\"0.7\"}},[_c('div',{staticClass:\"subtitle-2\"},[_vm._v(_vm._s(item.author.name))]),_c('div',{staticClass:\"caption\",staticStyle:{\"margin-top\":\"-0.6em\"}},[_vm._v(_vm._s(item.updatedAt))])])],1):_vm._e(),(_vm.showComment)?_c('pre',{staticClass:\"caption pt-2\",staticStyle:{\"line-height\":\"1\"}},[_vm._v(_vm._s(_vm.comment(item)))]):_vm._e()])]):_c('span',{class:'entity-'+item.id,staticStyle:{\"cursor\":\"pointer\"}},[(_vm.showTag)?_c('span',{staticClass:\"text-annotation__annotation font-weight-bold px-2\",class:'entity-'+item.id,style:({ backgroundColor: _vm.tagBackground(item), color: 'white', padding: '0.05em 0' })},[_vm._v(\"\\n                    \"+_vm._s(_vm.tagName(item))+\"\\n                \")]):_vm._e(),_c('span',{staticClass:\"text-annotation__word\"},[_c('span',{staticClass:\"px-2\",class:'entity-'+item.id + ' ' + _vm.highlightClass(item),style:({backgroundColor: _vm.markBackground(item), padding: '0.05em 0' })},[_vm._v(\"\\n                        \"+_vm._s(item.content)+\"\\n                    \")])])])],1):_vm._e()]}),(_vm.edited && !_vm.readonly)?_c('v-menu',{attrs:{\"close-on-content-click\":false,\"min-width\":\"450\",\"max-width\":\"450\",\"position-x\":_vm.edited.position.x,\"position-y\":_vm.edited.position.y,\"z-index\":\"5000\"},on:{\"input\":_vm.changeMenuModel},model:{value:(_vm.menu),callback:function ($$v) {_vm.menu=$$v},expression:\"menu\"}},[_c('div',{staticClass:\"primary lighten-2 white--text pa-2 title\"},[_vm._v(\"\\n            Edit tag\\n        \")]),_c('div',{staticClass:\"secondary--text px-1 pt-3\",staticStyle:{\"background\":\"#ffffff\"}},[(_vm.edited)?_c('div',[_c('div',{staticClass:\"d-flex align-center mx-2 mb-4\"},[_c('v-avatar',[_c('img',{attrs:{\"src\":_vm.edited.author.photo}})]),_c('div',{staticClass:\"px-3\",staticStyle:{\"line-height\":\"0.7\"}},[_c('div',{staticClass:\"subtitle-2\"},[_vm._v(_vm._s(_vm.edited.author.name))]),_c('div',{staticClass:\"caption\",staticStyle:{\"margin-top\":\"-0.6em\"}},[_vm._v(_vm._s(_vm.edited.author.role))])]),_c('v-spacer'),_c('div',{staticClass:\"subtitle-2 text-right\"},[_vm._v(_vm._s(_vm.edited.updatedAt))])],1),_c('v-autocomplete',{staticClass:\"mb-2\",attrs:{\"hide-details\":\"\",\"outlined\":\"\",\"dense\":\"\",\"value\":_vm.edited.tag,\"label\":\"Tag\",\"items\":(_vm.options.decoration && _vm.options.decoration.entities) ? _vm.getPropertyValue(_vm.options.decoration.entities).map( d => d.tag) || [] : []},on:{\"change\":_vm.changeTag}}),(_vm.editable)?_c('v-textarea',{staticClass:\"mb-2\",attrs:{\"rows\":\"10\",\"hide-details\":\"\",\"outlined\":\"\",\"value\":_vm.textChanges,\"label\":\"Text\"},on:{\"input\":_vm.changeText}}):_vm._e(),_c('v-textarea',{staticClass:\"mb-2\",attrs:{\"hide-details\":\"\",\"outlined\":\"\",\"value\":_vm.edited.comment,\"label\":\"Comment\"},on:{\"input\":_vm.changeComment}})],1):_vm._e(),_c('div',{staticClass:\"d-flex\"},[_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.removeMark()}}},[_vm._v(\"\\n                    Remove\\n                \")]),_c('v-spacer'),_c('v-btn',{attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.cancelMark()}}},[_vm._v(\"\\n                    Cancel\\n                \")]),_c('v-btn',{attrs:{\"color\":\"primary\",\"text\":\"\"},on:{\"click\":function($event){return _vm.updateMark()}}},[_vm._v(\"\\n                    Update\\n                \")])],1)])]):_vm._e()],2):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div v-if=\"options && getPropertyValue\" class=\"text-annotation-container\" :class=\"(options.decoration && options.decoration.class) ? getPropertyValue(options.decoration.class) || '' : ''\" :style=\"(options.decoration && options.decoration.style) ? getPropertyValue(options.decoration.style) || '' : ''\" v-on:mouseup=\"onMouseUp\"\r\n\r\n    >\r\n            \r\n            <!-- OPTIONS\r\n            <br/>\r\n            {{options.decoration}}\r\n            <br/>\r\n            CLASS\r\n            <br/>\r\n            {{getPropertyValue(options.decoration.class)}}\r\n            <br/>\r\n             -->\r\n\r\n        \r\n        <template v-for=\"(item, index) in $chunks\">\r\n\r\n            <span class=\"text-for-annotation\" v-if=\"item && item.type === 'text'\" :key=\"index\" :class=\"{ 'text-indent': isTextIndent(index)}\" style=\"padding: 0px;\" :start=\"item.start\">\r\n                {{item.content}}\r\n            </span>\r\n            <span v-if=\"item && item.type === 'whitespaces'\"> {{item.content}} </span>\r\n            <br v-if=\"item && item.type === 'wrap'\"  :start=\"item.start\" />\r\n            <br v-if=\"item && item.type === 'wrap'\"  :start=\"item.start\" />\r\n            \r\n            <span v-if=\"item && item.type === 'annotation'\" class=\"text-annotation mr-1\" @mouseover=\"setFocus(item.id, true)\" @mouseleave=\"setFocus(item.id, true)\" @click=\"startEdit\" :style=\"{ border: border(item), cursor: 'default'}\" :start=\"item.start\">\r\n                <v-tooltip v-if=\"showTooltip\" bottom color=\"#00000000\" open-delay=500>\r\n                    <template v-slot:activator=\"{ on, attrs }\">\r\n                        <span v-if=\"item\" v-bind=\"attrs\" v-on=\"on\" style=\"cursor: pointer\" :class=\"'entity-'+item.id\">\r\n                            <span v-if=\"showTag\" class=\"text-annotation__annotation font-weight-light px-2\" :class=\"'entity-'+item.id\" :style=\"{ backgroundColor: tagBackground(item), color: 'white', padding: '0.05em 0' }\">\r\n                                {{ tagName(item) }}\r\n                            </span>\r\n                            <span class=\"text-annotation__word\">\r\n                                <span class=\"px-2\" :class=\"'entity-' + item.id + ' ' + highlightClass(item)\" :style=\"{backgroundColor: markBackground(item), padding: '0.05em 0'}\">\r\n                                    {{ item.content }}\r\n                                </span>\r\n                            </span>\r\n                            \t\r\n                        </span>\r\n                    </template>\r\n                    <div class=\"secondary--text pa-2 ma-1\" style=\"background: #ffffff; border: 1px solid #bbbbbb;\">\r\n                        <div v-if=\"showTooltipTag\" class=\"title\" :style=\"{color: tagBackground(item)}\">\r\n                            {{item.tag}}\r\n                        </div>\r\n                        <!-- <div v-if=\"showDate\" class=\"subtitle-2 text-right\" style=\"margin-top:-0.5em;\">\r\n                            {{item.updatedAt}}\r\n                        </div> -->\r\n                        <div v-if=\"showAuthor\" class=\"d-flex align-center\" style=\"\">\r\n                            <v-avatar size=36 >\r\n                                <img :src=\"item.author.photo\" >\r\n                            </v-avatar>\r\n                            <div class=\"px-3\" style=\"line-height:0.7\">\r\n                                <div class=\"subtitle-2\">{{item.author.name}}</div>\r\n                                <div class=\"caption\" style=\"margin-top: -0.6em;\">{{item.updatedAt}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <pre v-if=\"showComment\" class=\"caption  pt-2\" style=\"line-height: 1\">{{comment(item)}}</pre>\r\n                    </div>\r\n                </v-tooltip>\r\n                <span v-else :class=\"'entity-'+item.id\" style=\"cursor: pointer\">\r\n                    <span v-if=\"showTag\" class=\"text-annotation__annotation font-weight-bold px-2\" :class=\"'entity-'+item.id\" :style=\"{ backgroundColor: tagBackground(item), color: 'white', padding: '0.05em 0' }\">\r\n                        {{ tagName(item) }}\r\n                    </span>\r\n                    <span class=\"text-annotation__word\">\r\n                        <span class=\"px-2\" :class=\"'entity-'+item.id + ' ' + highlightClass(item)\" :style=\"{backgroundColor: markBackground(item), padding: '0.05em 0' }\">\r\n                            {{ item.content }}\r\n                        </span>\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        </template>\r\n        <v-menu \r\n        \tv-if=\"edited && !readonly\" \r\n        \tv-model=\"menu\" \r\n        \t:close-on-content-click=\"false\" \r\n        \tmin-width=450\r\n            max-width=450 \r\n        \t:position-x=\"edited.position.x\" \r\n        \t:position-y=\"edited.position.y\" \r\n        \t@input=\"changeMenuModel\" \r\n        \tz-index=5000\r\n        >\r\n            <div class=\"primary lighten-2 white--text pa-2 title\">\r\n                Edit tag\r\n            </div>    \r\n                    \r\n            <div class=\"secondary--text px-1 pt-3\" style=\"background: #ffffff\">\r\n            \t<div v-if=\"edited\">\r\n                    <div class=\"d-flex align-center mx-2 mb-4\">\r\n                        <v-avatar>\r\n                            <img :src=\"edited.author.photo\">\r\n                        </v-avatar>\r\n                        <div class=\"px-3\" style=\"line-height:0.7\">\r\n                            <div class=\"subtitle-2\">{{edited.author.name}}</div>\r\n                            <div class=\"caption\" style=\"margin-top: -0.6em;\">{{edited.author.role}}</div>\r\n                        </div>\r\n                        <v-spacer></v-spacer>\r\n                        <div class=\"subtitle-2 text-right\">{{edited.updatedAt}}</div>\r\n                    </div>\r\n                    <v-autocomplete class=\"mb-2\" hide-details outlined dense :value=\"edited.tag\" label=\"Tag\" :items=\"(options.decoration && options.decoration.entities) ? getPropertyValue(options.decoration.entities).map( d => d.tag) || [] : []\" @change=\"changeTag\">\r\n                    </v-autocomplete>\r\n                    <v-textarea class=\"mb-2\" rows=10 v-if=\"editable\" hide-details outlined :value=\"textChanges\" label=\"Text\" @input=\"changeText\"></v-textarea>\r\n                    <v-textarea class=\"mb-2\" hide-details outlined :value=\"edited.comment\" label=\"Comment\" @input=\"changeComment\"></v-textarea>\r\n                </div>\r\n                <div class=\"d-flex\">\r\n                    <v-btn text @click=\"removeMark()\">\r\n                        Remove\r\n                    </v-btn>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn text @click=\"cancelMark()\">\r\n                        Cancel\r\n                    </v-btn>\r\n                    <v-btn color=\"primary\" text @click=\"updateMark()\">\r\n                        Update\r\n                    </v-btn>\r\n                </div>\r\n            </div>\r\n        </v-menu>\r\n    </div>\r\n</template>\r\n<script>\r\nimport djvueMixin from \"@/mixins/core/djvue.mixin.js\";\r\nimport listenerMixin from \"@/mixins/core/listener.mixin.js\";\r\nimport { find, findIndex, extend, first, last, sortBy, isUndefined } from \"lodash\"\r\nimport { v4 } from \"uuid\"\r\nimport moment from \"moment\"\r\n\r\nwindow.moment = window.moment || moment\r\n\r\nconst genId = () => last(v4().split(\"-\"))\r\n\r\nexport default {\r\n    props: [\"options\", \"getPropertyValue\"],\r\n\r\n    mixins: [djvueMixin, listenerMixin],\r\n\r\n    data: () => ({\r\n        focused: null,\r\n        menu: null,\r\n        edited: null,\r\n        menu: false,\r\n        textChanges:\"\",\r\n        originalText:\"\"\r\n    }),\r\n\r\n\r\n    computed:{\r\n        \r\n        showTooltip(){\r\n\r\n            let tooltip = this.decoration.tooltip || {}\r\n            let show =  !isUndefined(tooltip.show) ? tooltip.show : true\r\n            return show\r\n            \r\n        },\r\n\r\n        showTag(){\r\n\r\n            let tag = this.decoration.tag || {}\r\n            let show =  (!isUndefined(tag.show)) ? tag.show : true\r\n            return show\r\n            \r\n        },\r\n\r\n        \r\n        showTooltipTag(){\r\n\r\n            let tooltip = this.decoration.tooltip || {}\r\n            let show =  !isUndefined(tooltip.tag) ? tooltip.tag : true\r\n            return show\r\n        \r\n        },\r\n\r\n\r\n        showDate(){\r\n\r\n            let tooltip = this.decoration.tooltip || {}\r\n            let show =  !isUndefined(tooltip.updatedAt) ? tooltip.updatedAt : true\r\n            return show\r\n            \r\n        },\r\n\r\n        showAuthor(){\r\n\r\n            let tooltip = this.decoration.tooltip || {}\r\n            let show =  !isUndefined(tooltip.author) ? tooltip.author : true\r\n            return show\r\n            \r\n        },\r\n\r\n        showComment(){\r\n\r\n            let tooltip = this.decoration.tooltip || {}\r\n            let show =  !isUndefined(tooltip.comment) ? tooltip.comment : true\r\n            return show\r\n            \r\n        },\r\n\r\n\r\n    },\r\n\r\n    created(){\r\n        \r\n            if(!this.options) return\r\n\r\n            this.text = (this.options && this.options.data) ? this.getPropertyValue(this.options.data.text) || \"\" : \"\"\r\n            this.text = this.text.replace(/[ ]{2,}/g, \" \")\r\n            this.entities = (this.options && this.options.data) ? this.getPropertyValue(this.options.data.value) || [] : []\r\n            this.readonly = (this.options && this.options.data) ? this.getPropertyValue(this.options.data.readonly) || false : false\r\n            this.editable = (this.options && this.options.data) ? this.getPropertyValue(this.options.data.editable) || false : false\r\n            \r\n            this.decoration = {\r\n                entities: (this.options && this.options.decoration) \r\n                    ? this.getPropertyValue(this.options.decoration.entities) || [] \r\n                    : [],\r\n                tag: (this.options && this.options.decoration) \r\n                    ? this.getPropertyValue(this.options.decoration.tag) || {\r\n                                                                              \"show\": true,\r\n                                                                              \"tagname\": true\r\n                                                                             } \r\n                    : {\r\n                          \"show\": true,\r\n                          \"tagname\": true\r\n                      },\r\n                tooltip: (this.options && this.options.decoration) \r\n                    ? this.getPropertyValue(this.options.decoration.tooltip) || {\r\n                                                                                  \"show\": true,\r\n                                                                                  \"tag\": true,\r\n                                                                                  \"author\": true,\r\n                                                                                  \"updatedAt\": true,\r\n                                                                                  \"note\": true\r\n                                                                                 } \r\n                    : {\r\n                      \"show\": true,\r\n                      \"tag\": true,\r\n                      \"author\": true,\r\n                      \"updatedAt\": true,\r\n                      \"note\": true\r\n                     },\r\n\r\n                highlight: (this.options && this.options.decoration) \r\n                    ? this.getPropertyValue(this.options.decoration.highlight) || {\r\n                                                                                      \"show\": true,\r\n                                                                                      \"class\": \"font-weight-bold\"\r\n                                                                                  }\r\n                    : {\r\n                          \"show\": true,\r\n                          \"class\": \"font-weight-bold\"\r\n                      },\r\n\r\n                class: (this.options && this.options.decoration) \r\n                    ? this.getPropertyValue(this.options.decoration.class) || \"\" \r\n                    : \"\",\r\n\r\n                style: (this.options && this.options.decoration) \r\n                    ? this.getPropertyValue(this.options.decoration.style) || \"\" \r\n                    : \"\",                        \r\n            }  \r\n        \r\n        \r\n            if(this.chunks) this.chunks()        \r\n    \r\n    },\r\n\r\n    methods: {\r\n\r\n        chunks() {\r\n            if (!this.options) return []\r\n            \r\n            let text = this.text || \"\"\r\n\r\n            \r\n            this.entities.forEach(e => {\r\n                e.id = e.id || genId()\r\n            })\r\n\r\n            this.entities = sortBy(this.entities, d => d.start)\r\n\r\n            this.$chunks = this.generateChunks({text, entities: this.entities})\r\n\r\n            // console.log(\"$chunks\", this.$chunks)\r\n\r\n            return this.$chunks\r\n        },\r\n\r\n        // generate text chunks\r\n        generateTextChunks(text, start) {\r\n            \r\n            let chunks = [];\r\n            const snippets = text.split(\"\\n\")\r\n            snippets.forEach((s, index) => {\r\n            \t    \r\n                // chunks.push({\r\n                //     type: (!!s.trim()) ? \"text\" : \"whitespaces\",\r\n                //     content: s.trim(),\r\n                //     start\r\n                // })\r\n\r\n                chunks.push({\r\n                    type: \"text\",\r\n                    content: s,\r\n                    start\r\n                })\r\n\t            \r\n\t            start += s.length\r\n\t            \r\n\r\n                if (index < snippets.length - 1) {\r\n                    \r\n                \r\n\t                    chunks.push({\r\n\t                        type: \"wrap\",\r\n\t                        content: \"\\n\",\r\n\t                        start\r\n\t                    })\r\n\r\n\t                start++\r\n\t                \r\n                }\r\n\r\n            })\r\n\r\n            return chunks.map( c => {\r\n                if(c.type == \"text\" && !c.content.trim()){\r\n                    c.type = \"whitespaces\" \r\n                }\r\n                return c\r\n            })\r\n        },\r\n\r\n\r\n        generateChunks({ text, entities }) {\r\n            let chunks = [];\r\n            let currentPos = 0;\r\n\r\n            let enabledEntities = entities.filter( e => !e.disabled)\r\n\r\n            enabledEntities.forEach(e => {\r\n\r\n                let part = text.substring(currentPos, e.start)\r\n                chunks = chunks.concat(this.generateTextChunks(part, currentPos))\r\n                currentPos += e.start+1\r\n\r\n\r\n                part = text.substring(e.start, e.end)\r\n                currentPos = e.end\r\n                \r\n                let chunk = {\r\n                    id: e.id,\r\n                    type: \"annotation\",\r\n                    author: e.author,\r\n                    tag: e.tag,\r\n                    comment: e.comment,\r\n                    content: part,\r\n                    start: e.start,\r\n                    end: e.end,\r\n                    disabled: e.disabled || false,\r\n                    updatedAt: moment(new Date(e.updatedAt)).format(\"DD MMM., YYYY HH:mm\"),\r\n                    newItem: e.newItem\r\n                }\r\n\r\n                chunks.push(chunk);\r\n            })\r\n\r\n            let part = text.substring(currentPos)\r\n            chunks = chunks.concat(this.generateTextChunks(part, currentPos))\r\n\r\n            return chunks\r\n        },\r\n\r\n\r\n        isTextIndent(index) {\r\n\r\n            if (index === 0) return true;\r\n            return false;\r\n\r\n        },\r\n\r\n        tagBackground(entity) {\r\n                let tag = find(this.decoration.entities, d => d.tag == entity.tag)\r\n                return (tag) ? tag.color || \"#777777\" : \"#777777\"\r\n        },\r\n\r\n        tagName(entity){\r\n\r\n            let tag = this.decoration.tag || {}\r\n            let name =  !isUndefined(tag.tagname) ? tag.tagname : true\r\n            return (name == true) ? entity.tag : (name) ? name : entity.tag\r\n            \r\n        },\r\n\r\n\r\n\r\n        markBackground(entity) {\r\n                let tag = find(this.decoration.entities, d => d.tag == entity.tag)\r\n                return (tag) ? tag.color + \"40\" || \"#77777740\" : \"#77777740\"\r\n        },\r\n\r\n        comment(entity) {\r\n            return (entity.comment) ? entity.comment : \"\"\r\n        },\r\n\r\n        setFocus(entityId, value) {\r\n\r\n            if(!entityId){\r\n                this.focused = null\r\n                return\r\n            }\r\n\r\n            if (value === true) {\r\n                this.focused = entityId\r\n            } else {\r\n                this.focused = null\r\n            }\r\n        },\r\n\r\n        isEdited(entity) {\r\n            if (!this.edited) return false\r\n            return findIndex(this.entities, e => e.id == entity.id) >= 0\r\n        },\r\n\r\n        border(entity) {\r\n\r\n            let highlight = this.decoration.highlight || {}\r\n            let show =  !isUndefined(highlight.show) ? highlight.show : true\r\n\r\n            if (entity.id == this.focused && show) {\r\n                return `2px solid ${this.tagBackground(entity)}`\r\n            } else {\r\n                return `2px solid #ffffff`\r\n            }\r\n        },\r\n\r\n        highlightClass(entity){\r\n            let highlight = this.decoration.highlight || {}\r\n            let _class =  this.getPropertyValue(highlight.class) || \"\"\r\n            let show =  !isUndefined(highlight.show) ? highlight.show : true\r\n\r\n            if (entity.id == this.focused && show) {\r\n                return _class\r\n            } else {\r\n                return \"\"\r\n            }  \r\n        },\r\n\r\n        \r\n        changeMenuModel(data) {\r\n            if (this.needEdit) {\r\n                this.$nextTick(() => {\r\n                    this.edited = JSON.parse(JSON.stringify(this.needEdit))\r\n                    this.needEdit = null\r\n                    this.menu = true\r\n                })\r\n\r\n            } else {\r\n                this.edited = null\r\n            }\r\n\r\n        },\r\n\r\n        // getTextFromTags(){\r\n            \r\n        //     let res = [\r\n        //         this.text.substring(0, ( first( this.entities )) ? first( this.entities ).start+1 : 0 )\r\n        //     ]\r\n            \r\n        //     console.log(\"-0-\",JSON.stringify(this.text.substring(0, ( first( this.entities )) ? first( this.entities ).start : 0 ) ))\r\n               \r\n        //     res = res.filter( d => d)\r\n            \r\n        //     for(let i = 0; i <  this.entities.length; i++){\r\n               \r\n        //        let c = this.entities[i]\r\n        //        let n = this.entities[i+1]\r\n               \r\n        //        res.push( c.text ) //this.text.substring(c.start, c.end) )\r\n        //        console.log(\"-2-\",c.start, c.end, JSON.stringify(c.text))\r\n        //        if(n){\r\n        //         res.push( this.text.substring(c.end, n.start) )\r\n        //         console.log(\"-3-\",c.end, n.start, JSON.stringify(this.text.substring(c.end, n.start) ))\r\n                \r\n        //        }\r\n                  \r\n        //     }\r\n\r\n        //     let e = ( last( this.entities ) ) ? last( this.entities ).end : 0\r\n        //     res.push( this.text.substring(e) )\r\n        //     console.log(\"LAST\", this.text.substring(e))\r\n        //     return res.filter( d => d ).join(\"\")\r\n\r\n        // },\r\n\r\n        getTextFromTags(){\r\n            return this.$chunks.map( c => c.content).join(\"\")\r\n\r\n        },        \r\n\r\n        updateMark() {\r\n\r\n            // console.log(\"$chunks\", this.$chunks)\r\n\r\n            let index = findIndex(this.entities, e => e.id == this.edited.id)\r\n            \r\n            let chunk = find(this.$chunks, c => c.id == this.edited.id)\r\n            \r\n            if (chunk){\r\n                chunk.content = this.textChanges.split(\"\\n\").join(\" \")\r\n            }\r\n\r\n            this.text =  this.getTextFromTags()\r\n\r\n            this.edited.updatedAt = this.edited.$date\r\n            delete this.edited.newItem\r\n            delete this.edited.$date\r\n            this.entities.splice(index, 1, extend({}, this.edited))\r\n\r\n            \r\n            let currentPos = 0\r\n\r\n            this.$chunks.forEach( c => {\r\n                \r\n                if(c.type == \"annotation\"){\r\n                    let e = find( this.entities, e => e.id == c.id)\r\n                    if(e){\r\n                        e.start = currentPos\r\n                        e.end = currentPos+c.content.length\r\n                        e.text = this.text.substring(e.start, e.end)\r\n                        e.content = c.content\r\n                    }   \r\n                } \r\n                currentPos = currentPos + c.content.length\r\n            })\r\n\r\n\r\n            // this.entities = this.entities.filter( e => e.text)\r\n\r\n            if(this.textChanges.length > 0){\r\n                this.setFocus(this.edited.id, true)\r\n            } else {\r\n                this.setFocus(null, true)\r\n            }    \r\n            \r\n            this.edited = null\r\n            this.menu = false\r\n            this.$emit(\"change\", this, { text: this.text, entities: this.entities } )\r\n            this.chunks()\r\n            \r\n        },\r\n\r\n        cancelMark() {\r\n\r\n            let index = findIndex(this.entities, e => e.id == this.edited.id)\r\n\r\n            this.entities[index].menu = false\r\n            this.entities.splice(index, 1, extend({}, this.entities[index]))\r\n            this.edited = null\r\n            this.menu = false\r\n        },\r\n\r\n        removeMark() {\r\n            let index = findIndex(this.entities, e => e.id == this.edited.id)\r\n            this.entities.splice(index, 1)\r\n            this.edited = null\r\n            this.menu = false\r\n            if(this.entities.length >0){\r\n                this.setFocus(last(this.entities).id, true)    \r\n            } else {\r\n                this.setFocus(null, true)\r\n            }\r\n            \r\n            this.$emit(\"change\", this, { text: this.text, entities: this.entities } )\r\n            this.chunks()\r\n        },\r\n\r\n        startEdit(event) {\r\n\r\n            let entityId = event.target.classList.value.split(\" \").filter(c => c.startsWith(\"entity-\"))[0]\r\n            entityId = (entityId) ? entityId.split(\"-\")[1] : null\r\n            if (!entityId) return\r\n\r\n\r\n            let rects = event.target.getClientRects()\r\n            let x = Infinity\r\n            let y = -Infinity\r\n            for (const rect of rects) {\r\n                x = Math.min(x, rect.left)\r\n                y = Math.max(y, rect.bottom)\r\n            }\r\n\r\n            y += 8\r\n\r\n            let f = find(this.entities, d => d.id == entityId)\r\n            if (f) {\r\n\r\n            \tthis.setFocus(f.id, true)\r\n\r\n                this.edited = extend({}, f)\r\n                this.edited.position = { x, y }\r\n                this.edited.author = {\r\n                    name: window.user.name,\r\n                    role: window.user.role,\r\n                    photo: window.user.photo\r\n                }\r\n                \r\n                this.textChanges = this.edited.text\r\n                this.originalText = this.edited.text\r\n\r\n                this.edited.$date = new Date()\r\n                this.edited.updatedAt = moment(new Date(this.edited.$date)).format(\"DD MMM., YYYY HH:mm\")\r\n                this.needEdit = JSON.parse(JSON.stringify(this.edited))\r\n                this.menu = true\r\n            \r\n            }\r\n        },\r\n\r\n        changeTag(data) {\r\n            this.edited.tag = data\r\n        },\r\n\r\n        changeComment(data) {\r\n            this.edited.comment = data\r\n        },\r\n\r\n        changeText(data) {\r\n            this.textChanges = data\r\n            // console.log(JSON.stringify(this.textChanges))\r\n        },\r\n\r\n\r\n        containsMarks(mark, sourceCollection) {\r\n            return sourceCollection.filter(s =>\r\n                ((s.start > mark.start) && (s.start < mark.end)) ||\r\n                ((s.end > mark.start) && (s.end < mark.end))\r\n            ).length > 0\r\n        },\r\n\r\n        selectWords( {start, end} ) {\r\n\r\n        \tconst reverseString = str => str.split(\"\").reverse().join(\"\")\r\n\r\n        \tlet str = this.text.substring(start, end)\r\n            // console.log(\">\",JSON.stringify(str))\r\n        \tlet startOffset = str.indexOf(str.trim())\r\n        \tlet endOffset = reverseString(str).indexOf(reverseString(str).trim()) \r\n\r\n        \tstart += startOffset\r\n        \tend -= endOffset + 1\r\n        \t\r\n            // console.log(\">>\",JSON.stringify(this.text.substring(start, end)))\r\n\r\n            const wordRegex = /[ \\n\\t]/\r\n\r\n            while (start >= 0 && !wordRegex.test(this.text[start])) {\r\n                // console.log(start, JSON.stringify(this.text[start]), !wordRegex.test(this.text[start]))\r\n                start--\r\n            }\r\n          \t\r\n            start++\r\n            \r\n            while (end < this.text.length && !wordRegex.test(this.text[end])) {\r\n                // console.log(end, JSON.stringify(this.text[end]), !wordRegex.test(this.text[end]))\r\n                end++\r\n\t        }\r\n            \r\n            // console.log(\">>>\",JSON.stringify(this.text.substring(start, end)))\r\n\r\n            return { start, end }\r\n\r\n    },\r\n\r\n        getNodeStart(node){ \r\n        \treturn (node.getAttribute) ? Number.parseInt(node.getAttribute(\"start\")) : null\r\n        },\r\n\r\n        getOffset(node){\r\n            let offset = 0\r\n            let searchString = node.innerHTML\r\n            let symbol = node.innerText[0]\r\n            while(searchString[offset] != symbol && offset < searchString.length) {\r\n                offset++\r\n            }    \r\n            return offset    \r\n        },\r\n\r\n        onMouseUp(event) {\r\n\r\n            if(this.readonly) return\r\n\r\n            const target = event.target;\r\n            if (\r\n                target.classList.contains(\"text-for-annotation\") ||\r\n                target.classList.contains(\"text-annotation-container\")\r\n            ) {\r\n\r\n                const selection = window.getSelection();\r\n                if (selection !== null && selection.toString().length) {\r\n                    \r\n                    let focusNode = selection.focusNode\r\n                    let anchorNode = selection.anchorNode\r\n                    \r\n                    let range = selection.getRangeAt(0)\r\n                    let nodeContainer = range.commonAncestorContainer\r\n                    let nodes = (nodeContainer.childNodes.length == 0) \r\n                    \t? [nodeContainer.parentNode]\r\n                    \t: Array.from(nodeContainer.children).filter( n => n.classList.contains(\"text-for-annotation\"))\r\n\r\n                    let i = findIndex(nodes, n => n == range.startContainer.parentNode)\r\n                    let j = findIndex(nodes, n => n == range.endContainer.parentNode)\r\n                   \r\n                    nodes = nodes.slice(i,j+1)\r\n\r\n                    let entityRanges = []\r\n                    \r\n                    if(nodes.length == 1){\r\n                    \tlet offset = this.getOffset(nodes[0]) //.innerHTML.indexOf(nodes[0].innerText) \r\n                    \t\r\n                        entityRanges.push({\r\n                    \t\tstart: range.startOffset - offset + this.getNodeStart(nodes[0]),\r\n                    \t\tend: range.endOffset - offset + this.getNodeStart(nodes[0]),\r\n                    \t\ttext: this.text.substring(\r\n                    \t\t\trange.startOffset-offset+this.getNodeStart(nodes[0]),\r\n                    \t\t\trange.endOffset-offset+this.getNodeStart(nodes[0])\r\n                    \t\t)\r\n                    \t\r\n                    \t})\r\n\r\n                        // console.log(\"<\",JSON.stringify(this.text.substring(\r\n                        //         range.startOffset-offset+this.getNodeStart(nodes[0]),\r\n                        //         range.endOffset-offset+this.getNodeStart(nodes[0])\r\n                        //     )))\r\n                    }\r\n\r\n                    if(nodes.length > 1){\r\n                    \tnodes.forEach((n, index) => {\r\n                    \t\tif(index == 0){\r\n                    \t\t\tlet offset = this.getOffset(nodes[0]) \r\n\t\t                    \tlet length = n.innerText.substring(range.startOffset-offset).length\r\n\t\t                \t\t\r\n\t\t                    \tentityRanges.push({\r\n\t\t                    \t\tstart: range.startOffset - offset + this.getNodeStart(n),\r\n\t\t                    \t\tend: range.startOffset-offset+this.getNodeStart(n) + length,\r\n\t\t                    \t\ttext: this.text.substring(\r\n\t\t                    \t\t\trange.startOffset-offset+this.getNodeStart(n),\r\n\t\t                    \t\t\trange.startOffset-offset+this.getNodeStart(n)+length\r\n\t\t                    \t\t)\r\n\t\t                    \t})\r\n\r\n\t\t                    }\r\n\r\n\t\t                    if(index == nodes.length-1){\r\n                    \t\t\t\r\n                    \t\t\tlet offset = this.getOffset(nodes[0]) \r\n\t\t                    \tlet length = n.innerText.substring(0, range.endOffset-offset).length\r\n\t\t                    \t\r\n\t\t\t\t\t\t\t\tentityRanges.push({\r\n\t\t                    \t\tstart: this.getNodeStart(n),\r\n\t\t                    \t\tend: range.endOffset - offset + this.getNodeStart(n),\r\n\t\t                    \t\ttext: this.text.substring(\r\n\t\t                    \t\t\tthis.getNodeStart(n),\r\n\t\t                    \t\t\trange.endOffset-offset+this.getNodeStart(n)\r\n\t\t                    \t\t)\t\r\n\t\t                    \t})\r\n\t\t                    }\r\n\r\n\t\t                    if(index < nodes.length-1 && index > 0){\r\n                    \t\t\t\r\n                    \t\t\tlet length = n.innerText.length\r\n\t\t                    \tentityRanges.push({\r\n\t\t                    \t\tstart: this.getNodeStart(n),\r\n\t\t                    \t\tend: this.getNodeStart(n) + length,\r\n\t\t                    \t\ttext: this.text.substring(\r\n\t\t                    \t\t\tthis.getNodeStart(n),\r\n\t\t                    \t\t\tthis.getNodeStart(n) + length\r\n\t\t                    \t\t)\r\n\t\t                    \t})\r\n\t\t                    }\r\n\r\n                    \t})\r\n                    }\r\n\r\n\r\n                    let insertedEntities = []\r\n\r\n                    entityRanges.forEach( r => {\r\n                    \t\r\n                    \tlet start = r.start\r\n                    \tlet end = r.end\r\n\r\n                        // console.log(\"<<\", start, end, JSON.stringify(this.text.substring(start, end)))\r\n\t                   \r\n\t                    let wordRange = this.selectWords({ start, end })\r\n\t                    \r\n\t                    let tag = find(this.decoration.entities, e => e.default)\r\n                        tag = (tag) ? tag.tag : \"comment\"\r\n\r\n                        const newEntity = {\r\n\r\n                            id: genId(),\r\n                            tag,\r\n                            author: {\r\n                                name: window.user.name,\r\n                                role: window.user.role,\r\n                                photo: window.user.photo\r\n                            },\r\n\r\n                            updatedAt: new Date(),\r\n                            start: wordRange.start,\r\n                            end: wordRange.end,\r\n                            text: this.text.substring(wordRange.start, wordRange.end).trim(),\r\n                            newItem: true\r\n\r\n                        }\r\n                        insertedEntities.push(newEntity)\r\n                    })\r\n\r\n                    this.entities = this.entities.concat(insertedEntities)\r\n                    \r\n                    this.$emit(\"change\", this, {text: this.text, entities: this.entities})\r\n                    selection.removeAllRanges()\r\n                    this.chunks()\r\n                    setTimeout(() => {\r\n                        this.setFocus(last(this.entities).id, true)\r\n                        setTimeout(() => {\r\n                            this.$forceUpdate()\r\n                        }, 20)\r\n                    }, \r\n                    20)\r\n                     \r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../../build/vuetify-loader/lib/loader.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../build/jace-loader/src/parser.js??ref--20-3!../../../../../build/jace-loader/src/parser.js??ref--18-1!../../../../../build/jace-loader/src/parser.js??ref--33-1!./text-annotator.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../build/vuetify-loader/lib/loader.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!../../../../../build/jace-loader/src/parser.js??ref--20-3!../../../../../build/jace-loader/src/parser.js??ref--18-1!../../../../../build/jace-loader/src/parser.js??ref--33-1!./text-annotator.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./text-annotator.vue?vue&type=template&id=5dc20e56&\"\nimport script from \"./text-annotator.vue?vue&type=script&lang=js&\"\nexport * from \"./text-annotator.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../../build/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\nimport { VAvatar } from 'vuetify/lib/components/VAvatar';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VMenu } from 'vuetify/lib/components/VMenu';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\nimport { VTooltip } from 'vuetify/lib/components/VTooltip';\ninstallComponents(component, {VAutocomplete,VAvatar,VBtn,VMenu,VSpacer,VTextarea,VTooltip})\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"sourceRoot":""}