(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-006adcfa","chunk-40a7e677"],{"16a0":function(t,e,n){"use strict";n("d87e")},"3a76":function(t,e,n){"use strict";n.r(e);var a=function(){var t=this,e=t._self._c;return e("v-card",{staticStyle:{"min-height":"500px"},attrs:{flat:"",color:"transparent"}},[e("v-divider"),!t.config.metadata.concepts||!t.config.metadata.collections||t.error1||t.error2||t.error3?e("v-row",{staticClass:"mx-3"},[e("h2",{staticClass:"warning--text font-weight-light headline"},[t._v(t._s(t.message))])]):t.items&&t.entities&&t.datapoints?e("v-row",[e("v-col",{staticClass:"ml-3 pa-0",attrs:{cols:"6"}},[e("v-tabs",{model:{value:t.activeTab,callback:function(e){t.activeTab=e},expression:"activeTab"}},[e("v-tab",{key:"indicators",attrs:{ripple:""}},[t._v("Indicators")]),e("v-tab",{key:"datapoints",attrs:{ripple:""}},[t._v("Datapoints")]),e("v-tab",{key:"entities",attrs:{ripple:""}},[t._v("Entities")]),e("v-tab-item",{key:"indicators",attrs:{ripple:""}},[e("v-treeview",{staticClass:"pa-2",attrs:{items:t.items,"item-key":"key","load-children":t.loadIndicators,"open-on-click":"",open:t.open,active:t.active,transition:"","item-text":"",color:"transparent",dense:""},on:{"update:open":function(e){t.open=e},"update:active":function(e){t.active=e}},scopedSlots:t._u([{key:"prepend",fn:function({item:n}){return["topic"==n.type?e("div",{staticClass:"subheading font-weight-light primary--text"},[t._v("\n                "+t._s(n.name)+"\n              ")]):e("v-layout",{class:t.indicatorClass(n),attrs:{"align-center":"",row:""},on:{click:function(e){return t.select(n)}}},[e("v-icon",{class:t.indicatorClass(n)},[t._v("\n                  mdi-file-table-outline\n                ")]),t._v("\n                "+t._s(n.name)+"\n                ")],1)]}}])})],1),e("v-tab-item",{key:"datapoints"},[t.datapoints?e("v-container",t._l(t.datapoints,(function(n,a){return e("v-row",{key:a,staticClass:"pt-2 mx-2",staticStyle:{cursor:"pointer"},on:{click:function(e){return t.selectDatapoint(n)}}},[e("v-icon",{staticClass:"subtitle-2 pr-2",class:t.selectedDp&&n.concept==t.selectedDp.concept?"primary--text":"secondary--text font-weight-light"},[t._v("\n                mdi-grid-large\n              ")]),e("h3",{staticClass:"subtitle-2",class:t.selectedDp&&n.concept==t.selectedDp.concept?"primary--text":"secondary--text font-weight-light"},[t._v("\n                "+t._s(n.name)+"\n              ")])],1)})),1):t._e()],1),e("v-tab-item",{key:"entities"},[t.entities?e("v-container",t._l(t.entities,(function(n,a){return e("v-row",{key:a,staticClass:"pt-2 mx-2",staticStyle:{cursor:"pointer"},attrs:{"pt-2":""},on:{click:function(e){return t.selectEntity(n)}}},[e("v-icon",{staticClass:"subtitle-2 pr-2",class:t.selectedEntity&&n.concept==t.selectedEntity.concept?"primary--text":"secondary--text font-weight-light"},[t._v("\n                mdi-ballot-outline\n              ")]),e("h3",{staticClass:"subtitle-2",class:t.selectedEntity&&n.concept==t.selectedEntity.concept?"primary--text":"secondary--text font-weight-light"},[t._v("\n                "+t._s(n.name)+"\n              ")])],1)})),1):t._e()],1)],1)],1),e("v-divider",{attrs:{vertical:""}}),e("v-col",{staticClass:"mx-2 px-0"},[0==t.activeTab&&null!=t.selected?e("v-card",{staticClass:"transparent",attrs:{flat:""}},[e("v-container",[e("v-row",{staticClass:"py-1 mx-0"},[e("v-spacer"),e("div",[e("span",{staticClass:"caption font-weight-light"},[t._v(t._s(t.selected.topic))])])],1),e("h2",{staticClass:"primary--text subheading font-weight-light"},[e("v-icon",{staticClass:"subheading",attrs:{color:"primary"}},[t._v(t._s("measure"==t.selected.type?"mdi-numeric":"mdi-calculator"))]),t._v("\n            "+t._s(t.selected.name)+" ("+t._s(t.selected.concept)+")\n          ")],1),e("v-divider"),e("p",{staticClass:"subtitle-2 pr-3 pt-3 mb-0 font-weight-light dj-meta"},[e("span",{staticClass:"font-weight-medium"},[t._v("\n              Type:\n            ")]),t._v("\n            "+t._s(t.selected.type)+"\n          ")]),e("p",{staticClass:"subtitle-2 pr-3 mb-0 font-weight-light dj-meta"},[e("span",{staticClass:"font-weight-medium"},[t._v("\n              Definition:\n            ")]),t._v("\n            "+t._s(t.selected.definition)+"\n          ")]),e("p",{staticClass:"subtitle-2 pr-3 mb-0 font-weight-light dj-meta"},[e("span",{staticClass:"font-weight-medium"},[t._v("\n              Units:\n            ")]),t._v("\n            "+t._s(t.selected.units)+"\n          ")]),e("p",{staticClass:"subtitle-2 pr-3 mb-0 font-weight-light dj-meta"},[e("span",{staticClass:"font-weight-medium"},[t._v("\n              Source:\n            ")]),t._v("\n            "+t._s(t.selected.source)+" "),e("a",{attrs:{href:t.selected.href}},[t._v(t._s(t.selected.href))])]),t.selected.args&&t.selected.args.length>0?e("div",{staticClass:"subtitle-2 pr-3 mb-0 font-weight-light dj-meta"},[e("span",{staticClass:"font-weight-medium pb-0"},[t._v("\n              Arguments:\n            ")]),t._l(t.selected.args,(function(n,a){return e("p",{key:a,staticClass:"mb-0 pl-2"},[e("a",{on:{click:function(e){return t.navigate({tab:0,indicator:n})}}},[e("v-icon",{staticClass:"body-2 primary--text ml-2 mr-1",staticStyle:{border:"1px solid"}},[t._v("mdi-call-made")]),t._v("\n                "+t._s(n.name)+"\n              ")],1)])}))],2):t._e(),t.selected.datapoints?e("div",[e("h2",{staticClass:"primary--text subheading font-weight-light"},[t._v("\n              Datapoints\n            ")]),e("v-divider"),t._l(t.selected.datapoints,(function(n,a){return e("v-layout",{key:a,attrs:{column:"","pt-2":""}},[e("h3",{staticClass:"primary--text body-2"},[e("a",{on:{click:function(e){return t.navigate({tab:1,datapoint:n})}}},[e("v-icon",{staticClass:"body-2 primary--text ml-2 mr-1",staticStyle:{border:"1px solid"}},[t._v("mdi-call-made")]),t._v("\n                  "+t._s(n.name)+"\n                ")],1)]),t._l(n.attr,(function(n,a){return e("div",{key:a,staticClass:"subtitle-2 pl-3"},[e("span",[e("span",{staticClass:"font-weight-medium"},[e("v-icon",{staticClass:"subheading pr-1"},[t._v(t._s(t.fieldTypeIcon(n.type)))]),t._v("\n                    "+t._s(n.name)+" :\n                  ")],1),e("span",{staticClass:"font-weight-light font-italic"},[t._v(t._s(n.type))])]),n.reference?e("span",[t._v("( ref to\n                  "),e("a",{on:{click:function(e){return t.navigate({tab:2,entity:n.reference.collection})}}},[e("v-icon",{staticClass:"body-2 primary--text ml-2 mr-1",staticStyle:{border:"1px solid"}},[t._v("mdi-call-made")]),t._v("\n                    "+t._s(`${n.reference.collection.concept} [ ${n.reference.attr} ]`)+"\n                  ")],1),t._v("\n                  )\n                ")]):t._e(),"time"==n.type?e("span",[t._v(t._s(`( format: ${n.format} )`))]):t._e()])}))],2)}))],2):t._e()],1)],1):t._e(),1==t.activeTab&&null!=t.dpInfo?e("v-card",{staticStyle:{background:"transparent !important"},attrs:{flat:""}},[e("v-container",[e("v-row",{staticClass:"py-1"},[e("v-spacer"),e("v-btn",{attrs:{text:"",small:"",color:"primary"},on:{click:function(e){return t.exportCollection(t.dpInfo)}}},[t._v("download xlsx")])],1),e("h3",{staticClass:"primary--text subheading font-weight-light"},[t._v(t._s(t.dpInfo.name)+" ( "+t._s(t.dpInfo.count)+" items )")]),e("v-divider"),t._l(t.dpInfo.attr,(function(n,a){return e("div",{key:a,staticClass:"subtitle-2"},[e("span",[e("span",{staticClass:"font-weight-medium"},[e("v-icon",{staticClass:"subheading pr-1"},[t._v(t._s(t.fieldTypeIcon(n.type)))]),t._v("\n                "+t._s(n.name)+" :\n              ")],1),e("span",{staticClass:"font-weight-light font-italic"},[t._v(t._s(n.type))])]),n.ref?e("span",[t._v("( ref to\n              "),e("a",{on:{click:function(e){return t.navigate({tab:2,entity:n.ref.collection})}}},[e("v-icon",{staticClass:"body-2 primary--text ml-2 mr-1",staticStyle:{border:"1px solid"}},[t._v("mdi-call-made")]),t._v("\n                "+t._s(`${n.ref.collection.concept} [ ${n.ref.attr} ]`)+"\n              ")],1),t._v("\n              )\n            ")]):t._e(),"time"==n.type?e("span",[t._v(t._s(`( format: ${n.format} )`))]):t._e(),n.def?e("span",[t._v("( Value of\n              "),e("a",{on:{click:function(e){return t.navigate({tab:0,indicator:n.def})}}},[e("v-icon",{staticClass:"body-2 primary--text ml-2 mr-1",staticStyle:{border:"1px solid"}},[t._v("mdi-call-made")]),t._v("\n                "+t._s(n.def.name+".")+"\n              ")],1),t._v("\n              )\n            ")]):t._e()])})),t.sampleTable?e("v-row",{staticClass:"mt-3 mx-0 px-0"},[e("v-col",[e("h3",{staticClass:"primary--text subheading font-weight-light"},[t._v("Sample")]),e("v-divider",{staticClass:"pb-2"}),e("v-data-table",{staticStyle:{display:"inline-grid"},attrs:{headers:t.sampleTable.headers,items:t.sampleTable.rows,dense:"","calculate-widths":"","items-per-page":Number.POSITIVE_INFINITY,"hide-default-footer":""},scopedSlots:t._u([{key:"body",fn:function(n){return[e("tbody",t._l(n.items,(function(n,a){return e("tr",{key:a},t._l(t.sampleTable.headers,(function(a,s){return e("td",{key:s,staticClass:"caption"},[t._v("\n                        "+t._s(n[a.value])+"\n                      ")])})),0)})),0)]}}],null,!1,1976349526)})],1)],1):t._e(),t.dpsExample?e("v-row",{staticClass:"mt-3 mx-0 px-0"},[e("v-col",[e("h3",{staticClass:"primary--text subheading font-weight-light"},[t._v("Data Processing Script Example")]),e("v-divider",{staticClass:"pb-2"}),e("highlight",{attrs:{content:t.dpsExample,lang:"dps",wrap:""}})],1)],1):t._e()],2)],1):t._e(),2==t.activeTab&&null!=t.entityInfo?e("v-card",{staticStyle:{background:"transparent !important"},attrs:{flat:""}},[e("v-container",[e("v-row",{staticClass:"py-1"},[e("v-spacer"),e("v-btn",{attrs:{text:"",small:"",color:"primary"},on:{click:function(e){return t.exportCollection(t.entityInfo)}}},[t._v("download xlsx")])],1),e("h3",{staticClass:"primary--text subheading font-weight-light"},[t._v(t._s(t.entityInfo.name)+" ( "+t._s(t.entityInfo.count)+" items )")]),e("v-divider"),t._l(t.entityInfo.attr,(function(n,a){return e("div",{key:a,staticClass:"subtitle-2"},[e("span",[e("span",{staticClass:"font-weight-medium"},[e("v-icon",{staticClass:"subheading pr-1"},[t._v(t._s(t.fieldTypeIcon(n.type)))]),t._v("\n                "+t._s(n.name)+" :\n              ")],1),e("span",{staticClass:"font-weight-light font-italic"},[t._v(t._s(n.type))])]),n.ref?e("span",[t._v("( ref to\n              "),e("a",{on:{click:function(e){return t.navigate({tab:2,entity:n.ref.collection})}}},[e("v-icon",{staticClass:"body-2 primary--text ml-2 mr-1",staticStyle:{border:"1px solid"}},[t._v("mdi-call-made")]),t._v("\n                "+t._s(`${n.ref.collection.concept} [ ${n.ref.attr} ]`)+"\n              ")],1),t._v("\n              )\n            ")]):t._e(),"time"==n.type?e("span",[t._v(t._s(`( format: ${n.format} )`))]):t._e(),n.def?e("span",[t._v("( Value of\n              "),e("a",{on:{click:function(e){return t.navigate({tab:0,indicator:n.def})}}},[e("v-icon",{staticClass:"body-2 primary--text ml-2 mr-1",staticStyle:{border:"1px solid"}},[t._v("mdi-call-made")]),t._v("\n                "+t._s(n.def.name+".")+"\n              ")],1),t._v("\n              )\n            ")]):t._e()])})),t.entityTable?e("v-row",{staticClass:"mt-3 mx-0 px-0"},[e("v-col",[e("h3",{staticClass:"primary--text subheading font-weight-light"},[t._v("Sample")]),e("v-divider",{staticClass:"pb-2"}),e("v-data-table",{staticStyle:{display:"inline-grid"},attrs:{headers:t.entityTable.headers,items:t.entityTable.rows,dense:"","calculate-widths":"","items-per-page":Number.POSITIVE_INFINITY,"hide-default-footer":""},scopedSlots:t._u([{key:"body",fn:function(n){return[e("tbody",t._l(n.items,(function(n,a){return e("tr",{key:a},t._l(t.entityTable.headers,(function(a,s){return e("td",{key:s,staticClass:"caption"},[t._v("\n                        "+t._s(n[a.value])+"\n                      ")])})),0)})),0)]}}],null,!1,45569643)})],1)],1):t._e(),t.dpsEntityExample?e("v-row",{staticClass:"mt-3 mx-0 px-0"},[e("v-col",[e("h3",{staticClass:"primary--text subheading font-weight-light"},[t._v("Data Processing Script Example")]),e("v-divider",{staticClass:"pb-2"}),e("highlight",{attrs:{content:t.dpsEntityExample,lang:"dps",wrap:""}})],1)],1):t._e()],2)],1):t._e()],1)],1):t._e(),e("v-divider")],1)},s=[],i=n("c555"),o=n("4e14"),r={methods:{dpsLoadCollectionSample(t){return new Promise((e,n)=>{this.$dps.run({script:`\n\t\t\t\t\t\n\t\t\t\t\tdml.select(from:"${t}", return:"value")\n\t\t\t\t\tset("data")\n\n\t\t\t\t\t<?javascript\n\t\t\t\t\t    $scope.attr = $scope.data.map( d => Object.keys(d));\n\t\t\t\t\t    $scope.field = [];\n\t\t\t\t\t    $scope.attr.forEach( a => {\n\t\t\t\t\t        $scope.field = _.union($scope.field,a)\n\t\t\t\t\t    });\n\t\t\t\t\t?>\n\t\t\t\t\t\n\t\t\t\t\tget("data")\n\t\t\t\t\tc.limit()\n\t\t\t\t\tc.map(<?\n\t\t\t\t\t\td => {\n\t\t\t\t\t        let res ={}\n\t\t\t\t\t        $scope.field.forEach( f => {\n\t\t\t\t\t            res[f] = ( d[f] ) ? d[f] : null\n\t\t\t\t\t        })\n\t\t\t\t\t        return res\n\t\t\t\t\t    }\n\t\t\t\t\t?>)\n\t\t\t\t\tset("data")\n\t\t\t\t\t<?javascript\n\t\t\t\t\t    $scope.res = {\n\t\t\t\t\t        dataset:{\n\t\t\t\t\t            dimensions: Object.keys($scope.data[0]),\n\t\t\t\t\t            source: $scope.data\n\t\t\t\t\t        }\n\t\t\t\t\t    };\n\t\t\t\t\t?>\n\t\t\t\t\treturn("res")\n\t\t\t\t`}).then(t=>{"error"==t.type?n(t.data):e(t.data)})})},dpsLoadSchema(){return new Promise((t,e)=>{this.$dps.run({script:'\n\t\t\t\t\tddl.desc("dj-data", return:"identity")\n\t\t\t\t'}).then(n=>{"error"==n.type?e(n.data):t(n.data)})})},dpsUploadCollections(t){return new Promise((e,n)=>{this.$dps.run({script:'\n\n\t\t\t\t\t<?javascript\n\t\t\t\t\t    $scope.file = $scope.$file.name;\n\t\t\t\t\t?>\n\n\t\t\t\t\tfile.load({{file}})\n\t\t\t\t\tset("db")\n\t\t\t\t\tddl.desc()\n\t\t\t\t\tset("collections")\n\n\n\t\t\t\t\t<?javascript\n\t\t\t\t\t    let m = {\n\t\t\t\t\t        "identity": "",\n\t\t\t\t\t        "schema": "dj-data",\n\t\t\t\t\t        "attributes": {\n\t\t\t\t\t            "value": {\n\t\t\t\t\t                "type": "json"\n\t\t\t\t\t            }\n\t\t\t\t\t        },\n\t\t\t\t\t        "permissions": {\n\t\t\t\t\t            "create": {\n\t\t\t\t\t                "role": [\n\t\t\t\t\t                    "owner",\n\t\t\t\t\t                    "administrator"\n\t\t\t\t\t                ]\n\t\t\t\t\t            },\n\t\t\t\t\t            "alter": {\n\t\t\t\t\t                "role": [\n\t\t\t\t\t                    "owner",\n\t\t\t\t\t                    "administrator"\n\t\t\t\t\t                ]\n\t\t\t\t\t            },\n\t\t\t\t\t            "drop": {\n\t\t\t\t\t                "role": [\n\t\t\t\t\t                    "owner",\n\t\t\t\t\t                    "administrator"\n\t\t\t\t\t                ]\n\t\t\t\t\t            },\n\t\t\t\t\t            "desc": {\n\t\t\t\t\t                "role": [\n\t\t\t\t\t                    "owner",\n\t\t\t\t\t                    "administrator"\n\t\t\t\t\t                ]\n\t\t\t\t\t            },\n\t\t\t\t\t            "select": {\n\t\t\t\t\t                "role": [\n\t\t\t\t\t                    "any",\n\t\t\t\t\t                    "owner",\n\t\t\t\t\t                    "administrator"\n\t\t\t\t\t                ]\n\t\t\t\t\t            },\n\t\t\t\t\t            "insert": {\n\t\t\t\t\t                "role": [\n\t\t\t\t\t                    "owner",\n\t\t\t\t\t                    "administrator"\n\t\t\t\t\t                ]\n\t\t\t\t\t            },\n\t\t\t\t\t            "update": {\n\t\t\t\t\t                "role": [\n\t\t\t\t\t                    "owner",\n\t\t\t\t\t                    "administrator"\n\t\t\t\t\t                ]\n\t\t\t\t\t            },\n\t\t\t\t\t            "delete": {\n\t\t\t\t\t                "role": [\n\t\t\t\t\t                    "owner",\n\t\t\t\t\t                    "administrator"\n\t\t\t\t\t                ]\n\t\t\t\t\t            }\n\t\t\t\t\t        },\n\t\t\t\t\t    };    \n\t\t\t\t\t    \n\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.sheets = Object.keys($scope.db);\n\t\t\t\t\t    $scope.collections = $scope.collections.map(c => c.identity)\n\n\t\t\t\t\t    $scope.toBeDrop = $scope.sheets\n\t\t\t\t\t                        .filter( s => _.find($scope.collections, c => c == s))\n\n\t\t\t\t\t    $scope.toBeCreate = $scope.sheets\n\t\t\t\t\t                .map( s => {\n\t\t\t\t\t\t                 let res = Object.assign({},m);\n\t\t\t\t\t\t                 res.identity = s\n\t\t\t\t\t\t                 return res\n\t\t\t\t\t                });\n\t\t\t\t\t    $scope.values = $scope.sheets.map( s => $scope.db[s].map(v=> ({id:v.id, value:v})));\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.ddlDropScript = $scope.toBeDrop\n\t\t\t\t\t        .map( c => \n\t\t\t\t\t            \'ddl.drop(model:"\'+c+\'");info("\'+c+\'")\'\n\t\t\t\t\t        )\n\t\t\t\t\t        .join(";")\n\t\t\t\t\t    $scope.ddlDropScript = ($scope.ddlDropScript) ? $scope.ddlDropScript : "ctx(\'noop\')"\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.ddlCreateScript = $scope.toBeCreate\n\t\t\t\t\t        .map( ( c, index ) => \n\t\t\t\t\t            \'info({{toBeCreate[\'+index+\'].identity}});ddl.create(model:{{toBeCreate[\'+index+\']}})\'\n\t\t\t\t\t        )\n\t\t\t\t\t        .join(";");\n\t\t\t\t\t    $scope.ddlCreateScript = ($scope.ddlCreateScript) ? $scope.ddlCreateScript : "ctx(\'noop\')"\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.dmlScript = $scope.sheets\n\t\t\t\t\t        .map( ( s, index ) => \n\t\t\t\t\t            \'info("\'+s+\'");dml.insertOrUpdate(into:"\'+s+\'", values:{{values[\'+index+\']}});info()\'\n\t\t\t\t\t        )\n\t\t\t\t\t        .join(";");\n\t\t\t\t\t    \n\t\t\t\t\t?>\n\t\t\t\t\tinfo("Drop collections")\n\t\t\t\t\trun({{ddlDropScript}})\n\t\t\t\t\tinfo("Create collections")\n\t\t\t\t\trun({{ddlCreateScript}})\n\t\t\t\t\tinfo("Insert or update values")\n\t\t\t\t\trun({{dmlScript}})\n\t\t\t\t\tlog()\n\t\t\t\t\t',state:{},file:t}).then(t=>{"error"==t.type?n(t.data):e(t.data)})})},dpsDownloadCollection(t){return new Promise((e,n)=>{this.$dps.run({script:`\n\t\t\t\t\t\n\t\t\t\t\tdml.select(from:"${t.concept}", return:"value")\n\t\t\t\t\tset("data")\n\n\t\t\t\t\t<?javascript\n\t\t\t\t\t    $scope.attr = $scope.data.map( d => Object.keys(d));\n\t\t\t\t\t    $scope.field = [];\n\t\t\t\t\t    $scope.attr.forEach( a => {\n\t\t\t\t\t        $scope.field = _.union($scope.field,a)\n\t\t\t\t\t    });\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.publisher = d => {\n\t\t\t\t\t        let res ={}\n\t\t\t\t\t        $scope.field.forEach( f => {\n\t\t\t\t\t            res[f] = ( d[f] ) ? d[f] : null\n\t\t\t\t\t        })\n\t\t\t\t\t        return res\n\t\t\t\t\t    }    \n\t\t\t\t\t?>\n\t\t\t\t\tget("data")\n\t\t\t\t\tc.map({{publisher}})\n\n\n\t\t\t\t\texport("${t.concept}.xlsx")\n\n\t\t\t`}).then(t=>{"error"==t.type?n(t):e(this.$dps.getBaseURL()+t.data.url)})})},dpsLoadConcepts(t){return new Promise((e,n)=>{this.$dps.run({script:`\n\t\t\t\t\tdml.select(from:"${t.concepts}", return:"value")\n\t\t\t\t\tc.uniqueBy("topic")\n\t\t\t\t\tc.order()\n\t\t\t\t\tset("topics")\n\n\t\t\t\t\t<?javascript\n\t\t\t\t\t    $scope.tree = {name:"topic",children:[]}\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.topics.forEach (t => {\n\t\t\t\t\t        \n\t\t\t\t\t        let path = t.split(":")\n\t\t\t\t\t        let current = $scope.tree.children\n\t\t\t\t\t        \n\t\t\t\t\t        path.forEach(( part, index ) => {\n\t\t\t\t\t            let f = _.find(current, t => t.name == part)\n\t\t\t\t\t            if(!f) {\n\t\t\t\t\t                current.push({\n\t\t\t\t\t                    name:part, \n\t\t\t\t\t                    children: [],\n\t\t\t\t\t                    type:"topic",\n\t\t\t\t\t                    path: (index == path.length-1) ? t : undefined\n\t\t\t\t\t                })\n\t\t\t\t\t                current = current[current.length-1].children\n\t\t\t\t\t            } else {\n\t\t\t\t\t                current = f.children\n\t\t\t\t\t            }\n\t\t\t\t\t        })\n\t\t\t\t\t        \n\t\t\t\t\t    })\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.tree = $scope.tree.children\n\t\t\t\t\t?>\n\n\t\t\t\t\treturn ("tree")\n\t\t\t\t\t`}).then(t=>{"error"==t.type?n(t.data):e(t.data)})})},dpsLoadEntityInfo(t,e){return new Promise((n,a)=>{this.$dps.run({script:`\n\t\t        \t<?javascript\n\t\t\t\t    $scope.mapper = d => d.value; \n\t\t\t\t?>\n\t\t\t\tdml.select(from:"${e.concept}", return:"value")\n\t\t\t\tset("data")\n\n\t\t\t\tdml.select(from:"${t.collections}", where:<? d => d.value.concept.startsWith("${e.concept}")  ?>, return:"value")\n\t\t\t\tset("collections")\n\n\t\t\t\tdml.select(from:"${t.concepts}", return:"value")\n\t\t\t\tset("indicators")\n\n\t\t\t\t<?javascript\n\t\t\t\t    let getCollectionDef = concept => {\n\t\t\t\t      let collection = _.find($scope.collections, c => c.concept == concept)\n\t\t\t\t      collection.attr = $scope.collections\n\t\t\t\t        .filter( c => c.concept.split(".").length > 1)\n\t\t\t\t        .map( a => {\n\t\t\t\t            if( a.ref ) {\n\t\t\t\t                let names = a.ref.split(".")\n\t\t\t\t                // a.names = names\n\t\t\t\t                a.ref = {}\n\t\t\t\t                a.ref.attr = names[1]\n\t\t\t\t                a.ref.collection = {\n\t\t\t\t                \tconcept:names[0]\n\t\t\t\t                }//getCollectionDef(names[0])\n\t\t\t\t            }\n\t\t\t\t            if( a.def ){\n\t\t\t\t                a.def = _.find($scope.indicators, i => i.concept == a.def.split(".")[1])\n\t\t\t\t            }\n\t\t\t\t            return a\n\t\t\t\t        })\n\t\t\t\t    // let collection = {\n\t\t\t\t    //     concept\n\t\t\t\t    // }\n\t\t\t\t      return collection\n\t\t\t\t    }\n\t\t\t\t    $scope.counts = {\n\t\t\t\t        total: $scope.data.length \n\t\t\t\t    }\n\t\t\t\t    Object.keys( $scope.data[0]).forEach( key => {\n\t\t\t\t        $scope.counts[key] = _.unique($scope.data, key).length\n\t\t\t\t    });\n\t\t\t\t    $scope.res = getCollectionDef("${e.concept}")\n\t\t\t\t    $scope.res.count = $scope.counts.total\n\t\t\t\t    $scope.res.attr = $scope.res.attr.map( a => {\n\t\t\t\t        a.count = $scope.counts[a.concept.split(".")[1]]\n\t\t\t\t        return a\n\t\t\t\t    })\n\t\t\t\t?>\n\t\t\t\treturn ("res")\n\n\n\t\t        `}).then(t=>{"error"==t.type?a(t.data):n(t.data)})})},dpsLoadDatapointInfo(t,e){return new Promise((n,a)=>{this.$dps.run({script:`\n\t\t\t\t\n\t\t\t\tdml.select(from:"${e.concept}", return:"value")\n\t\t\t\tset("data")\n\n\t\t\t\tdml.select(from:"${t.collections}",  where:<? d => d.value.concept.startsWith("${e.concept}")  ?>, return:"value")\n\t\t\t\tset("collections")\n\n\t\t\t\tdml.select(from:"${t.concepts}", return:"value")\n\t\t\t\tset("indicators")\n\n\t\t\t\t<?javascript\n\t\t\t\t    let getCollectionDef = concept => {\n\t\t\t\t      let collection = $scope.collections.filter( c => c.concept == concept)[0]\n\t\t\t\t      collection.attr = $scope.collections\n\t\t\t\t        .filter( c => c.concept.split(".").length>1 && c.concept.split(".")[0] == concept)\n\t\t\t\t        .map( a => {\n\t\t\t\t            if( a.ref ) {\n\t\t\t\t                let names = a.ref.split(".")\n\t\t\t\t                a.ref = {}\n\t\t\t\t                a.ref.attr = names[1]\n\t\t\t\t                a.ref.collection = {\n\t\t\t\t                \tconcept:names[0]\n\t\t\t\t                }//getCollectionDef(names[0])\n\t\t\t\t            }\n\t\t\t\t            if( a.def ){\n\t\t\t\t                a.def = _.find($scope.indicators, i => i.concept == a.def.split(".")[1])\n\t\t\t\t            }\n\t\t\t\t            return a\n\t\t\t\t        })\n\t\t\t\t    \n\t\t\t\t      return collection\n\t\t\t\t    }\n\t\t\t\t    $scope.counts = {\n\t\t\t\t        total: $scope.data.length \n\t\t\t\t    }\n\t\t\t\t    Object.keys( $scope.data[0]).forEach( key => {\n\t\t\t\t        $scope.counts[key] = _.unique($scope.data, key).length\n\t\t\t\t    });\n\t\t\t\t    $scope.res = getCollectionDef("${e.concept}")\n\t\t\t\t    $scope.res.count = $scope.counts.total\n\t\t\t\t    $scope.res.attr = $scope.res.attr.map( a => {\n\t\t\t\t        a.count = $scope.counts[a.concept.split(".")[1]]\n\t\t\t\t        return a\n\t\t\t\t    })\n\t\t\t\t?>\n\t\t\t\treturn ("res")\n        `}).then(t=>{"error"==t.type?a(t.data):n(t.data)})})},dpsLoadDatapoints(t){return new Promise((e,n)=>{this.$dps.run({script:`\n\t\t\t\tdml.select(from:"${t.collections}", where:<? d => d.value.type == "datapoint" ?>, return:"value")\n        `}).then(t=>{"error"==t.type?n(t.data):e(t.data)})})},dpsLoadEntities(t){return new Promise((e,n)=>{this.$dps.run({script:`\n\t\t\t\tdml.select(\n\t\t\t\t    from:"${t.collections}", \n\t\t\t\t    where: <? d => d.value.type == "entity" ?>, \n\t\t\t\t    return: "value"\n\t\t\t\t)\n\n        `}).then(t=>{"error"==t.type?n(t.data):e(t.data)})})},dpsLoadSample(t,e){return new Promise((n,a)=>{this.$dps.run({script:`\n          \t\tdml.select(\n\t\t\t\t    from:"${t.collections}", \n\t\t\t\t    where:<? d => d.value.concept.startsWith("${e.concept}.") && d.value.concept.split(".").length > 1 ?>, \n\t\t\t\t    return:<? d => d.value.concept.split(".")[1]?>\n\t\t\t\t)\n\t\t\t\tset("header")\n\n          \t\tdml.select(from:"${e.concept}", return:"value")\n\t\t\t\tc.limit()\n\t\t\t\tset("data")\n\t\t\t\t<?javascript\n\t\t\t\t    $scope.res = {\n\t\t\t\t        dataset:{\n\t\t\t\t            dimensions: $scope.header,\n\t\t\t\t            source: $scope.data\n\t\t\t\t        }\n\t\t\t\t    };\n\t\t\t\t?>\n\t\t\t\treturn("res")\n        `}).then(t=>{"error"==t.type?a(t.data):n(t.data)})})},dpsLoadEntitySample(t,e){return new Promise((n,a)=>{this.$dps.run({script:`\n          \tdml.select(\n\t\t\t    from:"${t.collections}", \n\t\t\t    where:<? d => d.value.concept.startsWith("${e.concept}.") && d.value.concept.split(".").length > 1 ?>, \n\t\t\t    return:<? d => d.value.concept.split(".")[1]?>\n\t\t\t)\n\t\t\tset("header")\n\n\t\t\tdml.select(from:"${e.concept}", return:"value")\n\t\t\tc.limit()\n\t\t\tset("data")\n\t\t\t<?javascript\n\t\t\t    $scope.res = {\n\t\t\t        dataset:{\n\t\t\t            dimensions: $scope.header,\n\t\t\t            source: $scope.data\n\t\t\t        }\n\t\t\t    };\n\t\t\t?>\n\t\t\treturn("res")\n          `}).then(t=>{"error"==t.type?a(t.data):n(t.data)})})},dpsLoadIndicators(t,e){return new Promise((n,a)=>{this.$dps.run({script:`\n\t\t\t\t<?javascript\n\t\t\t\t    \n\t\t\t\t    $scope.mapper = d => {\n\t\t\t\t        let res = {}\n\t\t\t\t        res.id = d.id\n\t\t\t\t        res.concept = d.value.concept\n\t\t\t\t        res.name = d.value.name\n\t\t\t\t        res.topic = d.value.topic\n\t\t\t\t        res.definition = d.value.definition\n\t\t\t\t        res.units = d.value.units\n\t\t\t\t        res.args = (d.value.args) ? d.value.args.split(",").map(d => d.trim()) : []\n\t\t\t\t        res.source = d.value.source\n\t\t\t\t        res.href = d.value.href\n\t\t\t\t        res.type = d.value.type\n\t\t\t\t        return res\n\t\t\t\t    };\n\t\t\t\t   \n\t\t\t\t?>  \n\n\t\t\t\tdml.select(from:"${t.concepts}", where:<? d => d.value.topic == "${e.path}" ?>, map:{{mapper}})\n\t\t\t\tset("indicators")\n\t\t\t\tdml.select(from:"${t.concepts}", map:{{mapper}})\n\t\t\t\tset("allIndicators")\n\t\t\t\t\n\t\t\t\tdml.select(from:"${t.collections}", \n\t\t\t\t\tmap:\n\t\t\t\t\t<?\n\t\t\t\t\t\titem => {\n\t\t\t\t\t        let res = item.value\n\t\t\t\t\t        res.id = item.id\n\t\t\t\t\t        return res\n\t\t\t\t\t    }\n\t\t\t\t\t?>\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tset("cDef")\n\n\t\t\t\t<?javascript\n\n\t\t\t\t    let getCollectionDef = concept => {\n\t\t\t\t      let collection = _.find( $scope.cDef, c => c.concept == concept)\n\t\t\t\t      collection.attr = $scope.cDef\n\t\t\t\t        .filter( c => c.concept.split(".").length>1 && c.concept.split(".")[0] == concept)\n\t\t\t\t        .map( a => {\n\t\t\t\t            if( a.ref ) {\n\t\t\t\t                let names = a.ref.split(".")\n\t\t\t\t                a.reference = {}\n\t\t\t\t                a.reference.attr = names[1]\n\t\t\t\t                a.reference.collection = { concept:names[0] } //getCollectionDef(names[0])\n\t\t\t\t            }\n\t\t\t\t            return a\n\t\t\t\t        })\n\t\t\t\t    \n\t\t\t\t      return collection\n\t\t\t\t    }\n\n\n\t\t\t\t    $scope.res = $scope.indicators.map( ind => {\n\t\t\t\t        let res = JSON.parse(JSON.stringify(ind))\n\t\t\t\t        res.datapoints = $scope.cDef\n\t\t\t\t            .filter( c => c.def && c.def.split(".")[1] == ind.concept )\n\t\t\t\t            .map( c => getCollectionDef(c.concept.split(".")[0]))\n\t\t\t\t        let args = res.args || []\n\t\t\t\t        args = args.map( c => {\n\t\t\t\t           let f = _.find($scope.allIndicators, d => d.concept == c)\n\t\t\t\t           if(f) return {\n\t\t\t\t                name: f.name,\n\t\t\t\t                concept: f.concept,\n\t\t\t\t                topic: f.topic\n\t\t\t\t            }\n\t\t\t\t            return null\n\t\t\t\t       })    \n\t\t\t\t        \n\t\t\t\t        res.args = args.filter(d => d)\n\t\t\t\t            \n\t\t\t\t        return res    \n\t\t\t\t    })\n\t\t\t\t?>\n\n\t\t\t\treturn("res")\n\t\t\t`}).then(t=>{"error"==t.type?a(t.data):n(t.data)})})}}},c=function(){var t=this,e=t._self._c;return e("config-dialog",{attrs:{options:t.props,submit:t.submit}})},l=[],d=n("a410"),p={name:"DataExplorerConfig",components:{"config-dialog":d["a"]},props:["options","submit"],computed:{props(){return{icon:this.options.config.icon,title:`data-explorer-widget: ${this.options.config.id} ${this.options.config.name}`,config:this.options.config,editorTree:this.editorTree}}},data(){return{editorTree:[{name:"Configuration",children:[{name:"Widget",editor:()=>n.e("chunk-2d226cca").then(n.bind(null,"e9cc"))},{name:"Metadata",editor:()=>n.e("chunk-2d0aa5c4").then(n.bind(null,"114b"))},{name:"Data management",editor:()=>n.e("chunk-2d21447c").then(n.bind(null,"afef"))}]}]}}},m=p,h=n("2877"),u=Object(h["a"])(m,c,l,!1,null,null,null),f=u.exports,g=n("a24c"),v=n("2ef0");let y=(t,e)=>{let n=Object(v["find"])(t,t=>t.name==e[0]);return 1==e.length?n:(e.splice(0,1),y(n.children,e))},_=(t,e)=>{let n=Object(v["find"])(t,t=>t.name==e[0]);return 1==e.length?[n.key]:(e.splice(0,1),[n.key].concat(_(n.children,e)))};var b={name:"ds-explorer-widget",icon:"mdi-database",mixins:[i["a"],o["a"],r],components:{highlight:g["default"]},methods:{fieldTypeIcon(t){let e={string:"mdi-format-color-text",text:"mdi-format-color-text",time:"mdi-clock-outline",float:"mdi-numeric",int:"mdi-numeric",integer:"mdi-numeric",number:"mdi-numeric",geojson:"mdi-map-marker-outline",geo:"mdi-map-marker-outline",geometry:"mdi-map-marker-outline"},n=e[t];return n||"mdi-alpha-f"},exportCollection(t){this.dpsDownloadCollection(t).then(t=>{window.location.href=t})},navigate({tab:t,indicator:e,datapoint:n,entity:a}){if(0==t&&e.topic){let t=y(this.items,e.topic.split(":"));0==t.children.length?this.loadIndicators(t).then(()=>{this.selected=y(this.items,(e.topic+":"+e.name).split(":")),this.open=_(this.items,e.topic.split(":"))}):(this.selected=y(this.items,(e.topic+":"+e.name).split(":")),this.open=_(this.items,e.topic.split(":")))}1==t&&(this.selectedDp=n),2==t&&(this.selectedEntity=a),this.activeTab=t},loadEntityInfo(t,e){this.dpsLoadEntityInfo(t,e).then(t=>{this.entityInfo=t,this.message=null}).catch(()=>{this.message="Cannot load entity Info"})},loadDatapointInfo(t,e){this.dpsLoadDatapointInfo(t,e).then(t=>{this.dpInfo=t,this.message=null}).catch(()=>{this.message="Cannot load datapoint Info"})},loadDatapoints(t){this.dpsLoadDatapoints(t).then(t=>{this.datapoints=t,this.error2=!1}).catch(()=>{this.error2=!0,this.message="Cannot load datapoints"})},loadEntities(t){this.dpsLoadEntities(t).then(t=>{this.error3=!1,this.entities=t}).catch(()=>{this.error3=!0,this.message="Cannot load entities"})},indicatorClass(t){return this.selected?t.id!=this.selected.id?"subtitle-2 font-weight-light secondary--text":"subtitle-2 primary--text":"subtitle-2 font-weight-light"},loadSample(t,e){this.dpsLoadSample(t,e).then(t=>{this.sample=t,this.dpsExample=`// fetch ${e.concept} collection\ndml.select(from:"${e.concept}")\n// limit rows count\ncollection.limit(5)`})},loadEntitySample(t,e){this.dpsLoadEntitySample(t,e).then(t=>{this.entitySample=t,this.dpsEntityExample=`// fetch ${e.concept} collection\ndml.select(from:"${e.concept}")\n// limit rows count\ncollection.limit(5)`})},loadIndicators(t){return this.dpsLoadIndicators(this.config.metadata,t).then(e=>(t.children=e,this.items=JSON.parse(JSON.stringify(this.items)),console.log("indicators",this.items),this.items)).catch(()=>{this.message="Cannot load indicators"})},normalize(t){let e=t=>(t=t.map(t=>(t.children?t.children=e(t.children):t.children=[],t.key=this.$djvue.randomName(),t)),t);return e(t)},select(t){this.selected,this.selected=t},selectDatapoint(t){this.selectedDp,this.selectedDp=t},selectEntity(t){this.selectedEntity,this.selectedEntity=t},loadConcepts(t){this.dpsLoadConcepts(t).then(t=>{this.error1=!1,this.items=this.normalize(t),console.log("indicators",this.items)}).catch(()=>{this.error1=!0,this.message="Cannot load concepts"})},onReconfigure(t){return this.$dialogManager.showAndWait(f,{width:"80%"},{config:t})}},props:["config"],computed:{sampleTable(){return this.sample?{headers:this.sample.dataset.dimensions.map(t=>({text:t,align:"center",value:t})),rows:this.sample.dataset.source}:null},entityTable(){return this.entitySample?{headers:this.entitySample.dataset.dimensions.map(t=>({text:t,align:"center",value:t})),rows:this.entitySample.dataset.source}:null}},watch:{selectedDp(t){t&&(this.loadSample(this.config.metadata,t),this.loadDatapointInfo(this.config.metadata,t))},selectedEntity(t){t&&(this.loadEntitySample(this.config.metadata,t),this.loadEntityInfo(this.config.metadata,t))},"config.metadata":{handler(t){t.concepts&&t.collections?(this.error1=!0,this.message="Loading...",this.loadConcepts(t),this.loadDatapoints(t),this.loadEntities(t)):(this.error1=!0,this.message="No data available")},deep:!0}},created(){this.config.metadata&&this.config.metadata.concepts&&this.config.metadata.collections?(this.error1=!0,this.message="Loading...",this.loadConcepts(this.config.metadata),this.loadDatapoints(this.config.metadata),this.loadEntities(this.config.metadata)):(this.message="No data available",this.error1=!0)},mounted(){this.$emit("init")},data:()=>({items:null,open:[],active:[],selected:null,activeTab:null,datapoints:null,selectedDp:null,sample:null,dpsExample:null,dpInfo:null,entities:null,selectedEntity:null,entitySample:null,dpsEntityExample:null,entityInfo:null,title:"World Development Indicators",message:"Loading...",error1:!1,error2:!1,error3:!1})},$=b,w=(n("9689"),n("fef8")),C=n.n(w),x=n("8336"),k=n("b0af"),S=n("62ad"),D=n("a523"),I=n("8fea"),E=n("ce7e"),j=n("132d"),T=n("a722"),L=n("0fd9"),O=n("2fa4"),P=n("71a3"),V=n("c671"),N=n("fe57"),q=n("eb2a"),B=Object(h["a"])($,a,s,!1,null,null,null);e["default"]=B.exports;C()(B,{VBtn:x["a"],VCard:k["a"],VCol:S["a"],VContainer:D["a"],VDataTable:I["a"],VDivider:E["a"],VIcon:j["a"],VLayout:T["a"],VRow:L["a"],VSpacer:O["a"],VTab:P["a"],VTabItem:V["a"],VTabs:N["a"],VTreeview:q["a"]})},"620a":function(t,e,n){},9689:function(t,e,n){"use strict";n("620a")},a24c:function(t,e,n){"use strict";n.r(e);var a=function(){var t=this,e=t._self._c;return e("v-flex",{attrs:{xs12:""}},[t._v("\n    "+t._s(t.wrap)+"\n  "),e("div",{staticClass:"editor",style:t.wrap||""==t.wrap?"height:auto !important":"",domProps:{innerHTML:t._s(t.highlighted.html)}})])},s=[],i={name:"editor",props:["content","lang","theme","wrap"],data:()=>({highlighted:null,highlight:null}),methods:{},created(){this.highlight=window.ace.require("ace/ext/static_highlight");let t=window.ace.require("ace/mode/"+this.lang);console.log("created ",t),t=t?t.Mode:t;let e=window.ace.require("ace/theme/tomorrow");t?(e||window.console.error("Highlighter theme: "+this.theme+" not supported"),this.highlighted=this.highlight.renderSync(this.content,new t,e),window.ace.require("ace/lib/dom").importCssString(this.highlighted.css.replace("font-size: 12px;","").replace(".ace_static_highlight .ace_gutter-cell:before {",".ace_static_highlight .ace_gutter-cell:before { font-size: xx-small; padding-right: 0.5em; "),"ace_highlight"),this.$emit("mount")):window.console.error("Highlighter mode: "+this.lang+" not supported")},watch:{content:function(t){let e=window.ace.require("ace/mode/"+this.lang);console.log(e),e=e?e.Mode:e;let n=window.ace.require("ace/theme/tomorrow");if(!e)return void window.console.error("Highlighter mode: "+this.lang+" not supported");n||window.console.error("Highlighter theme: "+this.theme+" not supported");let a=t?JSON.parse(JSON.stringify(t)):"";this.highlighted=this.highlight.renderSync(a,new e,n),window.ace.require("ace/lib/dom").importCssString(this.highlighted.css.replace("font-size: 12px;","").replace(".ace_static_highlight .ace_gutter-cell:before {",".ace_static_highlight .ace_gutter-cell:before { font-size: xx-small; padding-right: 0.5em; "),"ace_highlight")}}},o=i,r=(n("16a0"),n("2877")),c=n("fef8"),l=n.n(c),d=n("0e8f"),p=Object(r["a"])(o,a,s,!1,null,"4067c51e",null);e["default"]=p.exports;l()(p,{VFlex:d["a"]})},a523:function(t,e,n){"use strict";n("20f6"),n("4b85");var a=n("e8f2"),s=n("d9f7");e["a"]=Object(a["a"])("container").extend({name:"v-container",functional:!0,props:{id:String,tag:{type:String,default:"div"},fluid:{type:Boolean,default:!1}},render(t,{props:e,data:n,children:a}){let i;const{attrs:o}=n;return o&&(n.attrs={},i=Object.keys(o).filter(t=>{if("slot"===t)return!1;const e=o[t];return t.startsWith("data-")?(n.attrs[t]=e,!1):e||"string"===typeof e})),e.id&&(n.domProps=n.domProps||{},n.domProps.id=e.id),t(e.tag,Object(s["a"])(n,{staticClass:"container",class:Array({"container--fluid":e.fluid}).concat(i||[])}),a)}})},c671:function(t,e,n){"use strict";var a=n("1e6c");e["a"]=a["a"].extend({name:"v-tab-item",props:{id:String},methods:{genWindowItem(){const t=a["a"].options.methods.genWindowItem.call(this);return t.data.domProps=t.data.domProps||{},t.data.domProps.id=this.id||this.value,t}}})},d87e:function(t,e,n){}}]);
//# sourceMappingURL=chunk-006adcfa.e4befff3.js.map