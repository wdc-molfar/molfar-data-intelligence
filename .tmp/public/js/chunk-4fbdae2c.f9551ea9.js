(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-4fbdae2c","chunk-c2702fe6"],{"36ae":function(t,e,n){"use strict";n("7d82")},"3c5a":function(t,e,n){"use strict";n.r(e);var i=function(){var t=this,e=t._self._c;return e("div",{staticClass:"echart",style:t.style})},s=[],a=n("313e"),o=n("4e14"),r={name:"echart",mixins:[o["a"]],computed:{style(){return{height:(this.height||250)+"px"}}},methods:{initChart(t){this.chart=a["init"](this.$el,null,{height:this.height,width:"auto"}),this.resizeHandler=()=>{this.width=this.$el.clientWidth,this.chart.resize()},window.attachEvent?window.attachEvent("onresize",this.resizeHandler):window.addEventListener("resize",this.resizeHandler),t&&setTimeout(()=>{this.chart.setOption(t),this.chart.on("click",t=>{this.$emit("chart-event",t)})},10),this.on({event:"slide-start",callback:()=>{setTimeout(()=>{this.chart&&this.options&&this.chart.setOption(this.options,!0),this.chart.resize()},10)},rule:()=>!0}),this.on({event:"update-dialog-view",callback:()=>{setTimeout(()=>{this.chart&&this.options&&this.chart.setOption(this.options,!0),this.chart.resize()},10)},rule:()=>!0})}},props:["options","height"],watch:{options:{handler:function(t){t&&this.chart&&setTimeout(()=>{this.chart.setOption(t,!0),this.chart.resize()},10)},deep:!0},height(t){setTimeout(()=>{this.chart.resize({height:t},10)})}},mounted(){this.initChart(this.options)},beforeDestroy(){window.attachEvent?window.detachEvent("onresize",this.resizeHandler):window.removeEventListener("resize",this.resizeHandler,!1),this.off()},data:()=>({chart:null,resizeHandler:null})},c=r,h=(n("36ae"),n("2877")),d=Object(h["a"])(c,i,s,!1,null,"7d96c1a5",null);e["default"]=d.exports},"52e0":function(t,e,n){"use strict";n.r(e);var i=function(){var t=this,e=t._self._c;return e("v-layout",{attrs:{column:""}},[this.message||!this.options?e("v-flex",{attrs:{xs12:""}},[e("h2",{staticClass:"warning--text font-weight-light headline"},[t._v(t._s(t.message))])]):e("v-flex",{staticStyle:{border:"1px solid #dedede",background:"#ffffff"},attrs:{xs12:""}},[t.options?e("echart",{attrs:{options:t.chartOptions,height:t.options.widget.height}}):t._e()],1)],1)},s=[],a=n("c555"),o=n("4e14"),r=n("3c5a"),c={methods:{getOntology(){return new Promise((t,e)=>{this.$dps.run({script:`\n\t\t\t\t\t<?javascript\n\n\t\t\t\t\t    //input params\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.concepts = "${this.config.metadata.concepts}";\n\t\t\t\t\t?>  \n\n\t\t\t\t\tdml.select(from:{{concepts}}, return:"value")\n\t\t\t\t\tset("indicators")\n\n\t\t\t\t\t<?javascript\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.tree = {name:"topic",children:[]}\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.indicators\n\t\t\t\t\t        .map( t => {\n\t\t\t\t\t            t.topic += ":"+t.name\n\t\t\t\t\t            return t\n\t\t\t\t\t        })\n\t\t\t\t\t        .forEach (t => {\n\t\t\t\t\t       \n\t\t\t\t\t        let path = t.topic.split(":").map(t=> t.trim())\n\t\t\t\t\t        let current = $scope.tree.children\n\t\t\t\t\t        path.forEach(( part, index ) => {\n\t\t\t\t\t            let f = _.find(current, t => t.name == part)\n\t\t\t\t\t            if(!f) {\n\t\t\t\t\t                current.push({\n\t\t\t\t\t                    name:part, \n\t\t\t\t\t                    children: [],\n\t\t\t\t\t                    type: (index == path.length-1) ? "indicator" : "topic"\n\t\t\t\t\t                })\n\t\t\t\t\t                current = current[current.length-1].children\n\t\t\t\t\t            } else {\n\t\t\t\t\t                current = f.children\n\t\t\t\t\t            }\n\t\t\t\t\t        })\n\t\t\t\t\t    })\n\t\t\t\t\t    \n\t\t\t\t\t    $scope.tree = ( $scope.tree.children.length == 1 ) ? $scope.tree.children[0] : $scope.tree;\n\t\t\t\t\t?>\n\n\t\t\t\t\treturn ("tree")\n\t\t\t\t\t`}).then(n=>{"error"==n.type?e(n.data):t(n.data)})})}}},h=function(){var t=this,e=t._self._c;return e("config-dialog",{attrs:{options:t.props,submit:t.submit}})},d=[],l=n("a410"),p={name:"DataExplorerConfig",components:{"config-dialog":l["a"]},props:["options","submit"],computed:{props(){return{icon:this.options.config.icon,title:`data-explorer-widget: ${this.options.config.id} ${this.options.config.name}`,config:this.options.config,editorTree:this.editorTree}}},data(){return{editorTree:[{name:"Configuration",children:[{name:"Widget",editor:()=>n.e("chunk-2d226cca").then(n.bind(null,"e9cc"))},{name:"Metadata",editor:()=>n.e("chunk-2d217174").then(n.bind(null,"c4f3"))},{name:"Data management",editor:()=>Promise.all([n.e("chunk-3faa419a"),n.e("chunk-7bec71d0")]).then(n.bind(null,"afef"))},{name:"Decoration",editor:()=>n.e("chunk-2d0b6a9f").then(n.bind(null,"1db8"))}]}]}}},u=p,f=n("2877"),g=Object(f["a"])(u,h,d,!1,null,null,null),m=g.exports,w={name:"ds-ontology-widget",icon:"mdi-triforce",mixins:[a["a"],o["a"],c],components:{echart:r["default"]},computed:{chartOptions(){return this.options?JSON.parse(JSON.stringify(this.options)):{}}},methods:{updateOptions({data:t,options:e}){if(!t)return;const n=JSON.parse(JSON.stringify(e));this.data=t,n.series[0].data=[t],this.options=n},onReconfigure(t){return this.$dialogManager.showAndWait(m,{width:"80%"},{config:t})},loadTree(){this.message="Loading...",this.getOntology().then(t=>{this.message=null,this.updateOptions({data:t,options:this.config.options})}).catch(()=>{this.message=`Dataset "${this.config.metadata.concepts}" not found`})}},props:["config"],mounted(){this.$emit("init")},watch:{"config.options.widget.height"(){this.$nextTick(()=>{this.updateOptions({data:this.data,options:this.config.options})})},"config.metadata.concepts"(t){t&&this.$nextTick(()=>{this.loadTree()})}},created(){this.config.metadata.concepts&&this.loadTree()},data:()=>({options:null,message:"No data available",selection:[],series:[],indicator_select:null,country_selection:[],year_select:null,indicators:null,countries:null,years:null,indicator_filter:""})},v=w,b=n("fef8"),$=n.n(b),x=n("0e8f"),O=n("a722"),y=Object(f["a"])(v,i,s,!1,null,null,null);e["default"]=y.exports;$()(y,{VFlex:x["a"],VLayout:O["a"]})},"7d82":function(t,e,n){}}]);
//# sourceMappingURL=chunk-4fbdae2c.f9551ea9.js.map