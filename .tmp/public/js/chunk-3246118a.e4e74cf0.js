(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3246118a","chunk-c2702fe6"],{1990:function(t,e,n){"use strict";n.r(e);var i=function(){var t=this,e=t._self._c;return e("div",[t.isProductionMode?t._e():e("v-container",[e("v-layout",{attrs:{"align-center":"","justify-center":"",row:"","fill-height":""}},[e("v-flex",{attrs:{xs12:"","pa-3":"","justify-center":""}},[e("v-combobox",{attrs:{items:t.formList,label:"Select form"},on:{change:t.onChangeForm},scopedSlots:t._u([{key:"item",fn:function(n){return[e("span",{staticClass:"caption",staticStyle:{"padding-left":"1em"}},[t._v("\n              "+t._s(n.item.id)+":\n              "+t._s(n.item.metadata.app_name?n.item.metadata.app_name.value:"")+":\n              "+t._s(n.item.metadata.form_title?n.item.metadata.form_title.value:"")+"\n            ")])]}},{key:"selection",fn:function(n){return[e("span",{staticClass:"caption",staticStyle:{"padding-left":"1em"}},[t._v("\n              "+t._s(n.item.id)+":\n              "+t._s(n.item.metadata.app_name?n.item.metadata.app_name.value:"")+":\n              "+t._s(n.item.metadata.form_title?n.item.metadata.form_title.value:"")+"\n            ")])]}}],null,!1,2135581308),model:{value:t.config.form,callback:function(e){t.$set(t.config,"form",e)},expression:"config.form"}})],1)],1),e("v-divider")],1),e("v-container",[e("v-divider"),t.formConfig?e("div",[e("div",{staticClass:"font-weight-bold primary white--text caption ma-0 pa-2"},[e("p",{staticClass:"font-weight-bold mx-0 px-2",staticStyle:{"text-align":"right",margin:"0 0 2px 0"}},[t._v("\n          JACE FORMS REPORT\n        ")]),e("p",{staticClass:"font-weight-light mx-0 px-2",staticStyle:{"text-align":"left",margin:"0 0 2px 0"}},[e("b",[t._v(t._s(t.translate("Last_update")))]),t._v(" "+t._s(t.moment(new Date(t.formConfig.updatedAt)).format("YYYY-MM-DD"))+"\n        ")]),e("p",{staticClass:"font-weight-light mx-0 px-2",staticStyle:{"text-align":"left",margin:"0 0 2px 0"}},[e("b",[t._v(t._s(t.translate("Application")))]),e("a",{staticClass:"white--text",attrs:{href:t.formConfig.metadata.app_url.value,target:"_blank"}},[t._v(t._s(t.formConfig.metadata.app_name.value))])]),e("p",{staticClass:"font-weight-light mx-0 px-2",staticStyle:{"text-align":"left",margin:"0 0 2px 0"}},[e("b",[t._v(t._s(t.translate("Access_for")))]),t._v("\n           "+t._s(t.translate(t.accessMode.text))+"\n           "+t._s(t.formConfig.config.access.enabled?t.translate("Opened"):t.translate("Closed"))+"\n           "+t._s(t.formConfig.config.access.lastNotificatedAt?t.moment(new Date(t.formConfig.config.access.lastNotificatedAt)).fromNow():"")+"\n        ")]),t.formStat?e("p",{staticClass:"font-weight-light mx-0 px-2",staticStyle:{"text-align":"left",margin:"0 0 2px 0"}},[e("b",[t._v(t._s(t.translate("Respondent_activity")))]),t._v("\n           "+t._s(t.translate("Total"))+"\n           "+t._s(t.formStat.events.total)+"\n           "+t._s(t.translate("Responses"))+"\n           ( "+t._s(t.moment(new Date(t.formStat.events.range.min)).format("YYYY-MM-DD HH:mm"))+" -\n           "+t._s(t.moment(new Date(t.formStat.events.range.max)).format("YYYY-MM-DD HH:mm"))+" )\n        ")]):t._e()])]):t._e(),t.formStat?e("div",[e("echart",{attrs:{options:t.chartOptions,height:"250"}}),e("v-divider")],1):t._e(),t.formConfig?e("div",t._l(t.formConfig.config.questions,(function(n,i){return e("div",{key:i,staticClass:"mt-3"},[e("h2",{staticClass:"headline font-weight-light primary--text"},[t._v("\n          "+t._s(i+1)+". "+t._s(n.options.title)+" "),n.options.required?e("span",{staticClass:"caption warning--text"},[t._v("("+t._s(t.translate("Required"))+")")]):t._e()]),e("p",{staticClass:"caption secondary--text font-weight-light pl-3 ma-0"},[t._v("\n          "+t._s(n.options.note)+"\n        ")]),e("p",{staticClass:"caption primary--text pl-2 ma-0"},[t._v("\n          "+t._s(t.translate("Response_type"))+" "+t._s(t.translate(n.options.type))+"\n        ")]),"One of many selection"==n.options.type||"Many of many selection"==n.options.type?e("p",{staticClass:"caption secondary--text weight-light pl-3 ma-0"},["Many of many selection"==n.options.type?e("span",{staticClass:"font-weight-light"},[t._v("\n            "+t._s(t.translate("Respondent_shuld_select_between"))+" "+t._s(n.options.rule.min)+" "+t._s(t.translate("And"))+" "+t._s(n.options.rule.max)+" "+t._s(t.translate("Variants"))+". ")]):t._e(),n.options.addEnabled?e("span",{staticClass:"font-weight-light"},[t._v(t._s(t.translate("Respondent_can_add_max"))+" "+t._s(n.options.maxCustomResponses)+" "+t._s(t.translate("Self_variants"))+". ")]):t._e(),n.options.userCollaboration?e("span",{staticClass:"font-weight-light"},[t._v(t._s(t.translate("Respondents_collaboration_detected"))+".")]):t._e()]):t._e(),"Range"==n.options.type?e("p",{staticClass:"body-1 secondary--text font-weight-light pl-3 ma-0"},[t._v("\n          "+t._s(t.translate("Range_between"))+" "+t._s(n.options.range[0])+" "+t._s(t.translate("And"))+" "+t._s(n.options.range[1])+" "+t._s(t.translate("By_step"))+" "+t._s(n.options.step)+"\n        ")]):t._e(),n.options.nominals?e("p",{staticClass:"caption secondary--text pl-3 pt-2 ma-0"},[e("b",[t._v(t._s(t.translate("Nominals")))]),e("ul",t._l(n.options.nominals,(function(n,i){return e("li",{key:i},[t._v("\n              "+t._s(n.title)+"\n            ")])})),0)]):t._e(),n.options.entities?e("p",{staticClass:"caption secondary--text weight-light pl-3 ma-0 pt-2"},[e("b",[t._v(t._s(t.translate("Entities")))]),e("ul",t._l(n.options.entities,(function(n,i){return e("li",{key:i},[t._v("\n              "+t._s(n.title)+"\n            ")])})),0)]):t._e(),n.options.factors?e("p",{staticClass:"caption secondary--text weight-light pl-3 ma-0 pt-2"},[e("b",[t._v(t._s(t.translate("Factors")))]),e("ul",t._l(n.options.factors,(function(n,i){return e("li",{key:i},[t._v("\n              "+t._s(n.title)+"\n            ")])})),0)]):t._e(),n.options.effects?e("p",{staticClass:"caption secondary--text weight-light pl-3 ma-0 pt-2"},[e("b",[t._v(t._s(t.translate("Effects")))]),e("ul",t._l(n.options.effects,(function(n,i){return e("li",{key:i},[t._v("\n              "+t._s(n.title)+"\n            ")])})),0)]):t._e(),n.options.scale?e("p",{staticClass:"caption secondary--text weight-light pl-3 ma-0 pt-2"},[e("b",[t._v(t._s(t.translate("Scale")))]),e("ul",t._l(n.options.scale,(function(n,i){return e("li",{key:i},[t._v("\n              "+t._s(n.value)+" ( "+t._s(n.title)+" )\n            ")])})),0)]):t._e(),t.formStat?e("div",[e("div",{staticClass:"caption secondary--text pl-3 pt-2 ma-0"},[e("b",[t._v(t._s(t.translate("Statistic")))])]),"Influence"==n.options.type?e("v-card",{staticClass:"mt-3",attrs:{flat:"",color:"transparent"}},[e("v-layout",{attrs:{"fill-height":"",row:""}},[e("v-flex",{staticClass:"text-xs-center headline",staticStyle:{"border-left":"1px solid #dedede","border-bottom":"1px solid #dcdcdc","border-top":"1px solid #dcdcdc"},attrs:{xs2:"","pa-2":""}}),t._l(n.options.effects,(function(i,s){return e("v-flex",{key:s,class:t.cellClass(n)+" text-xs-center",style:`\n                    min-height:3em; \n                    border-left:1px solid #dedede; \n                    border-bottom:1px solid #dcdcdc;  \n                    border-top:1px solid #dcdcdc;\n                    ${s==n.options.effects.length-1?"border-right: 1px solid #dcdcdc !important;":""}\n                  `},[e("span",{staticClass:"caption"},[t._v(t._s(i.title))])])}))],2),t._l(n.options.factors,(function(i,s){return e("v-layout",{key:s,attrs:{"fill-height":"",row:""}},[e("v-flex",{staticClass:"caption",staticStyle:{"border-left":"1px solid #dcdcdc","border-bottom":"1px solid #dcdcdc"},attrs:{xs2:"","pa-2":"","align-center":""}},[t._v("\n                "+t._s(i.title)+"\n              ")]),t._l(n.options.effects,(function(s,a){return e("v-flex",{key:a,class:t.cellClass(n)+" text-xs-center",style:`\n                  min-height:3em; \n                  border-left: 1px solid #dcdcdc;\n                  border-bottom:1px solid #dcdcdc; \n                  ${a<n.options.effects.length-1?"":"border-right: 1px solid #dcdcdc !important;"}\n                `,attrs:{"align-center":""}},[e("v-layout",{staticStyle:{height:"100%"},attrs:{"align-center":""}},[e("v-flex",{staticClass:"text-xs-center body-2"},[t.getChart(n,i,s)?e("echart",{attrs:{options:t.getChart(n,i,s),height:"150"}}):t._e()],1)],1)],1)}))],2)}))],2):t._e(),"Association"==n.options.type?e("v-card",{staticClass:"mt-3",attrs:{flat:"",color:"transparent"}},[e("v-layout",{attrs:{"fill-height":"",row:""}},[e("v-flex",{staticClass:"text-xs-center headline",staticStyle:{"border-left":"1px solid #dedede","border-bottom":"1px solid #dcdcdc","border-top":"1px solid #dcdcdc"},attrs:{xs2:"","pa-2":""}}),t._l(n.options.entities,(function(i,s){return e("v-flex",{key:s,class:t.cellClass(n)+" text-xs-center",style:`\n                    min-height:3em; \n                    border-left:1px solid #dedede; \n                    border-bottom:1px solid #dcdcdc;  \n                    border-top:1px solid #dcdcdc;\n                    ${s==n.options.entities.length-1?"border-right: 1px solid #dcdcdc !important;":""}\n                  `},[e("span",{staticClass:"caption"},[t._v(t._s(i.title))])])}))],2),t._l(n.options.entities,(function(i,s){return e("v-layout",{key:s,attrs:{"fill-height":"",row:""}},[e("v-flex",{staticClass:"caption",staticStyle:{"border-left":"1px solid #dcdcdc","border-bottom":"1px solid #dcdcdc"},attrs:{xs2:"","pa-2":"","align-center":""}},[t._v("\n                "+t._s(i.title)+"\n              ")]),t._l(n.options.entities,(function(a,o){return e("v-flex",{key:o,class:t.cellClass(n)+" text-xs-center",style:`\n                  min-height:3em; \n                  border-left: 1px solid #dcdcdc;\n                  border-bottom:1px solid #dcdcdc; \n                  ${o<n.options.entities.length-1?"":"border-right: 1px solid #dcdcdc !important;"}\n                `,attrs:{"align-center":""}},[o>s?e("v-layout",{staticStyle:{height:"100%"},attrs:{"align-center":""}},[e("v-flex",{staticClass:"text-xs-center body-2"},[t.getChart(n,i,a)?e("echart",{attrs:{options:t.getChart(n,i,a),height:"150"}}):t._e()],1)],1):e("v-layout",{staticStyle:{height:"100%"}})],1)}))],2)}))],2):t._e(),"Association"!=n.options.type&&"Influence"!=n.options.type?e("echart",{attrs:{options:n.chartOptions,height:"250"}}):t._e()],1):t._e()])})),0):t._e()],1)],1)},s=[],a=n("c555"),o=n("4e14"),r=n("852a"),l=n("2ef0"),d=n("c1df"),c=n.n(d);let p={createForm:'\n            // createForm \n            client();\n            set("owner")\n            <?javascript\n                $scope.form = {\n                    metadata: $scope.form.metadata,\n                    config: $scope.form.config,\n                    owner:$scope.owner.client.user,\n                    history:[\n                        {\n                            state:"created",\n                            message:"Create form via "+$scope.owner.client.app,\n                            user: $scope.owner.client.user,\n                            date: new Date()\n                        }\n                    ]\n                }\n            ?>\n            dml.insert(into:"form", values:{{form}})\n        ',cloneForm:'\n            // cloneForm \n            client();\n            set("owner")\n            <?javascript\n                $scope.form.owner = $scope.owner.client.user;\n                $scope.form.history.push({\n                            state:"created",\n                            message:"Clone form via "+$scope.owner.client.app,\n                            user: $scope.owner.client.user,\n                            date: new Date()\n                })\n            ?>\n            dml.insert(into:"form", values:{{form}})\n        ',updateForm:'\n        // updateForm\n            client();\n            set("owner")\n\n            <?javascript\n\n                $scope.updatedForm = (item) => item.id == $scope.form.id;\n                $scope.update = (item) => {\n                    \n                    // $scope.form.history.push({\n                    //     date: new Date(),\n                    //     message:"Update form",\n                    //     state:"updated",\n                    //     user: $scope.owner.client.user\n                    // });\n                    \n                    return $scope.form;\n                };\n\n            ?>\n\n            dml.update(for:"form", as:{{update}}, where:{{updatedForm}})\n        ',extendForm:"\n        // extendForm\n            <?javascript\n    \n                $scope.updatedForm = (item) => item.id == $scope.form.id;\n                \n                $scope.extendNominals = (form) => {\n                  \n                  if (!form.config.questions) return form\n\n                  form.config.questions.forEach( q => {\n                    let fromForm = _.find($scope.form.config.questions, ff => ff.id == q.id)\n                    if(fromForm && fromForm.options.nominals){\n                      q.options.nominals = (q.options.nominals || []).concat(fromForm.options.nominals)\n                      q.options.nominals = _.unique(q.options.nominals,'id')  \n                    }\n                  })\n                  \n                  return form\n                }\n    \n            ?>\n\n\n            dml.update(for:\"form\", as:{{extendNominals}}, where:{{updatedForm}})\n\n\n            \n        ",getForm:'\n            // getForm\n            <?javascript\n                $scope.filter = (item) => item.id == $scope.form;\n            ?>\n\n            dml.select(from:"form", where:{{filter}}, populate:"project")\n        ',deleteForm:'\n            // deleteForm\n            <?javascript\n                $scope.filter = (item) => item.id == $scope.form;\n            ?>\n\n            dml.delete(from:"form", where:{{filter}})\n    ',exportForm:'\n      get("form")\n      export("formExport.json")\n  ',updateAnswer:'\n            // updateAnswer\n            dml.insertOrUpdate(into:"answer", value:{{answer}})\n    ',getAnswer:'\n      // getAnswer\n      \n      <?javascript\n\n        $scope.forUser = item => {\n        \n            if(!$scope.form) return false;\n                     \n            if($scope.user.apikey){\n                return (item.form == $scope.form) && (item.user.apikey == $scope.user.apikey);\n            }\n            \n            if($scope.user.id){\n                return (item.form == $scope.form) && (item.user.id == $scope.user.id);\n            }\n            \n            return false;\n        }    \n              \n        $scope.byDate = _util.comparator.Date["Z-A"](item => item.updatedAt)\n\n      ?>\n\n      dml.select(from:"answer",where:{{forUser}})\n      c.order(by:"updatedAt")\n      set("res")\n      return("res[0]")\n\n    ',loadResponseStat:'\n        <?javascript\n          $scope.f = item => item.form == $scope.form;\n          $scope.map = (item,index) => {return {date:item.updatedAt,v:1}};\n          $scope.sort = _util.comparator.Date["A-Z"](item => item.date);\n        ?>\n\n        dml.select(from:"answer", where:{{f}}, as:{{map}})\n        // json()\n        c.order(by:"date")\n    ',exportResponses:'\n\n<?javascript\n    // $scope.form = "5c38b9a9327cb41c1df5d8ea"\n    $scope.forForm = item => $scope.form && (item.form == $scope.form);\n    $scope.filter = (item) => item.id == $scope.form;\n    $scope.byDate = _util.comparator.Date["A-Z"](item => item.updatedAt);\n?>\n\ndml.select(from:"answer",where:{{forForm}})\nc.order(by:"updatedAt")\nset("responses")\n\ndml.select(from:"form", where:{{filter}})\nset("form")\n\n<?javascript\n    $scope.form = $scope.form[0]\n    \n    \n    $scope.responses = $scope.responses.map( (r, index) => ({\n        response_id: r.id\n        ,form: r.form\n        ,access: r.updatedAt\n        ,respondent_id: (r.user.id) ? r.user.id : null\n        ,respondent_apikey: (r.user.apikey) ? r.user.apikey : null\n        ,respondent_index: (!r.user.id && !r.user.apikey) ? index : null\n        ,data: r.data\n    }));\n    \n    \n    \n    let rawData = []\n    $scope.responses.forEach( r => {\n        if(r.data)\n            r.data.forEach( q => {\n                let q_desc = _.find($scope.form.config.questions, qd => qd.id == q.id)\n                rawData.push({\n                     response_id: r.response_id\n                    ,response_valid: r.response_valid\n                    ,form: r.form\n                    ,access: r.access\n                    ,respondent_id: r.respondent_id\n                    ,respondent_apikey: r.respondent_apikey\n                    ,respondent_index: r.respondent_index\n                    ,question_id: q.id\n                    ,question_type: q.type\n                    ,question_required: (q_desc) ? q_desc.options.required : null\n                    ,response_valid: q.valid\n                    ,question_title: (q_desc) ? q_desc.options.title : null\n                    ,question_note: (q_desc) ? q_desc.options.note : null\n                    ,data: q.data\n                })          \n            })\n    })\n    \n    rawData = rawData.filter( \n        r => _.find($scope.form.config.questions, qd => r.question_id == qd.id)\n    );\n    \n    let rawData1 = []\n    \n    rawData.forEach( r => {\n        r.data.forEach( d => {\n            \n            let conf = _.find($scope.form.config.questions, q => q.id == r.question_id)\n            \n            let nominal = null;\n            let entity_1 = null;\n            let entity_2 = null;\n            let factor = null;\n            let effect = null;\n            let value = null;\n            let min = null;\n            let max = null;\n            let nominal_title = null;\n            let entity_1_title = null;\n            let entity_2_title = null;\n            let factor_title = null;\n            let effect_title = null;\n            let value_title = null;\n            let v;\n            \n            switch (r.question_type) {\n              \n                case \'One of many selection\' : \n                case \'Many of many selection\' : \n                    let n = _.find(conf.options.nominals, n => n.id == d)\n                \n                    nominal = d;\n                    nominal_title = n.title\n                    value = true;\n                    break\n              \n                case \'Association\' : \n                    let e1 = _.find(conf.options.entities, n => n.id == d.e1)\n                    let e2 = _.find(conf.options.entities, n => n.id == d.e2)\n                    v = conf.options.scale[d.value-1]\n                    entity_1 = d.e1;\n                    entity_1_title = e1.title\n                    entity_2 = d.e2;\n                    entity_2_title = e2.title\n                    value = d.value;\n                    value_title = (v) ? (v.title) ? v.title : null : null\n                    break\n                    \n                case \'Influence\' : \n                    let f = _.find(conf.options.factors, n => n.id == d.e1)\n                    let e = _.find(conf.options.effects, n => n.id == d.e2)\n                    v = conf.options.scale[d.value-1]\n                    \n                    factor = d.e1;\n                    factor_title = f.title\n                    effect = d.e2;\n                    effect_title = e.title\n                    value = d.value;\n                    value_title = (v) ? (v.title) ? v.title : null : null\n                    break\n                    \n                case \'Range\':\n                    min = d[0];\n                    max = d[1];\n                    value = true;\n                    break\n                    \n                case \'Date\':\n                    value = d\n                    break    \n                \n                case \'Rate\':\n                    v = conf.options.scale[d-1]\n                    value = d\n                    value_title = v.title\n                    break\n            }\n            \n            \n            rawData1.push({\n                 response_id: r.response_id\n                ,response_valid: r.response_valid\n                ,form: r.form\n                ,access: r.access\n                ,respondent_id: r.respondent_id\n                ,respondent_apikey: r.respondent_apikey\n                ,respondent_index: r.respondent_index\n                ,question_id: r.question_id\n                ,question_type: r.question_type\n                ,question_required: r.question_required\n                ,question_valid: r.question_valid\n                ,question_title: r.question_title\n                ,question_note: r.question_note\n                ,nominal \n                ,nominal_title\n                ,entity_1\n                ,entity_1_title\n                ,entity_2\n                ,entity_2_title\n                ,factor\n                ,factor_title\n                ,effect\n                ,effect_title\n                ,min\n                ,max\n                ,value\n                ,value_title\n                \n            })\n        })\n    })\n    \n    $scope.rawData = rawData1.filter(r => r.value != null)\n    $scope.filename = $scope.form.id + "_" + _util.format.date(new Date(),"YYYY_MM_DD_HH_mm") + "_responses.csv";\n    \n?>\nget("rawData")\nexport({{filename}})\n\n\n\n    ',loadAllResponses:'\n      // loadAllResponses    \n        <?javascript\n            $scope.forForm = (item) => item.form == $scope.form_id;\n            $scope.isForm = (item) => item.id == $scope.form_id;\n\n            // $scope.filename = $scope.form_id+"_"+_util.format.date(new Date(),"YYYY_MM_DD_HH_mm")+"_responses.csv";\n        ?>\n\n        dml.select(from:"answer", where:{{forForm}})\n        set("answers")\n        dml.select(from:"form", where:{{isForm}})\n        set("form")\n\n        <?javascript\n\n        let questions = $scope.form[0].config.questions;\n\n        let answers = $scope.answers.map ((a) => {\n          a.data = _.pairs(a.data).map(d => {\n            d[1].title = questions[d[0]].options.title;\n            \n            d[1].id = d[0];\n            \n            if (!d[1].value) {\n              return d[1]\n            }\n            \n            if( ["influences"].indexOf(d[1].type) >=0 ){\n              d[1].value = d[1].value.map(v => {\n                return {\n                  entity_id: v.entity,\n                  entity_title: questions[d[0]].options.entities[v.entity].title,\n                  property_id: v.property,\n                  property_title: questions[d[0]].options.properties[v.property].title,\n                  value:v.value\n                }\n              }) \n            }\n\n            if( ["pairs","radiopairs"].indexOf(d[1].type) >=0 ){\n              d[1].value = d[1].value.map(v => {\n                return {\n                  entity_id: v.entity,\n                  entity_title: questions[d[0]].options.entities[v.entity].title,\n                  property_id: v.property,\n                  property_title: questions[d[0]].options.properties[v.property].title,\n                  value:1\n                }\n              }) \n            }\n\n            if( ["radio","check","dropdown"].indexOf(d[1].type) >= 0 ){\n              d[1].value = d[1].value.map(v => {\n                return {\n                  entity_id: v,\n                  entity_title: questions[d[0]].options.nominals[v].title,\n                  property_id: "",\n                  property_title:"",\n                  value:1\n                }\n              }) \n            }\n            \n            if( ["scales"].indexOf(d[1].type) >= 0 ){\n              d[1].value = d[1].value.map(v => {\n                return {\n                  entity_id: v.entity,\n                  entity_title: questions[d[0]].options.entities[v.entity].title,\n                  property_id: "",\n                  property_title:"",\n                  value:v.value\n                }\n              }) \n            }\n            \n            \n            if( ["text","rate","range","datetime","scale"].indexOf(d[1].type) >= 0 ){\n              d[1].value = d[1].value.map(v => {\n                return {\n                  entity_id: "",\n                  entity_title: "",\n                  property_id: "",\n                  property_title:"",\n                  value:(d[1].type=="datetime")? _util.format.date(new Date(v), "DD/MM/YY HH:mm") : v\n                }\n              }) \n            }\n            \n            return d[1];\n          })\n          return a;\n        });\n\n\n\n\n\n        let responses = [];\n\n        answers = answers.forEach( a => {\n            a.data.forEach( d => {\n              if(d.value){\n                d.value.forEach( v => {\n                    responses.push({\n                      response_id:a.id,\n                      updatedAt: _util.format.date(a.updatedAt, "DD/MM/YY HH:mm"),\n                      form:a.form,\n                      respondent:(a.user.email)? a.user.email : "",\n                      question_id: d.id,\n                      question_title: d.title,\n                      question_type: d.type,\n                      valid:(d.valid)? 1 : 0,\n                      entity_id: v.entity_id,\n                      entity_title:v.entity_title,\n                      property_id:v.property_id,\n                      property_title:v.property_title,\n                      value:v.value     \n                    })\n                  })    \n              } \n            })\n        });\n\n        $scope.responses = responses;\n\n        ?>\n\n        get("responses")\n\n    ',findUserProfile:'\n      // <?javascript\n      //     $scope.email = "annakukharuk@gmail.com";\n      //     $scope.email = "ishchenko.kpi@gmail.com";\n      // ?>\n\n      profile.find({{email}})\n    ',getStat:'\n\n// getStat\n\n<?javascript\n    // $scope.form = "5c24becd327cb41c1df5d85f"\n    $scope.forForm = item => $scope.form && (item.form == $scope.form);\n    $scope.filter = (item) => item.id == $scope.form;\n    $scope.byDate = _util.comparator.Date["A-Z"](item => item.updatedAt);\n    $scope.stat = {};\n?>\n\ndml.select(from:"answer",where:{{forForm}})\nc.order(by:"updatedAt")\nset("responses")\ndml.select(from:"form", where:{{filter}})\nset("form")\n\n<?javascript\n    \n    $scope.stat.events = {\n        total: $scope.responses.length,\n        range: {\n          min: $scope.responses[0].updatedAt,\n          max: $scope.responses[$scope.responses.length-1].updatedAt\n        },\n        timeline: $scope.responses.map( r => ({\n                        user: r.user,\n                        date: r.updatedAt\n                    }))\n    }; \n\n?>\n\n<?javascript\n\n    let questions = $scope.form[0].config.questions;\n\n    $scope.stat.questions = questions.map( q => ({\n        id: q.id,\n        responses: $scope.responses.map( r => {\n            let f = _.find(r.data, a => a.id == q.id) \n            return (f) ? (f.data) ? f.data : null : null\n        })\n    }))\n\n\n?>\n\nreturn("stat")\n\n    ',getFormList:'\n  <?javascript\n    $scope.filter = item => true;\n    $scope.mapper = item => ({id: item.id, metadata: item.metadata})\n  ?>\n\n  dml.select(from:"form", where:{{filter}}, map:{{mapper}})\n'};var m={methods:{loadFormList(){return this.$dps.run({script:p.getFormList,state:{}}).then(t=>t.data)},createForm(t){return this.$dps.run({script:p.createForm,state:{form:t}}).then(t=>t.data[0])},cloneForm(t){let e=Object.assign({},t);return e.config.cloned=t.id,e.metadata.app_url.value=location.href,delete e.id,delete e.updatedAt,delete e.createdAt,this.$dps.run({script:p.cloneForm,state:{form:e}})},loadForm(t){return this.$dps.run({script:p.getForm,state:{form:t}}).then(t=>t.data[0])},updateForm(t){return this.$dps.run({script:p.updateForm,state:{form:t}}).then(t=>t.data[0])},extendForm(t){return this.$dps.run({script:p.extendForm,state:{form:t}})},deleteForm(t){return this.$dps.run({script:p.deleteForm,state:{form:t}})},exportForm(){let t=this.$djvue.selectWidgets(this.$root,t=>t.config&&"question-widget"==t.config.type).map(t=>{let e=JSON.parse(JSON.stringify(t.config));return e.question.options=JSON.parse(JSON.stringify(t.$refs.instance.options)),e}),e=document.createElement("a");e.setAttribute("href","data:text/plain;charset=utf-u,"+encodeURIComponent(JSON.stringify(t,null,"\t"))),e.setAttribute("download","form_config.json"),e.click()},findUserProfile(t){return this.$dps.run({script:p.findUserProfile,state:{email:t}}).then(t=>t.data)},loadAnswer(t,e){return this.$dps.run({script:p.getAnswer,state:{user:t,form:e}}).then(n=>n.data?n.data[0]:{form:e,user:t,data:[]})},updateAnswer(t){return this.$dps.run({script:p.updateAnswer,state:{answer:t}})},exportResponses(t){return this.$dps.run({script:p.exportResponses,state:{form:t}}).then(t=>this.app.config.dpsURL+t.data.url)},sendMails(t,e){let n={},i="";return l["templateSettings"].interpolate=/{{([\s\S]+?)}}/g,t.forEach((t,s)=>{i+=`sendmail({{o${s}}});\n            `,n["o"+s]={to:t.email,subject:"DJVUE Forms Service notiification",html:Object(l["template"])(e)(t.context)}}),l["templateSettings"].interpolate=/<%=([\s\S]+?)%>/g,this.$dps.run({script:i,state:n})},getStat(t){return new Promise((e,n)=>{this.$dps.run({script:p.getStat,state:{form:t}}).then(t=>{"error"==t.type?n():e(t.data)})})},round(t,e,n,i){let s="YYYY-MM-DD HH:mm",a=c()(e).startOf(n).format(s),o=c()(a).add(i,n).format(s);while(!c()(t).isSameOrAfter(a)||!c()(t).isSameOrBefore(o))a=o,o=c()(a).add(i,n).format(s);let r=c()(t).diff(a),l=-c()(t).diff(o);return r<l?a:o},getResponseDynamic(t){let e=t.events.timeline,n="YYYY-MM-DD HH:mm",i=e.map(t=>c()(new Date(t.date))).sort((t,e)=>t.diff(e)).map(t=>t.format(n));i.push(c()(new Date).format(n));let s,a=[["m",1],["m",5],["m",10],["m",15],["m",20],["m",30],["h",1],["h",2],["h",4],["h",12],["d",1],["d",3],["d",7],["M",1],["M",3],["M",6],["y",1],["y",2],["y",5],["y",10]],o=(t,e,i,s)=>{let a=[];t=c()(t).add(-s,i).format(n),e=c()(new Date).format(n);let o=c()(t).startOf(i).format(n),r=c()(o).add(s,i).format(n);a.push(o);while(!c()(e).isSameOrAfter(o)||!c()(e).isSameOrBefore(r))o=r,r=c()(o).add(s,i).format(n),a.push(o);return a.push(r),a},r={m:["HH:mm",""],h:["DD.MM HH:","00"],d:["DD.MM",""],M:["MM.YY",""],y:["YYYY",""]};for(s of a)if(c()(i[i.length-1]).diff(i[0],s[0])/s[1]<=24)break;if(this.u=s,c()(i[i.length-1]).diff(i[0],s[0])<1)return;i.splice(i.length-1,1),i=i.map(t=>this.round(t,i[0],s[0],s[1]));let l=o(i[0],i[i.length-1],s[0],s[1]),d=l.map(t=>i.filter(e=>c()(e).isSame(t,s[0])).length),p=d.reduce((t,e)=>e+t);d=0==p?d.map(()=>0):d.map(t=>t);let m=d.reduce((t,e)=>e>t?e:t);return i=l.map((t,e)=>({title:c()(t).format(r[s[0]][0])+r[s[0]][1],value:d[e],height:m>0?d[e]/m:0})),this.points=l,i}}};let f=(t,e,n,i)=>{let s="YYYY-MM-DD HH:mm",a=c()(e).startOf(n).format(s),o=c()(a).add(i,n).format(s);while(!c()(t).isSameOrAfter(a)||!c()(t).isSameOrBefore(o))a=o,o=c()(a).add(i,n).format(s);let r=c()(t).diff(a),l=-c()(t).diff(o);return r<l?a:o},u=t=>{let e="YYYY-MM-DD HH:mm",n=t.map(t=>c()(new Date(t))).sort((t,e)=>t.diff(e)).map(t=>t.format(e));n.push(c()(new Date).format(e));let i,s=[["m",1],["m",5],["m",10],["m",15],["m",20],["m",30],["h",1],["h",2],["h",4],["h",12],["d",1],["d",3],["d",7],["M",1],["M",3],["M",6],["y",1],["y",2],["y",5],["y",10]],a=(t,n,i,s)=>{let a=[];t=c()(t).add(-s,i).format(e),n=c()(n).add(s,i).format(e);let o=c()(t).startOf(i).format(e),r=c()(o).add(s,i).format(e);a.push(o);while(!c()(n).isSameOrAfter(o)||!c()(n).isSameOrBefore(r))o=r,r=c()(o).add(s,i).format(e),a.push(o);return a.push(r),a},o={m:["HH:mm",""],h:["DD.MM HH:","00"],d:["DD.MM.YY",""],M:["MM.YYYY",""],y:["YYYY",""]};for(i of s)if(c()(n[n.length-1]).diff(n[0],i[0])/i[1]<=24)break;if(c()(n[n.length-1]).diff(n[0],i[0])<1)return;n.splice(n.length-1,1),n=n.map(t=>f(t,n[0],i[0],i[1]));let r=a(n[0],n[n.length-1],i[0],i[1]),l=r.map(t=>n.filter(e=>c()(e).isSame(t,i[0])).length);return n=r.map((t,e)=>({title:c()(t).format(o[i[0]][0])+o[i[0]][1],value:l[e]})),n};var h={methods:{oneOfManyStat(t,e){if(!t.options.nominals)return{};let n=e.responses.filter(e=>e&&Object(l["find"])(t.options.nominals,t=>t.id==e[0])),i=t.options.nominals.map(t=>{let e=Object(l["countBy"])(n,t=>t[0])[t.id];return{id:t.id,title:t.title,value:(e||0)/(0==n.length?1:n.length)}}),s={color:[this.$vuetify.theme.themes.light.primary],grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"value",min:0,max:1},yAxis:{type:"category",data:[]},series:[{name:"",type:"bar",data:[],itemStyle:{opacity:.5}}]};return s.yAxis.data=i.map(t=>this.truncate(t.title)).reverse(),s.series[0].data=i.map(t=>t.value).reverse(),s},manyOfManyStat(t,e){if(!t.options.nominals)return{};let n=e.responses.filter(t=>t),i=[];n.forEach(t=>{i=i.concat(t)});let s=t.options.nominals.map(t=>{let e=Object(l["countBy"])(i)[t.id];return{id:t.id,title:t.title,value:(e||0)/(0==i.length?1:i.length)}}),a={color:[this.$vuetify.theme.themes.light.primary],grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"value",min:0,max:1},yAxis:{type:"category",data:[]},series:[{name:"",type:"bar",data:[],itemStyle:{opacity:.5}}]};return a.yAxis.data=s.map(t=>this.truncate(t.title)).reverse(),a.series[0].data=s.map(t=>t.value).reverse(),a},rateStat(t,e){let n=e.responses.filter(t=>t),i=[];n.forEach(t=>{i=i.concat(t)});let s=t.options.scale.map(t=>{let e=Object(l["countBy"])(i)[t.value];return{title:`${t.value} ${t.title?" ("+t.title+")":""}`,value:(e||0)/(0==i.length?1:i.length)}}),a={color:[this.$vuetify.theme.themes.light.primary],grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"value",min:0,max:1},yAxis:{type:"category",data:[]},series:[{name:"",type:"bar",data:[],itemStyle:{opacity:.5}}]};return a.yAxis.data=s.map(t=>this.truncate(t.title)).reverse(),a.series[0].data=s.map(t=>t.value).reverse(),a},rangeStat(t,e){let n=e.responses.filter(t=>t),i=[];n.forEach(t=>{i=i.concat(t)});let s=i.map(t=>t[0]),a=i.map(t=>t[1]),o=Object(l["union"])(Object(l["uniq"])(s),Object(l["uniq"])(a)).sort((t,e)=>t-e).map(t=>({title:t})),r=o.map(t=>{let e=Object(l["countBy"])(s)[t.title],n=Object(l["countBy"])(a)[t.title];return{title:t.title,left:e||0,right:n||0}});if(0==r.length)return{};let d={legend:{data:["Left boundary","Right boundary"]},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"value"},yAxis:{type:"value"},series:[]};return d.series.push({name:"Left boundary",type:"line",step:"middle",areaStyle:{opacity:.25},data:r.map(t=>[t.title,t.left]),markLine:{data:[{xAxis:Object(l["sum"])(s)/s.length}]}}),d.series.push({name:"Right boundary",type:"line",step:"middle",areaStyle:{opacity:.25},data:r.map(t=>[t.title,t.right]),markLine:{data:[{xAxis:Object(l["sum"])(a)/a.length}]}}),d},dateStat(t,e){let n=e.responses.filter(t=>t),i=[];n.forEach(t=>{i=i.concat(t)});let s=u(i);if(!s)return{};let a={color:[this.$vuetify.theme.themes.light.primary],grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"category"},yAxis:{type:"value"},series:[{name:"",type:"bar",itemStyle:{opacity:.5},data:[]}]};return a.xAxis.data=s.map(t=>t.title),a.series[0].data=s.map(t=>t.value),this.height=250,a},associationStat(t,e){if(!t.options.entities)return{};let n=e.responses.filter(t=>t),i=[];n.forEach(t=>{i=i.concat(t)});let s=[];return t.options.entities.forEach(e=>{t.options.entities.forEach(n=>{s.push({e1:e,e2:n,values:i.filter(i=>i.e1==e.id&&i.e2==n.id&&i.value&&Object(l["find"])(t.options.scale,t=>t.value==i.value)).map(t=>t.value)})})}),s=s.filter(t=>t.values.length>0),s.forEach(e=>{let n=Object(l["countBy"])(e.values);e.data=t.options.scale.map(t=>({title:t.value,value:n[t.value]?n[t.value]:0}))}),s.forEach(e=>{e.chartOptions={color:[this.$vuetify.theme.themes.light.primary],angleAxis:{type:"category",data:t.options.scale.map(t=>t.value),axisLabel:{margin:2,fontSize:8,fontWeight:"bold",color:this.$vuetify.theme.themes.light.secondary}},radiusAxis:{splitNumber:1,axisLine:{show:!1},axisLabel:{show:!1}},polar:{},series:[{type:"bar",itemStyle:{opacity:.5},data:e.data.map(t=>t.value),coordinateSystem:"polar"}]}}),s},influenceStat(t,e){if(!t.options.effects||!t.options.factors)return{};let n=e.responses.filter(t=>t),i=[];n.forEach(t=>{i=i.concat(t)});let s=[];return t.options.factors.forEach(e=>{t.options.effects.forEach(n=>{s.push({factor:e,effect:n,values:i.filter(i=>i.e1==e.id&&i.e2==n.id&&i.value&&Object(l["find"])(t.options.scale,t=>t.value==i.value)).map(t=>t.value)})})}),s=s.filter(t=>t.values.length>0),s.forEach(e=>{let n=Object(l["countBy"])(e.values);e.data=t.options.scale.map(t=>({title:t.value,value:n[t.value]?n[t.value]:0}))}),s.forEach(e=>{e.chartOptions={color:[this.$vuetify.theme.themes.light.primary],angleAxis:{type:"category",data:t.options.scale.map(t=>t.value),axisLabel:{margin:2,fontSize:8,fontWeight:"bold",color:this.$vuetify.theme.themes.light.secondary}},radiusAxis:{splitNumber:1,axisLine:{show:!1},axisLabel:{show:!1}},polar:{},series:[{type:"bar",itemStyle:{opacity:.5},data:e.data.map(t=>t.value),coordinateSystem:"polar"}]}}),s},priorityStat(t,e){if(!t.options.nominals)return{};let n=e.responses.filter(t=>t),i=[];n.forEach(t=>{i=i.concat(t)});let s=t.options.nominals.map(e=>{let n=i.filter(t=>t.id==e.id);return e.data=t.options.nominals.map((t,e)=>({priority:e+1,value:n.filter(t=>t.priority==e+1).length/n.length})),e.priority=Object(l["sumBy"])(e.data,t=>t.priority*t.value),e});s=s.map(t=>(t.data=t.data.map(e=>(e.value=e.value*t.priority,e)),t)),s=Object(l["orderBy"])(s,"priority"),s.reverse();let a={legend:{data:t.options.nominals.map((t,e)=>(e+1).toFixed(0))},grid:{left:"3%",right:"4%",bottom:"3%",containLabel:!0},xAxis:{type:"value"},yAxis:{type:"category",data:s.map(t=>this.truncate(t.title))},series:s.map((t,e)=>({name:(e+1).toFixed(0),type:"bar",stack:"1",itemStyle:{opacity:.75},data:s.map(t=>t.data[e].value)}))};return a},truncate(t,e){return e=e||50,t.toString().length<=e?t.toString():t.toString().length-e>10?t.toString().substring(0,e)+"...":t.toString()},getQuestionChartOptions(t,e){let n={"One of many selection":this.oneOfManyStat,"Many of many selection":this.manyOfManyStat,Range:this.rangeStat,Rate:this.rateStat,Date:this.dateStat,Association:this.associationStat,Influence:this.influenceStat,Priority:this.priorityStat},i=Object(l["find"])(e.questions,e=>e.id==t.id);return t.options&&i&&t.options.type&&n[t.options.type]?n[t.options.type](t,i):{}}}},y=n("3c5a"),_={name:"form-report-widget",icon:"mdi-view-dashboard-outline",mixins:[a["a"],o["a"],r["a"],m,h],components:{echart:y["default"]},computed:{accessMode(){return{any:{icon:"mdi-account",text:"Any_respondents"},users:{icon:"mdi-account-key",text:"Logged_user"},invited:{icon:"mdi-account-star",text:"Invited_respondents"}}[this.formConfig.config.access.type]}},methods:{getChart(t,e,n){let i="Influence"==t.options.type?Object(l["find"])(t.chartOptions,t=>t.factor.id==e.id&&t.effect.id==n.id):Object(l["find"])(t.chartOptions,t=>t.e1.id==e.id&&t.e2.id==n.id);return i?i.chartOptions:null},cellClass(t){let e="Influence"==t.options.type?Math.trunc(10/t.options.effects.length):Math.trunc(10/t.options.entities.length);return e=e>3?3:e,"xs"+e},onPageStart(){this.config.form&&this.loadReport(this.config.form)},loadReport(t){this.loadForm(t.id).then(e=>{this.formConfig=e;let n=this.formConfig.config.locale||"en";this.setLocale(n),this.getStat(t.id).then(t=>{this.formStat=t,this.getChartOptions(),this.formConfig.config.questions.forEach(t=>{t.chartOptions=this.getQuestionChartOptions(t,this.formStat)})})})},onChangeForm(t){this.loadReport(t),this.setNeedSave(!0)},getChartOptions(){let t=this.getResponseDynamic(this.formStat),e=Object(l["max"])(t.map(t=>t.value));this.chartOptions={redraw:!1,tooltip:{position:"top",formatter:t=>{let n=t.data[0],i=t.data[1];return n=Object(l["isNumber"])(n)?n.toFixed(2):n,i=Math.round(i*e)+" resp.",n+", "+i}},title:[{top:5,textBaseline:"middle",text:"Pulse",textStyle:{fontSize:12,fontWeight:"normal"}}],color:[this.$vuetify.theme.themes.light.primary],singleAxis:[{left:150,top:"5%",height:"80%",type:"category",boundaryGap:!1,data:t.map(t=>t.title),axisLabel:{interval:2},axisLine:{show:!0,lineStyle:{width:.5}},axisTick:{show:!1}}],series:[{singleAxisIndex:0,coordinateSystem:"singleAxis",type:"scatter",data:t.map(t=>[t.title,t.height]),symbolSize:function(t){return 80*t[1]+3},itemStyle:{opacity:.5}}]}}},props:["config"],watch:{},created(){this.loadFormList().then(t=>this.formList=t)},mounted(){this.$emit("init")},data:()=>({formList:[],formConfig:null,formStat:null,moment:c.a,Date:Date,chartOptions:{},i18n:{en:{Last_update:"Last update:",Application:"Application:",Access_for:"Access for:",Any_respondents:"Any respondents",Logged_user:"Logged user",Invited_respondents:"Invited respondents",Opened:"was opened",Closed:"was closed",Question:"Question",Required:"required",Responses:"Responses",Respondent_activity:"Respondent activity:",Total:"Total",Response_type:"Response type:","One of many selection":"one of many selection","Many of many selection":"many of many selection",Rate:"rate",Range:"range",Date:"date",Association:"association",Influence:"influence",Statistic:"Statistic",Entities:"Entities:",Factors:"Factors:",Effects:"Effects:",Scale:"Scale:",Nominals:"Alternatives:",Respondent_can_add_max:"Respondent can add max",Self_variants:"self variants",Respondents_collaboration_detected:"Respondents collaboration detected",Respondent_shuld_select_between:"Respondent shuld select between",And:"and",Variants:"variants",Range_between:"Range between",By_step:"by step",Priority:"priority"},uk:{Last_update:"Останнє оновлення:",Application:"Застосунок:",Access_for:"Доступ для:",Any_respondents:"будь-кого",Logged_user:"зареєстрованих користувачів",Invited_respondents:"запрошених респондентів",Opened:"було відкрито",Closed:"було закрито",Question:"Запитання",Required:"обов'язкове",Responses:"відповідей",Respondent_activity:"Активність респондентів:",Total:"Загалом",Response_type:"Тип відповіді:","One of many selection":"вибір одного з багатьох варіантів","Many of many selection":"вибір багатьох з багатьох варіантів",Rate:"визначення рейтингу",Range:"визначення діапазону",Date:"визначення дати",Association:"оцінювання зв'язків",Influence:"оцінювання впливів",Statistic:"Статистика",Entities:"Сутності:",Factors:"Фактори:",Effects:"Ефекти:",Scale:"Шкала:",Nominals:"Варіанти:",Respondent_can_add_max:"Респондент може додати максимум",Self_variants:"власних варіантів",Respondents_collaboration_detected:"Респонденти можуть взаємодіяти",Respondent_shuld_select_between:"Респондент має обрати від",And:"до",Variants:"варіантів",Range_between:"Діапазон від",By_step:"з кроком",Priority:"визначення пріоритетів"}}})},g=_,v=n("2877"),x=n("fef8"),b=n.n(x),w=n("b0af"),S=n("2b5d"),$=n("a523"),C=n("ce7e"),D=n("0e8f"),A=n("a722"),O=Object(v["a"])(g,i,s,!1,null,null,null);e["default"]=O.exports;b()(O,{VCard:w["a"],VCombobox:S["a"],VContainer:$["a"],VDivider:C["a"],VFlex:D["a"],VLayout:A["a"]})},"2b5d":function(t,e,n){"use strict";n("2bfd");var i=n("b974"),s=n("c6a6"),a=n("80d2");e["a"]=s["a"].extend({name:"v-combobox",props:{delimiters:{type:Array,default:()=>[]},returnObject:{type:Boolean,default:!0}},data:()=>({editingIndex:-1}),computed:{computedCounterValue(){return this.multiple?this.selectedItems.length:(this.internalSearch||"").toString().length},hasSlot(){return i["a"].options.computed.hasSlot.call(this)||this.multiple},isAnyValueAllowed(){return!0},menuCanShow(){return!!this.isFocused&&(this.hasDisplayedItems||!!this.$slots["no-data"]&&!this.hideNoData)},searchIsDirty(){return null!=this.internalSearch}},methods:{onInternalSearchChanged(t){if(t&&this.multiple&&this.delimiters.length){const e=this.delimiters.find(e=>t.endsWith(e));null!=e&&(this.internalSearch=t.slice(0,t.length-e.length),this.updateTags())}this.updateMenuDimensions()},genInput(){const t=s["a"].options.methods.genInput.call(this);return delete t.data.attrs.name,t.data.on.paste=this.onPaste,t},genChipSelection(t,e){const n=i["a"].options.methods.genChipSelection.call(this,t,e);return this.multiple&&(n.componentOptions.listeners={...n.componentOptions.listeners,dblclick:()=>{this.editingIndex=e,this.internalSearch=this.getText(t),this.selectedIndex=-1}}),n},onChipInput(t){i["a"].options.methods.onChipInput.call(this,t),this.editingIndex=-1},onEnterDown(t){t.preventDefault(),this.getMenuIndex()>-1||this.$nextTick(this.updateSelf)},onKeyDown(t){const e=t.keyCode;!t.ctrlKey&&[a["z"].home,a["z"].end].includes(e)||i["a"].options.methods.onKeyDown.call(this,t),this.multiple&&e===a["z"].left&&0===this.$refs.input.selectionStart?this.updateSelf():e===a["z"].enter&&this.onEnterDown(t),this.changeSelectedIndex(e)},onTabDown(t){if(this.multiple&&this.internalSearch&&-1===this.getMenuIndex())return t.preventDefault(),t.stopPropagation(),this.updateTags();s["a"].options.methods.onTabDown.call(this,t)},selectItem(t){this.editingIndex>-1?this.updateEditing():(s["a"].options.methods.selectItem.call(this,t),this.internalSearch&&this.multiple&&this.getText(t).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())&&(this.internalSearch=null))},setSelectedItems(){null==this.internalValue||""===this.internalValue?this.selectedItems=[]:this.selectedItems=this.multiple?this.internalValue:[this.internalValue]},setValue(t){i["a"].options.methods.setValue.call(this,void 0===t?this.internalSearch:t)},updateEditing(){const t=this.internalValue.slice(),e=this.selectedItems.findIndex(t=>this.getText(t)===this.internalSearch);if(e>-1){const n="object"===typeof t[e]?Object.assign({},t[e]):t[e];t.splice(e,1),t.push(n)}else t[this.editingIndex]=this.internalSearch;this.setValue(t),this.editingIndex=-1,this.internalSearch=null},updateCombobox(){if(!this.searchIsDirty)return;this.internalSearch!==this.getText(this.internalValue)&&this.setValue();const t=Boolean(this.$scopedSlots.selection)||this.hasChips;t&&(this.internalSearch=null)},updateSelf(){this.multiple?this.updateTags():this.updateCombobox()},updateTags(){const t=this.getMenuIndex();if(t<0&&!this.searchIsDirty||!this.internalSearch)return;if(this.editingIndex>-1)return this.updateEditing();const e=this.selectedItems.findIndex(t=>this.internalSearch===this.getText(t)),n=e>-1&&"object"===typeof this.selectedItems[e]?Object.assign({},this.selectedItems[e]):this.internalSearch;if(e>-1){const t=this.internalValue.slice();t.splice(e,1),this.setValue(t)}if(t>-1)return this.internalSearch=null;this.selectItem(n),this.internalSearch=null},onPaste(t){var e;if(this.$emit("paste",t),!this.multiple||this.searchIsDirty)return;const n=null===(e=t.clipboardData)||void 0===e?void 0:e.getData("text/vnd.vuetify.autocomplete.item+plain");n&&-1===this.findExistingIndex(n)&&(t.preventDefault(),i["a"].options.methods.selectItem.call(this,n))},clearableCallback(){this.editingIndex=-1,s["a"].options.methods.clearableCallback.call(this)}}})},"36ae":function(t,e,n){"use strict";n("7d82")},"3c5a":function(t,e,n){"use strict";n.r(e);var i=function(){var t=this,e=t._self._c;return e("div",{staticClass:"echart",style:t.style})},s=[],a=n("313e"),o=n("4e14"),r={name:"echart",mixins:[o["a"]],computed:{style(){return{height:(this.height||250)+"px"}}},methods:{initChart(t){this.chart=a["init"](this.$el,null,{height:this.height,width:"auto"}),this.resizeHandler=()=>{this.width=this.$el.clientWidth,this.chart.resize()},window.attachEvent?window.attachEvent("onresize",this.resizeHandler):window.addEventListener("resize",this.resizeHandler),t&&setTimeout(()=>{this.chart.setOption(t),this.chart.on("click",t=>{this.$emit("chart-event",t)})},10),this.on({event:"slide-start",callback:()=>{setTimeout(()=>{this.chart&&this.options&&this.chart.setOption(this.options,!0),this.chart.resize()},10)},rule:()=>!0}),this.on({event:"update-dialog-view",callback:()=>{setTimeout(()=>{this.chart&&this.options&&this.chart.setOption(this.options,!0),this.chart.resize()},10)},rule:()=>!0})}},props:["options","height"],watch:{options:{handler:function(t){t&&this.chart&&setTimeout(()=>{this.chart.setOption(t,!0),this.chart.resize()},10)},deep:!0},height(t){setTimeout(()=>{this.chart.resize({height:t},10)})}},mounted(){this.initChart(this.options)},beforeDestroy(){window.attachEvent?window.detachEvent("onresize",this.resizeHandler):window.removeEventListener("resize",this.resizeHandler,!1),this.off()},data:()=>({chart:null,resizeHandler:null})},l=r,d=(n("36ae"),n("2877")),c=Object(d["a"])(l,i,s,!1,null,"7d96c1a5",null);e["default"]=c.exports},"7d82":function(t,e,n){},"852a":function(t,e,n){"use strict";var i=n("2ef0");e["a"]={methods:{translate(t){return this.$t(`${this.id}_${t}`)},_initI18n(){if(!this.i18n)return;this.$i18n_id=this.$djvue.randomName();let t={en:Object(i["mapKeys"])(this.i18n.en,(t,e)=>`${this.id}_${e}`),uk:Object(i["mapKeys"])(this.i18n.uk,(t,e)=>`${this.id}_${e}`)};this.$i18n.mergeLocaleMessage("en",t.en),this.$i18n.mergeLocaleMessage("uk",t.uk)},_destroyI18n(){}},created(){this._initI18n()},beforeDestroy(){this._destroyI18n()}}},a523:function(t,e,n){"use strict";n("20f6"),n("4b85");var i=n("e8f2"),s=n("d9f7");e["a"]=Object(i["a"])("container").extend({name:"v-container",functional:!0,props:{id:String,tag:{type:String,default:"div"},fluid:{type:Boolean,default:!1}},render(t,{props:e,data:n,children:i}){let a;const{attrs:o}=n;return o&&(n.attrs={},a=Object.keys(o).filter(t=>{if("slot"===t)return!1;const e=o[t];return t.startsWith("data-")?(n.attrs[t]=e,!1):e||"string"===typeof e})),e.id&&(n.domProps=n.domProps||{},n.domProps.id=e.id),t(e.tag,Object(s["a"])(n,{staticClass:"container",class:Array({"container--fluid":e.fluid}).concat(a||[])}),i)}})}}]);
//# sourceMappingURL=chunk-3246118a.e4e74cf0.js.map